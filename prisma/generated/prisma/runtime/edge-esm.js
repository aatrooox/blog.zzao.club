/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */
const da = Object.create; const on = Object.defineProperty; const fa = Object.getOwnPropertyDescriptor; const ga = Object.getOwnPropertyNames; const ha = Object.getPrototypeOf; const ya = Object.prototype.hasOwnProperty; const de = (e, t) => () => (e && (t = e(e = 0)), t); const Re = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports); const sr = (e, t) => { for (const r in t)on(e, r, { get: t[r], enumerable: !0 }) }; const wa = (e, t, r, n) => {
  if (t && typeof t == 'object' || typeof t == 'function') {
    for (const i of ga(t))!ya.call(e, i) && i !== r && on(e, i, { get: () => t[i], enumerable: !(n = fa(t, i)) || n.enumerable })
  } return e
}; const Ue = (e, t, r) => (r = e != null ? da(ha(e)) : {}, wa(t || !e || !e.__esModule ? on(r, 'default', { value: e, enumerable: !0 }) : r, e)); let y; let b; const u = de(() => { 'use strict'; y = { nextTick: (e, ...t) => { setTimeout(() => { e(...t) }, 0) }, env: {}, version: '', cwd: () => '/', stderr: {}, argv: ['/bin/node'], pid: 1e4 }, { cwd: b } = y }); let x; const c = de(() => { 'use strict'; x = globalThis.performance ?? (() => { const e = Date.now(); return { now: () => Date.now() - e } })() }); let E; const p = de(() => { 'use strict'; E = () => {}; E.prototype = E }); const m = de(() => { 'use strict' }); const Ti = Re((ze) => {
  'use strict'; d(); u(); c(); p(); m(); const ci = (e, t) => () => (t || e((t = { exports: {} }).exports, t), t.exports); const Ea = ci((e) => {
    'use strict'; e.byteLength = l, e.toByteArray = g, e.fromByteArray = k; const t = []; const r = []; const n = typeof Uint8Array < 'u' ? Uint8Array : Array; const i = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; for (o = 0, s = i.length; o < s; ++o)t[o] = i[o], r[i.charCodeAt(o)] = o; let o, s; r[45] = 62, r[95] = 63; function a(C) {
      const S = C.length; if (S % 4 > 0)
        throw new Error('Invalid string. Length must be a multiple of 4'); let M = C.indexOf('='); M === -1 && (M = S); const _ = M === S ? 0 : 4 - M % 4; return [M, _]
    } function l(C) { const S = a(C); const M = S[0]; const _ = S[1]; return (M + _) * 3 / 4 - _ } function f(C, S, M) { return (S + M) * 3 / 4 - M } function g(C) { let S; const M = a(C); const _ = M[0]; const B = M[1]; const I = new n(f(C, _, B)); let L = 0; const oe = B > 0 ? _ - 4 : _; let Q; for (Q = 0; Q < oe; Q += 4)S = r[C.charCodeAt(Q)] << 18 | r[C.charCodeAt(Q + 1)] << 12 | r[C.charCodeAt(Q + 2)] << 6 | r[C.charCodeAt(Q + 3)], I[L++] = S >> 16 & 255, I[L++] = S >> 8 & 255, I[L++] = S & 255; return B === 2 && (S = r[C.charCodeAt(Q)] << 2 | r[C.charCodeAt(Q + 1)] >> 4, I[L++] = S & 255), B === 1 && (S = r[C.charCodeAt(Q)] << 10 | r[C.charCodeAt(Q + 1)] << 4 | r[C.charCodeAt(Q + 2)] >> 2, I[L++] = S >> 8 & 255, I[L++] = S & 255), I } function h(C) { return t[C >> 18 & 63] + t[C >> 12 & 63] + t[C >> 6 & 63] + t[C & 63] } function T(C, S, M) { for (var _, B = [], I = S; I < M; I += 3)_ = (C[I] << 16 & 16711680) + (C[I + 1] << 8 & 65280) + (C[I + 2] & 255), B.push(h(_)); return B.join('') } function k(C) { for (var S, M = C.length, _ = M % 3, B = [], I = 16383, L = 0, oe = M - _; L < oe; L += I)B.push(T(C, L, L + I > oe ? oe : L + I)); return _ === 1 ? (S = C[M - 1], B.push(`${t[S >> 2] + t[S << 4 & 63]}==`)) : _ === 2 && (S = (C[M - 2] << 8) + C[M - 1], B.push(`${t[S >> 10] + t[S >> 4 & 63] + t[S << 2 & 63]}=`)), B.join('') }
  }); const ba = ci((e) => {
    e.read = function (t, r, n, i, o) {
      let s; let a; const l = o * 8 - i - 1; const f = (1 << l) - 1; const g = f >> 1; let h = -7; let T = n ? o - 1 : 0; const k = n ? -1 : 1; let C = t[r + T]; for (T += k, s = C & (1 << -h) - 1, C >>= -h, h += l; h > 0; s = s * 256 + t[r + T], T += k, h -= 8);for (a = s & (1 << -h) - 1, s >>= -h, h += i; h > 0; a = a * 256 + t[r + T], T += k, h -= 8);if (s === 0) {
        s = 1 - g
      }
      else {
        if (s === f)
          return a ? Number.NaN : (C ? -1 : 1) * (1 / 0); a = a + 2 ** i, s = s - g
      } return (C ? -1 : 1) * a * 2 ** (s - i)
    }, e.write = function (t, r, n, i, o, s) { let a; let l; let f; let g = s * 8 - o - 1; const h = (1 << g) - 1; const T = h >> 1; const k = o === 23 ? 2 ** -24 - 2 ** -77 : 0; let C = i ? 0 : s - 1; const S = i ? 1 : -1; const M = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0; for (r = Math.abs(r), isNaN(r) || r === 1 / 0 ? (l = isNaN(r) ? 1 : 0, a = h) : (a = Math.floor(Math.log(r) / Math.LN2), r * (f = 2 ** -a) < 1 && (a--, f *= 2), a + T >= 1 ? r += k / f : r += k * 2 ** (1 - T), r * f >= 2 && (a++, f /= 2), a + T >= h ? (l = 0, a = h) : a + T >= 1 ? (l = (r * f - 1) * 2 ** o, a = a + T) : (l = r * 2 ** (T - 1) * 2 ** o, a = 0)); o >= 8; t[n + C] = l & 255, C += S, l /= 256, o -= 8);for (a = a << o | l, g += o; g > 0; t[n + C] = a & 255, C += S, a /= 256, g -= 8);t[n + C - S] |= M * 128 }
  }); const sn = Ea(); const Ke = ba(); const si = typeof Symbol == 'function' && typeof Symbol.for == 'function' ? Symbol.for('nodejs.util.inspect.custom') : null; ze.Buffer = A; ze.SlowBuffer = Ca; ze.INSPECT_MAX_BYTES = 50; const ar = 2147483647; ze.kMaxLength = ar; A.TYPED_ARRAY_SUPPORT = xa(); !A.TYPED_ARRAY_SUPPORT && typeof console < 'u' && typeof console.error == 'function' && console.error('This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.'); function xa() {
    try { const e = new Uint8Array(1); const t = { foo() { return 42 } }; return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), e.foo() === 42 }
    catch { return !1 }
  }Object.defineProperty(A.prototype, 'parent', { enumerable: !0, get() {
    if (A.isBuffer(this))
      return this.buffer
  } }); Object.defineProperty(A.prototype, 'offset', { enumerable: !0, get() {
    if (A.isBuffer(this))
      return this.byteOffset
  } }); function xe(e) {
    if (e > ar)
      throw new RangeError(`The value "${e}" is invalid for option "size"`); const t = new Uint8Array(e); return Object.setPrototypeOf(t, A.prototype), t
  } function A(e, t, r) {
    if (typeof e == 'number') {
      if (typeof t == 'string')
        throw new TypeError('The "string" argument must be of type string. Received type number'); return un(e)
    } return pi(e, t, r)
  }A.poolSize = 8192; function pi(e, t, r) {
    if (typeof e == 'string')
      return va(e, t); if (ArrayBuffer.isView(e))
      return Ta(e); if (e == null)
      throw new TypeError(`The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ${typeof e}`); if (fe(e, ArrayBuffer) || e && fe(e.buffer, ArrayBuffer) || typeof SharedArrayBuffer < 'u' && (fe(e, SharedArrayBuffer) || e && fe(e.buffer, SharedArrayBuffer)))
      return di(e, t, r); if (typeof e == 'number')
      throw new TypeError('The "value" argument must not be of type number. Received type number'); const n = e.valueOf && e.valueOf(); if (n != null && n !== e)
      return A.from(n, t, r); const i = Aa(e); if (i)
      return i; if (typeof Symbol < 'u' && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] == 'function')
      return A.from(e[Symbol.toPrimitive]('string'), t, r); throw new TypeError(`The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ${typeof e}`)
  }A.from = function (e, t, r) { return pi(e, t, r) }; Object.setPrototypeOf(A.prototype, Uint8Array.prototype); Object.setPrototypeOf(A, Uint8Array); function mi(e) {
    if (typeof e != 'number')
      throw new TypeError('"size" argument must be of type number'); if (e < 0)
      throw new RangeError(`The value "${e}" is invalid for option "size"`)
  } function Pa(e, t, r) { return mi(e), e <= 0 ? xe(e) : t !== void 0 ? typeof r == 'string' ? xe(e).fill(t, r) : xe(e).fill(t) : xe(e) }A.alloc = function (e, t, r) { return Pa(e, t, r) }; function un(e) { return mi(e), xe(e < 0 ? 0 : cn(e) | 0) }A.allocUnsafe = function (e) { return un(e) }; A.allocUnsafeSlow = function (e) { return un(e) }; function va(e, t) {
    if ((typeof t != 'string' || t === '') && (t = 'utf8'), !A.isEncoding(t))
      throw new TypeError(`Unknown encoding: ${t}`); const r = fi(e, t) | 0; let n = xe(r); const i = n.write(e, t); return i !== r && (n = n.slice(0, i)), n
  } function an(e) { const t = e.length < 0 ? 0 : cn(e.length) | 0; const r = xe(t); for (let n = 0; n < t; n += 1)r[n] = e[n] & 255; return r } function Ta(e) { if (fe(e, Uint8Array)) { const t = new Uint8Array(e); return di(t.buffer, t.byteOffset, t.byteLength) } return an(e) } function di(e, t, r) {
    if (t < 0 || e.byteLength < t)
      throw new RangeError('"offset" is outside of buffer bounds'); if (e.byteLength < t + (r || 0))
      throw new RangeError('"length" is outside of buffer bounds'); let n; return t === void 0 && r === void 0 ? n = new Uint8Array(e) : r === void 0 ? n = new Uint8Array(e, t) : n = new Uint8Array(e, t, r), Object.setPrototypeOf(n, A.prototype), n
  } function Aa(e) {
    if (A.isBuffer(e)) { const t = cn(e.length) | 0; const r = xe(t); return r.length === 0 || e.copy(r, 0, 0, t), r } if (e.length !== void 0)
      return typeof e.length != 'number' || mn(e.length) ? xe(0) : an(e); if (e.type === 'Buffer' && Array.isArray(e.data))
      return an(e.data)
  } function cn(e) {
    if (e >= ar)
      throw new RangeError(`Attempt to allocate Buffer larger than maximum size: 0x${ar.toString(16)} bytes`); return e | 0
  } function Ca(e) { return +e != e && (e = 0), A.alloc(+e) }A.isBuffer = function (e) { return e != null && e._isBuffer === !0 && e !== A.prototype }; A.compare = function (e, t) {
    if (fe(e, Uint8Array) && (e = A.from(e, e.offset, e.byteLength)), fe(t, Uint8Array) && (t = A.from(t, t.offset, t.byteLength)), !A.isBuffer(e) || !A.isBuffer(t))
      throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'); if (e === t)
      return 0; let r = e.length; let n = t.length; for (let i = 0, o = Math.min(r, n); i < o; ++i) {
      if (e[i] !== t[i]) { r = e[i], n = t[i]; break }
    } return r < n ? -1 : n < r ? 1 : 0
  }; A.isEncoding = function (e) { switch (String(e).toLowerCase()) { case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'latin1':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return !0; default:return !1 } }; A.concat = function (e, t) {
    if (!Array.isArray(e))
      throw new TypeError('"list" argument must be an Array of Buffers'); if (e.length === 0)
      return A.alloc(0); let r; if (t === void 0) {
      for (t = 0, r = 0; r < e.length; ++r)t += e[r].length
    } const n = A.allocUnsafe(t); let i = 0; for (r = 0; r < e.length; ++r) {
      let o = e[r]; if (fe(o, Uint8Array))
        i + o.length > n.length ? (A.isBuffer(o) || (o = A.from(o)), o.copy(n, i)) : Uint8Array.prototype.set.call(n, o, i); else if (A.isBuffer(o))
        o.copy(n, i); else throw new TypeError('"list" argument must be an Array of Buffers'); i += o.length
    } return n
  }; function fi(e, t) {
    if (A.isBuffer(e))
      return e.length; if (ArrayBuffer.isView(e) || fe(e, ArrayBuffer))
      return e.byteLength; if (typeof e != 'string')
      throw new TypeError(`The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ${typeof e}`); const r = e.length; const n = arguments.length > 2 && arguments[2] === !0; if (!n && r === 0)
      return 0; let i = !1; for (;;) {
      switch (t) {
        case 'ascii':case 'latin1':case 'binary':return r; case 'utf8':case 'utf-8':return ln(e).length; case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return r * 2; case 'hex':return r >>> 1; case 'base64':return vi(e).length; default:if (i)
          return n ? -1 : ln(e).length; t = (`${t}`).toLowerCase(), i = !0
      }
    }
  }A.byteLength = fi; function Ra(e, t, r) {
    let n = !1; if ((t === void 0 || t < 0) && (t = 0), t > this.length || ((r === void 0 || r > this.length) && (r = this.length), r <= 0) || (r >>>= 0, t >>>= 0, r <= t))
      return ''; for (e || (e = 'utf8'); ;) {
      switch (e) {
        case 'hex':return La(this, t, r); case 'utf8':case 'utf-8':return hi(this, t, r); case 'ascii':return Na(this, t, r); case 'latin1':case 'binary':return Fa(this, t, r); case 'base64':return Ma(this, t, r); case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return Ua(this, t, r); default:if (n)
          throw new TypeError(`Unknown encoding: ${e}`); e = (`${e}`).toLowerCase(), n = !0
      }
    }
  }A.prototype._isBuffer = !0; function Be(e, t, r) { const n = e[t]; e[t] = e[r], e[r] = n }A.prototype.swap16 = function () {
    const e = this.length; if (e % 2 !== 0)
      throw new RangeError('Buffer size must be a multiple of 16-bits'); for (let t = 0; t < e; t += 2)Be(this, t, t + 1); return this
  }; A.prototype.swap32 = function () {
    const e = this.length; if (e % 4 !== 0)
      throw new RangeError('Buffer size must be a multiple of 32-bits'); for (let t = 0; t < e; t += 4)Be(this, t, t + 3), Be(this, t + 1, t + 2); return this
  }; A.prototype.swap64 = function () {
    const e = this.length; if (e % 8 !== 0)
      throw new RangeError('Buffer size must be a multiple of 64-bits'); for (let t = 0; t < e; t += 8)Be(this, t, t + 7), Be(this, t + 1, t + 6), Be(this, t + 2, t + 5), Be(this, t + 3, t + 4); return this
  }; A.prototype.toString = function () { const e = this.length; return e === 0 ? '' : arguments.length === 0 ? hi(this, 0, e) : Ra.apply(this, arguments) }; A.prototype.toLocaleString = A.prototype.toString; A.prototype.equals = function (e) {
    if (!A.isBuffer(e))
      throw new TypeError('Argument must be a Buffer'); return this === e ? !0 : A.compare(this, e) === 0
  }; A.prototype.inspect = function () { let e = ''; const t = ze.INSPECT_MAX_BYTES; return e = this.toString('hex', 0, t).replace(/(.{2})/g, '$1 ').trim(), this.length > t && (e += ' ... '), `<Buffer ${e}>` }; si && (A.prototype[si] = A.prototype.inspect); A.prototype.compare = function (e, t, r, n, i) {
    if (fe(e, Uint8Array) && (e = A.from(e, e.offset, e.byteLength)), !A.isBuffer(e))
      throw new TypeError(`The "target" argument must be one of type Buffer or Uint8Array. Received type ${typeof e}`); if (t === void 0 && (t = 0), r === void 0 && (r = e ? e.length : 0), n === void 0 && (n = 0), i === void 0 && (i = this.length), t < 0 || r > e.length || n < 0 || i > this.length)
      throw new RangeError('out of range index'); if (n >= i && t >= r)
      return 0; if (n >= i)
      return -1; if (t >= r)
      return 1; if (t >>>= 0, r >>>= 0, n >>>= 0, i >>>= 0, this === e)
      return 0; let o = i - n; let s = r - t; const a = Math.min(o, s); const l = this.slice(n, i); const f = e.slice(t, r); for (let g = 0; g < a; ++g) {
      if (l[g] !== f[g]) { o = l[g], s = f[g]; break }
    } return o < s ? -1 : s < o ? 1 : 0
  }; function gi(e, t, r, n, i) {
    if (e.length === 0)
      return -1; if (typeof r == 'string' ? (n = r, r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648), r = +r, mn(r) && (r = i ? 0 : e.length - 1), r < 0 && (r = e.length + r), r >= e.length) {
      if (i)
        return -1; r = e.length - 1
    }
    else if (r < 0) {
      if (i)
        r = 0; else return -1
    } if (typeof t == 'string' && (t = A.from(t, n)), A.isBuffer(t))
      return t.length === 0 ? -1 : ai(e, t, r, n, i); if (typeof t == 'number')
      return t = t & 255, typeof Uint8Array.prototype.indexOf == 'function' ? i ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : ai(e, [t], r, n, i); throw new TypeError('val must be string, number or Buffer')
  } function ai(e, t, r, n, i) {
    let o = 1; let s = e.length; let a = t.length; if (n !== void 0 && (n = String(n).toLowerCase(), n === 'ucs2' || n === 'ucs-2' || n === 'utf16le' || n === 'utf-16le')) {
      if (e.length < 2 || t.length < 2)
        return -1; o = 2, s /= 2, a /= 2, r /= 2
    } function l(g, h) { return o === 1 ? g[h] : g.readUInt16BE(h * o) } let f; if (i) {
      let g = -1; for (f = r; f < s; f++) {
        if (l(e, f) === l(t, g === -1 ? 0 : f - g)) {
          if (g === -1 && (g = f), f - g + 1 === a)
            return g * o
        }
        else {
          g !== -1 && (f -= f - g), g = -1
        }
      }
    }
    else {
      for (r + a > s && (r = s - a), f = r; f >= 0; f--) {
        let g = !0; for (let h = 0; h < a; h++) {
          if (l(e, f + h) !== l(t, h)) { g = !1; break }
        } if (g)
          return f
      }
    } return -1
  }A.prototype.includes = function (e, t, r) { return this.indexOf(e, t, r) !== -1 }; A.prototype.indexOf = function (e, t, r) { return gi(this, e, t, r, !0) }; A.prototype.lastIndexOf = function (e, t, r) { return gi(this, e, t, r, !1) }; function Sa(e, t, r, n) {
    r = Number(r) || 0; const i = e.length - r; n ? (n = Number(n), n > i && (n = i)) : n = i; const o = t.length; n > o / 2 && (n = o / 2); let s; for (s = 0; s < n; ++s) {
      const a = Number.parseInt(t.substr(s * 2, 2), 16); if (mn(a))
        return s; e[r + s] = a
    } return s
  } function ka(e, t, r, n) { return lr(ln(t, e.length - r), e, r, n) } function Ia(e, t, r, n) { return lr(Va(t), e, r, n) } function Oa(e, t, r, n) { return lr(vi(t), e, r, n) } function Da(e, t, r, n) { return lr(ja(t, e.length - r), e, r, n) }A.prototype.write = function (e, t, r, n) {
    if (t === void 0)
      n = 'utf8', r = this.length, t = 0; else if (r === void 0 && typeof t == 'string')
      n = t, r = this.length, t = 0; else if (isFinite(t))
      t = t >>> 0, isFinite(r) ? (r = r >>> 0, n === void 0 && (n = 'utf8')) : (n = r, r = void 0); else throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported'); const i = this.length - t; if ((r === void 0 || r > i) && (r = i), e.length > 0 && (r < 0 || t < 0) || t > this.length)
      throw new RangeError('Attempt to write outside buffer bounds'); n || (n = 'utf8'); let o = !1; for (;;) {
      switch (n) {
        case 'hex':return Sa(this, e, t, r); case 'utf8':case 'utf-8':return ka(this, e, t, r); case 'ascii':case 'latin1':case 'binary':return Ia(this, e, t, r); case 'base64':return Oa(this, e, t, r); case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':return Da(this, e, t, r); default:if (o)
          throw new TypeError(`Unknown encoding: ${n}`); n = (`${n}`).toLowerCase(), o = !0
      }
    }
  }; A.prototype.toJSON = function () { return { type: 'Buffer', data: Array.prototype.slice.call(this._arr || this, 0) } }; function Ma(e, t, r) { return t === 0 && r === e.length ? sn.fromByteArray(e) : sn.fromByteArray(e.slice(t, r)) } function hi(e, t, r) { r = Math.min(e.length, r); const n = []; let i = t; for (;i < r;) { const o = e[i]; let s = null; let a = o > 239 ? 4 : o > 223 ? 3 : o > 191 ? 2 : 1; if (i + a <= r) { let l, f, g, h; switch (a) { case 1:o < 128 && (s = o); break; case 2:l = e[i + 1], (l & 192) === 128 && (h = (o & 31) << 6 | l & 63, h > 127 && (s = h)); break; case 3:l = e[i + 1], f = e[i + 2], (l & 192) === 128 && (f & 192) === 128 && (h = (o & 15) << 12 | (l & 63) << 6 | f & 63, h > 2047 && (h < 55296 || h > 57343) && (s = h)); break; case 4:l = e[i + 1], f = e[i + 2], g = e[i + 3], (l & 192) === 128 && (f & 192) === 128 && (g & 192) === 128 && (h = (o & 15) << 18 | (l & 63) << 12 | (f & 63) << 6 | g & 63, h > 65535 && h < 1114112 && (s = h)) } }s === null ? (s = 65533, a = 1) : s > 65535 && (s -= 65536, n.push(s >>> 10 & 1023 | 55296), s = 56320 | s & 1023), n.push(s), i += a } return _a(n) } const li = 4096; function _a(e) {
    const t = e.length; if (t <= li)
      return String.fromCharCode.apply(String, e); let r = ''; let n = 0; for (;n < t;)r += String.fromCharCode.apply(String, e.slice(n, n += li)); return r
  } function Na(e, t, r) { let n = ''; r = Math.min(e.length, r); for (let i = t; i < r; ++i)n += String.fromCharCode(e[i] & 127); return n } function Fa(e, t, r) { let n = ''; r = Math.min(e.length, r); for (let i = t; i < r; ++i)n += String.fromCharCode(e[i]); return n } function La(e, t, r) { const n = e.length; (!t || t < 0) && (t = 0), (!r || r < 0 || r > n) && (r = n); let i = ''; for (let o = t; o < r; ++o)i += Ga[e[o]]; return i } function Ua(e, t, r) { const n = e.slice(t, r); let i = ''; for (let o = 0; o < n.length - 1; o += 2)i += String.fromCharCode(n[o] + n[o + 1] * 256); return i }A.prototype.slice = function (e, t) { const r = this.length; e = ~~e, t = t === void 0 ? r : ~~t, e < 0 ? (e += r, e < 0 && (e = 0)) : e > r && (e = r), t < 0 ? (t += r, t < 0 && (t = 0)) : t > r && (t = r), t < e && (t = e); const n = this.subarray(e, t); return Object.setPrototypeOf(n, A.prototype), n }; function K(e, t, r) {
    if (e % 1 !== 0 || e < 0)
      throw new RangeError('offset is not uint'); if (e + t > r)
      throw new RangeError('Trying to access beyond buffer length')
  }A.prototype.readUintLE = A.prototype.readUIntLE = function (e, t, r) { e = e >>> 0, t = t >>> 0, r || K(e, t, this.length); let n = this[e]; let i = 1; let o = 0; for (;++o < t && (i *= 256);)n += this[e + o] * i; return n }; A.prototype.readUintBE = A.prototype.readUIntBE = function (e, t, r) { e = e >>> 0, t = t >>> 0, r || K(e, t, this.length); let n = this[e + --t]; let i = 1; for (;t > 0 && (i *= 256);)n += this[e + --t] * i; return n }; A.prototype.readUint8 = A.prototype.readUInt8 = function (e, t) { return e = e >>> 0, t || K(e, 1, this.length), this[e] }; A.prototype.readUint16LE = A.prototype.readUInt16LE = function (e, t) { return e = e >>> 0, t || K(e, 2, this.length), this[e] | this[e + 1] << 8 }; A.prototype.readUint16BE = A.prototype.readUInt16BE = function (e, t) { return e = e >>> 0, t || K(e, 2, this.length), this[e] << 8 | this[e + 1] }; A.prototype.readUint32LE = A.prototype.readUInt32LE = function (e, t) { return e = e >>> 0, t || K(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216 }; A.prototype.readUint32BE = A.prototype.readUInt32BE = function (e, t) { return e = e >>> 0, t || K(e, 4, this.length), this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]) }; A.prototype.readBigUInt64LE = Se(function (e) { e = e >>> 0, He(e, 'offset'); const t = this[e]; const r = this[e + 7]; (t === void 0 || r === void 0) && Pt(e, this.length - 8); const n = t + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + this[++e] * 2 ** 24; const i = this[++e] + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + r * 2 ** 24; return BigInt(n) + (BigInt(i) << BigInt(32)) }); A.prototype.readBigUInt64BE = Se(function (e) { e = e >>> 0, He(e, 'offset'); const t = this[e]; const r = this[e + 7]; (t === void 0 || r === void 0) && Pt(e, this.length - 8); const n = t * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + this[++e]; const i = this[++e] * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + r; return (BigInt(n) << BigInt(32)) + BigInt(i) }); A.prototype.readIntLE = function (e, t, r) { e = e >>> 0, t = t >>> 0, r || K(e, t, this.length); let n = this[e]; let i = 1; let o = 0; for (;++o < t && (i *= 256);)n += this[e + o] * i; return i *= 128, n >= i && (n -= 2 ** (8 * t)), n }; A.prototype.readIntBE = function (e, t, r) { e = e >>> 0, t = t >>> 0, r || K(e, t, this.length); let n = t; let i = 1; let o = this[e + --n]; for (;n > 0 && (i *= 256);)o += this[e + --n] * i; return i *= 128, o >= i && (o -= 2 ** (8 * t)), o }; A.prototype.readInt8 = function (e, t) { return e = e >>> 0, t || K(e, 1, this.length), this[e] & 128 ? (255 - this[e] + 1) * -1 : this[e] }; A.prototype.readInt16LE = function (e, t) { e = e >>> 0, t || K(e, 2, this.length); const r = this[e] | this[e + 1] << 8; return r & 32768 ? r | 4294901760 : r }; A.prototype.readInt16BE = function (e, t) { e = e >>> 0, t || K(e, 2, this.length); const r = this[e + 1] | this[e] << 8; return r & 32768 ? r | 4294901760 : r }; A.prototype.readInt32LE = function (e, t) { return e = e >>> 0, t || K(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24 }; A.prototype.readInt32BE = function (e, t) { return e = e >>> 0, t || K(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3] }; A.prototype.readBigInt64LE = Se(function (e) { e = e >>> 0, He(e, 'offset'); const t = this[e]; const r = this[e + 7]; (t === void 0 || r === void 0) && Pt(e, this.length - 8); const n = this[e + 4] + this[e + 5] * 2 ** 8 + this[e + 6] * 2 ** 16 + (r << 24); return (BigInt(n) << BigInt(32)) + BigInt(t + this[++e] * 2 ** 8 + this[++e] * 2 ** 16 + this[++e] * 2 ** 24) }); A.prototype.readBigInt64BE = Se(function (e) { e = e >>> 0, He(e, 'offset'); const t = this[e]; const r = this[e + 7]; (t === void 0 || r === void 0) && Pt(e, this.length - 8); const n = (t << 24) + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + this[++e]; return (BigInt(n) << BigInt(32)) + BigInt(this[++e] * 2 ** 24 + this[++e] * 2 ** 16 + this[++e] * 2 ** 8 + r) }); A.prototype.readFloatLE = function (e, t) { return e = e >>> 0, t || K(e, 4, this.length), Ke.read(this, e, !0, 23, 4) }; A.prototype.readFloatBE = function (e, t) { return e = e >>> 0, t || K(e, 4, this.length), Ke.read(this, e, !1, 23, 4) }; A.prototype.readDoubleLE = function (e, t) { return e = e >>> 0, t || K(e, 8, this.length), Ke.read(this, e, !0, 52, 8) }; A.prototype.readDoubleBE = function (e, t) { return e = e >>> 0, t || K(e, 8, this.length), Ke.read(this, e, !1, 52, 8) }; function re(e, t, r, n, i, o) {
    if (!A.isBuffer(e))
      throw new TypeError('"buffer" argument must be a Buffer instance'); if (t > i || t < o)
      throw new RangeError('"value" argument is out of bounds'); if (r + n > e.length)
      throw new RangeError('Index out of range')
  }A.prototype.writeUintLE = A.prototype.writeUIntLE = function (e, t, r, n) { if (e = +e, t = t >>> 0, r = r >>> 0, !n) { const s = 2 ** (8 * r) - 1; re(this, e, t, r, s, 0) } let i = 1; let o = 0; for (this[t] = e & 255; ++o < r && (i *= 256);) this[t + o] = e / i & 255; return t + r }; A.prototype.writeUintBE = A.prototype.writeUIntBE = function (e, t, r, n) { if (e = +e, t = t >>> 0, r = r >>> 0, !n) { const s = 2 ** (8 * r) - 1; re(this, e, t, r, s, 0) } let i = r - 1; let o = 1; for (this[t + i] = e & 255; --i >= 0 && (o *= 256);) this[t + i] = e / o & 255; return t + r }; A.prototype.writeUint8 = A.prototype.writeUInt8 = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 1, 255, 0), this[t] = e & 255, t + 1 }; A.prototype.writeUint16LE = A.prototype.writeUInt16LE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 2, 65535, 0), this[t] = e & 255, this[t + 1] = e >>> 8, t + 2 }; A.prototype.writeUint16BE = A.prototype.writeUInt16BE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = e & 255, t + 2 }; A.prototype.writeUint32LE = A.prototype.writeUInt32LE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = e & 255, t + 4 }; A.prototype.writeUint32BE = A.prototype.writeUInt32BE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = e & 255, t + 4 }; function yi(e, t, r, n, i) { Pi(t, n, i, e, r, 7); let o = Number(t & BigInt(4294967295)); e[r++] = o, o = o >> 8, e[r++] = o, o = o >> 8, e[r++] = o, o = o >> 8, e[r++] = o; let s = Number(t >> BigInt(32) & BigInt(4294967295)); return e[r++] = s, s = s >> 8, e[r++] = s, s = s >> 8, e[r++] = s, s = s >> 8, e[r++] = s, r } function wi(e, t, r, n, i) { Pi(t, n, i, e, r, 7); let o = Number(t & BigInt(4294967295)); e[r + 7] = o, o = o >> 8, e[r + 6] = o, o = o >> 8, e[r + 5] = o, o = o >> 8, e[r + 4] = o; let s = Number(t >> BigInt(32) & BigInt(4294967295)); return e[r + 3] = s, s = s >> 8, e[r + 2] = s, s = s >> 8, e[r + 1] = s, s = s >> 8, e[r] = s, r + 8 }A.prototype.writeBigUInt64LE = Se(function (e, t = 0) { return yi(this, e, t, BigInt(0), BigInt('0xffffffffffffffff')) }); A.prototype.writeBigUInt64BE = Se(function (e, t = 0) { return wi(this, e, t, BigInt(0), BigInt('0xffffffffffffffff')) }); A.prototype.writeIntLE = function (e, t, r, n) { if (e = +e, t = t >>> 0, !n) { const a = 2 ** (8 * r - 1); re(this, e, t, r, a - 1, -a) } let i = 0; let o = 1; let s = 0; for (this[t] = e & 255; ++i < r && (o *= 256);)e < 0 && s === 0 && this[t + i - 1] !== 0 && (s = 1), this[t + i] = (e / o >> 0) - s & 255; return t + r }; A.prototype.writeIntBE = function (e, t, r, n) { if (e = +e, t = t >>> 0, !n) { const a = 2 ** (8 * r - 1); re(this, e, t, r, a - 1, -a) } let i = r - 1; let o = 1; let s = 0; for (this[t + i] = e & 255; --i >= 0 && (o *= 256);)e < 0 && s === 0 && this[t + i + 1] !== 0 && (s = 1), this[t + i] = (e / o >> 0) - s & 255; return t + r }; A.prototype.writeInt8 = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = e & 255, t + 1 }; A.prototype.writeInt16LE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 2, 32767, -32768), this[t] = e & 255, this[t + 1] = e >>> 8, t + 2 }; A.prototype.writeInt16BE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = e & 255, t + 2 }; A.prototype.writeInt32LE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 4, 2147483647, -2147483648), this[t] = e & 255, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4 }; A.prototype.writeInt32BE = function (e, t, r) { return e = +e, t = t >>> 0, r || re(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = e & 255, t + 4 }; A.prototype.writeBigInt64LE = Se(function (e, t = 0) { return yi(this, e, t, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff')) }); A.prototype.writeBigInt64BE = Se(function (e, t = 0) { return wi(this, e, t, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff')) }); function Ei(e, t, r, n, i, o) {
    if (r + n > e.length)
      throw new RangeError('Index out of range'); if (r < 0)
      throw new RangeError('Index out of range')
  } function bi(e, t, r, n, i) { return t = +t, r = r >>> 0, i || Ei(e, t, r, 4, 34028234663852886e22, -34028234663852886e22), Ke.write(e, t, r, n, 23, 4), r + 4 }A.prototype.writeFloatLE = function (e, t, r) { return bi(this, e, t, !0, r) }; A.prototype.writeFloatBE = function (e, t, r) { return bi(this, e, t, !1, r) }; function xi(e, t, r, n, i) { return t = +t, r = r >>> 0, i || Ei(e, t, r, 8, 17976931348623157e292, -17976931348623157e292), Ke.write(e, t, r, n, 52, 8), r + 8 }A.prototype.writeDoubleLE = function (e, t, r) { return xi(this, e, t, !0, r) }; A.prototype.writeDoubleBE = function (e, t, r) { return xi(this, e, t, !1, r) }; A.prototype.copy = function (e, t, r, n) {
    if (!A.isBuffer(e))
      throw new TypeError('argument should be a Buffer'); if (r || (r = 0), !n && n !== 0 && (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < r && (n = r), n === r || e.length === 0 || this.length === 0)
      return 0; if (t < 0)
      throw new RangeError('targetStart out of bounds'); if (r < 0 || r >= this.length)
      throw new RangeError('Index out of range'); if (n < 0)
      throw new RangeError('sourceEnd out of bounds'); n > this.length && (n = this.length), e.length - t < n - r && (n = e.length - t + r); const i = n - r; return this === e && typeof Uint8Array.prototype.copyWithin == 'function' ? this.copyWithin(t, r, n) : Uint8Array.prototype.set.call(e, this.subarray(r, n), t), i
  }; A.prototype.fill = function (e, t, r, n) {
    if (typeof e == 'string') {
      if (typeof t == 'string' ? (n = t, t = 0, r = this.length) : typeof r == 'string' && (n = r, r = this.length), n !== void 0 && typeof n != 'string')
        throw new TypeError('encoding must be a string'); if (typeof n == 'string' && !A.isEncoding(n))
        throw new TypeError(`Unknown encoding: ${n}`); if (e.length === 1) { const o = e.charCodeAt(0); (n === 'utf8' && o < 128 || n === 'latin1') && (e = o) }
    }
    else {
      typeof e == 'number' ? e = e & 255 : typeof e == 'boolean' && (e = Number(e))
    } if (t < 0 || this.length < t || this.length < r)
      throw new RangeError('Out of range index'); if (r <= t)
      return this; t = t >>> 0, r = r === void 0 ? this.length : r >>> 0, e || (e = 0); let i; if (typeof e == 'number') {
      for (i = t; i < r; ++i) this[i] = e
    }
    else {
      const o = A.isBuffer(e) ? e : A.from(e, n); const s = o.length; if (s === 0)
        throw new TypeError(`The value "${e}" is invalid for argument "value"`); for (i = 0; i < r - t; ++i) this[i + t] = o[i % s]
    } return this
  }; const We = {}; function pn(e, t, r) { We[e] = class extends r {constructor() { super(), Object.defineProperty(this, 'message', { value: t.apply(this, arguments), writable: !0, configurable: !0 }), this.name = `${this.name} [${e}]`, this.stack, delete this.name } get code() { return e } set code(n) { Object.defineProperty(this, 'code', { configurable: !0, enumerable: !0, value: n, writable: !0 }) }toString() { return `${this.name} [${e}]: ${this.message}` }} }pn('ERR_BUFFER_OUT_OF_BOUNDS', (e) => { return e ? `${e} is outside of buffer bounds` : 'Attempt to access memory outside buffer bounds' }, RangeError); pn('ERR_INVALID_ARG_TYPE', (e, t) => { return `The "${e}" argument must be of type number. Received type ${typeof t}` }, TypeError); pn('ERR_OUT_OF_RANGE', (e, t, r) => { let n = `The value of "${e}" is out of range.`; let i = r; return Number.isInteger(r) && Math.abs(r) > 2 ** 32 ? i = ui(String(r)) : typeof r == 'bigint' && (i = String(r), (r > BigInt(2) ** BigInt(32) || r < -(BigInt(2) ** BigInt(32))) && (i = ui(i)), i += 'n'), n += ` It must be ${t}. Received ${i}`, n }, RangeError); function ui(e) { let t = ''; let r = e.length; const n = e[0] === '-' ? 1 : 0; for (;r >= n + 4; r -= 3)t = `_${e.slice(r - 3, r)}${t}`; return `${e.slice(0, r)}${t}` } function Ba(e, t, r) { He(t, 'offset'), (e[t] === void 0 || e[t + r] === void 0) && Pt(t, e.length - (r + 1)) } function Pi(e, t, r, n, i, o) { if (e > r || e < t) { const s = typeof t == 'bigint' ? 'n' : ''; let a; throw o > 3 ? t === 0 || t === BigInt(0) ? a = `>= 0${s} and < 2${s} ** ${(o + 1) * 8}${s}` : a = `>= -(2${s} ** ${(o + 1) * 8 - 1}${s}) and < 2 ** ${(o + 1) * 8 - 1}${s}` : a = `>= ${t}${s} and <= ${r}${s}`, new We.ERR_OUT_OF_RANGE('value', a, e) }Ba(n, i, o) } function He(e, t) {
    if (typeof e != 'number')
      throw new We.ERR_INVALID_ARG_TYPE(t, 'number', e)
  } function Pt(e, t, r) { throw Math.floor(e) !== e ? (He(e, r), new We.ERR_OUT_OF_RANGE(r || 'offset', 'an integer', e)) : t < 0 ? new We.ERR_BUFFER_OUT_OF_BOUNDS() : new We.ERR_OUT_OF_RANGE(r || 'offset', `>= ${r ? 1 : 0} and <= ${t}`, e) } const qa = /[^+/\w-]/g; function $a(e) {
    if (e = e.split('=')[0], e = e.trim().replace(qa, ''), e.length < 2)
      return ''; for (;e.length % 4 !== 0;)e = `${e}=`; return e
  } function ln(e, t) {
    t = t || 1 / 0; let r; const n = e.length; let i = null; const o = []; for (let s = 0; s < n; ++s) {
      if (r = e.charCodeAt(s), r > 55295 && r < 57344) {
        if (!i) {
          if (r > 56319) { (t -= 3) > -1 && o.push(239, 191, 189); continue }
          else if (s + 1 === n) { (t -= 3) > -1 && o.push(239, 191, 189); continue }i = r; continue
        } if (r < 56320) { (t -= 3) > -1 && o.push(239, 191, 189), i = r; continue }r = (i - 55296 << 10 | r - 56320) + 65536
      }
      else {
        i && (t -= 3) > -1 && o.push(239, 191, 189)
      } if (i = null, r < 128) {
        if ((t -= 1) < 0)
          break; o.push(r)
      }
      else if (r < 2048) {
        if ((t -= 2) < 0)
          break; o.push(r >> 6 | 192, r & 63 | 128)
      }
      else if (r < 65536) {
        if ((t -= 3) < 0)
          break; o.push(r >> 12 | 224, r >> 6 & 63 | 128, r & 63 | 128)
      }
      else if (r < 1114112) {
        if ((t -= 4) < 0)
          break; o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, r & 63 | 128)
      }
      else {
        throw new Error('Invalid code point')
      }
    } return o
  } function Va(e) { const t = []; for (let r = 0; r < e.length; ++r)t.push(e.charCodeAt(r) & 255); return t } function ja(e, t) { let r; let n; let i; const o = []; for (let s = 0; s < e.length && !((t -= 2) < 0); ++s)r = e.charCodeAt(s), n = r >> 8, i = r % 256, o.push(i), o.push(n); return o } function vi(e) { return sn.toByteArray($a(e)) } function lr(e, t, r, n) { let i; for (i = 0; i < n && !(i + r >= t.length || i >= e.length); ++i)t[i + r] = e[i]; return i } function fe(e, t) { return e instanceof t || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === t.name } function mn(e) { return e !== e } var Ga = (function () { const e = '0123456789abcdef'; const t = Array.from({ length: 256 }); for (let r = 0; r < 16; ++r) { const n = r * 16; for (let i = 0; i < 16; ++i)t[n + i] = e[r] + e[i] } return t }()); function Se(e) { return typeof BigInt > 'u' ? Qa : e } function Qa() { throw new Error('BigInt not supported') }
}); let w; var d = de(() => { 'use strict'; w = Ue(Ti()) }); function Ya() { return !1 } function gn() { return { dev: 0, ino: 0, mode: 0, nlink: 0, uid: 0, gid: 0, rdev: 0, size: 0, blksize: 0, blocks: 0, atimeMs: 0, mtimeMs: 0, ctimeMs: 0, birthtimeMs: 0, atime: new Date(), mtime: new Date(), ctime: new Date(), birthtime: new Date() } } function Za() { return gn() } function Xa() { return [] } function el(e) { e(null, []) } function tl() { return '' } function rl() { return '' } function nl() {} function il() {} function ol() {} function sl() {} function al() {} function ll() {} function ul() {} function cl() {} function pl() { return { close: () => {}, on: () => {}, removeAllListeners: () => {} } } function ml(e, t) { t(null, gn()) } let dl; let fl; let ji; const Gi = de(() => { 'use strict'; d(); u(); c(); p(); m(); dl = {}, fl = { existsSync: Ya, lstatSync: gn, stat: ml, statSync: Za, readdirSync: Xa, readdir: el, readlinkSync: tl, realpathSync: rl, chmodSync: nl, renameSync: il, mkdirSync: ol, rmdirSync: sl, rmSync: al, unlinkSync: ll, watchFile: ul, unwatchFile: cl, watch: pl, promises: dl }, ji = fl }); function gl(...e) { return e.join('/') } function hl(...e) { return e.join('/') } function yl(e) { const t = Qi(e); const r = Ji(e); const [n, i] = t.split('.'); return { root: '/', dir: r, base: t, ext: i, name: n } } function Qi(e) { const t = e.split('/'); return t[t.length - 1] } function Ji(e) { return e.split('/').slice(0, -1).join('/') } function El(e) { const t = e.split('/').filter(i => i !== '' && i !== '.'); const r = []; for (const i of t)i === '..' ? r.pop() : r.push(i); const n = r.join('/'); return e.startsWith('/') ? `/${n}` : n } let Wi; let wl; let bl; let xl; let mr; const Ki = de(() => { 'use strict'; d(); u(); c(); p(); m(); Wi = '/', wl = ':'; bl = { sep: Wi }, xl = { basename: Qi, delimiter: wl, dirname: Ji, join: hl, normalize: El, parse: yl, posix: bl, resolve: gl, sep: Wi }, mr = xl }); const Hi = Re((Ed, Pl) => { Pl.exports = { name: '@prisma/internals', version: '6.13.0', description: 'This package is intended for Prisma\'s internal use', main: 'dist/index.js', types: 'dist/index.d.ts', repository: { type: 'git', url: 'https://github.com/prisma/prisma.git', directory: 'packages/internals' }, homepage: 'https://www.prisma.io', author: 'Tim Suchanek <suchanek@prisma.io>', bugs: 'https://github.com/prisma/prisma/issues', license: 'Apache-2.0', scripts: { dev: 'DEV=true tsx helpers/build.ts', build: 'tsx helpers/build.ts', test: 'dotenv -e ../../.db.env -- jest --silent', prepublishOnly: 'pnpm run build' }, files: ['README.md', 'dist', '!**/libquery_engine*', '!dist/get-generators/engines/*', 'scripts'], devDependencies: { '@babel/helper-validator-identifier': '7.25.9', '@opentelemetry/api': '1.9.0', '@swc/core': '1.11.5', '@swc/jest': '0.2.37', '@types/babel__helper-validator-identifier': '7.15.2', '@types/jest': '29.5.14', '@types/node': '18.19.76', '@types/resolve': '1.20.6', 'archiver': '6.0.2', 'checkpoint-client': '1.1.33', 'cli-truncate': '4.0.0', 'dotenv': '16.5.0', 'esbuild': '0.25.5', 'escape-string-regexp': '5.0.0', 'execa': '5.1.1', 'fast-glob': '3.3.3', 'find-up': '7.0.0', 'fp-ts': '2.16.9', 'fs-extra': '11.3.0', 'fs-jetpack': '5.1.0', 'global-dirs': '4.0.0', 'globby': '11.1.0', 'identifier-regex': '1.0.0', 'indent-string': '4.0.0', 'is-windows': '1.0.2', 'is-wsl': '3.1.0', 'jest': '29.7.0', 'jest-junit': '16.0.0', 'kleur': '4.1.5', 'mock-stdin': '1.0.0', 'new-github-issue-url': '0.2.1', 'node-fetch': '3.3.2', 'npm-packlist': '5.1.3', 'open': '7.4.2', 'p-map': '4.0.0', 'read-package-up': '11.0.0', 'resolve': '1.22.10', 'string-width': '7.2.0', 'strip-ansi': '6.0.1', 'strip-indent': '4.0.0', 'temp-dir': '2.0.0', 'tempy': '1.0.1', 'terminal-link': '4.0.0', 'tmp': '0.2.3', 'ts-node': '10.9.2', 'ts-pattern': '5.6.2', 'ts-toolbelt': '9.6.0', 'typescript': '5.4.5', 'yarn': '1.22.22' }, dependencies: { '@prisma/config': 'workspace:*', '@prisma/debug': 'workspace:*', '@prisma/dmmf': 'workspace:*', '@prisma/driver-adapter-utils': 'workspace:*', '@prisma/engines': 'workspace:*', '@prisma/fetch-engine': 'workspace:*', '@prisma/generator': 'workspace:*', '@prisma/generator-helper': 'workspace:*', '@prisma/get-platform': 'workspace:*', '@prisma/prisma-schema-wasm': '6.13.0-35.361e86d0ea4987e9f53a565309b3eed797a6bcbd', '@prisma/schema-engine-wasm': '6.13.0-35.361e86d0ea4987e9f53a565309b3eed797a6bcbd', '@prisma/schema-files-loader': 'workspace:*', 'arg': '5.0.2', 'prompts': '2.4.2' }, peerDependencies: { typescript: '>=5.1.0' }, peerDependenciesMeta: { typescript: { optional: !0 } }, sideEffects: !1 } }); const yn = Re((Dd, Cl) => { Cl.exports = { name: '@prisma/engines-version', version: '6.13.0-35.361e86d0ea4987e9f53a565309b3eed797a6bcbd', main: 'index.js', types: 'index.d.ts', license: 'Apache-2.0', author: 'Tim Suchanek <suchanek@prisma.io>', prisma: { enginesVersion: '361e86d0ea4987e9f53a565309b3eed797a6bcbd' }, repository: { type: 'git', url: 'https://github.com/prisma/engines-wrapper.git', directory: 'packages/engines-version' }, devDependencies: { '@types/node': '18.19.76', 'typescript': '4.9.5' }, files: ['index.js', 'index.d.ts'], scripts: { build: 'tsc -d' } } }); const zi = Re((dr) => { 'use strict'; d(); u(); c(); p(); m(); Object.defineProperty(dr, '__esModule', { value: !0 }); dr.enginesVersion = void 0; dr.enginesVersion = yn().prisma.enginesVersion }); const Xi = Re((Qd, Zi) => {
  'use strict'; d(); u(); c(); p(); m(); Zi.exports = (e, t = 1, r) => {
    if (r = { indent: ' ', includeEmptyLines: !1, ...r }, typeof e != 'string')
      throw new TypeError(`Expected \`input\` to be a \`string\`, got \`${typeof e}\``); if (typeof t != 'number')
      throw new TypeError(`Expected \`count\` to be a \`number\`, got \`${typeof t}\``); if (typeof r.indent != 'string')
      throw new TypeError(`Expected \`options.indent\` to be a \`string\`, got \`${typeof r.indent}\``); if (t === 0)
      return e; const n = r.includeEmptyLines ? /^/gm : /^(?!\s*$)/gm; return e.replace(n, r.indent.repeat(t))
  }
}); const ro = Re((nf, to) => { 'use strict'; d(); u(); c(); p(); m(); to.exports = ({ onlyFirst: e = !1 } = {}) => { const t = ['[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)', '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'].join('|'); return new RegExp(t, e ? void 0 : 'g') } }); const io = Re((cf, no) => { 'use strict'; d(); u(); c(); p(); m(); const Ol = ro(); no.exports = e => typeof e == 'string' ? e.replace(Ol(), '') : e }); const Sn = Re((Zy, vo) => {
  'use strict'; d(); u(); c(); p(); m(); vo.exports = (function () {
    function e(t, r, n, i, o) { return t < r || n < r ? t > n ? n + 1 : t + 1 : i === o ? r : r + 1 } return function (t, r) {
      if (t === r)
        return 0; if (t.length > r.length) { const n = t; t = r, r = n } for (var i = t.length, o = r.length; i > 0 && t.charCodeAt(i - 1) === r.charCodeAt(o - 1);)i--, o--; for (var s = 0; s < i && t.charCodeAt(s) === r.charCodeAt(s);)s++; if (i -= s, o -= s, i === 0 || o < 3)
        return o; let a = 0; let l; let f; let g; let h; let T; let k; let C; let S; let M; let _; let B; let I; const L = []; for (l = 0; l < i; l++)L.push(l + 1), L.push(t.charCodeAt(s + l)); for (var oe = L.length - 1; a < o - 3;) {
        for (M = r.charCodeAt(s + (f = a)), _ = r.charCodeAt(s + (g = a + 1)), B = r.charCodeAt(s + (h = a + 2)), I = r.charCodeAt(s + (T = a + 3)), k = a += 4, l = 0; l < oe; l += 2)C = L[l], S = L[l + 1], f = e(C, f, g, M, S), g = e(f, g, h, _, S), h = e(g, h, T, B, S), k = e(h, T, k, I, S), L[l] = k, T = h, h = g, g = f, f = C
      } for (;a < o;) {
        for (M = r.charCodeAt(s + (f = a)), k = ++a, l = 0; l < oe; l += 2)C = L[l], L[l] = k = e(C, f, k, M, L[l + 1]), f = C
      } return k
    }
  }())
}); const So = de(() => { 'use strict'; d(); u(); c(); p(); m() }); const ko = de(() => { 'use strict'; d(); u(); c(); p(); m() }); let $r; const zo = de(() => { 'use strict'; d(); u(); c(); p(); m(); $r = class {events = {}; on(t, r) { return this.events[t] || (this.events[t] = []), this.events[t].push(r), this }emit(t, ...r) { return this.events[t] ? (this.events[t].forEach((n) => { n(...r) }), !0) : !1 }} }); d(); u(); c(); p(); m(); const Ri = {}; sr(Ri, { defineExtension: () => Ai, getExtensionContext: () => Ci }); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); function Ai(e) { return typeof e == 'function' ? e : t => t.$extends(e) }d(); u(); c(); p(); m(); function Ci(e) { return e } const ki = {}; sr(ki, { validator: () => Si }); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); function Si(...e) { return t => t }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); let dn; let Ii; let Oi; let Di; let Mi = !0; typeof y < 'u' && ({ FORCE_COLOR: dn, NODE_DISABLE_COLORS: Ii, NO_COLOR: Oi, TERM: Di } = y.env || {}, Mi = y.stdout && y.stdout.isTTY); const Ja = { enabled: !Ii && Oi == null && Di !== 'dumb' && (dn != null && dn !== '0' || Mi) }; function j(e, t) { const r = new RegExp(`\\x1b\\[${t}m`, 'g'); const n = `\x1B[${e}m`; const i = `\x1B[${t}m`; return function (o) { return !Ja.enabled || o == null ? o : n + (~(`${o}`).indexOf(i) ? o.replace(r, i + n) : o) + i } } const Pm = j(0, 0); const ur = j(1, 22); const cr = j(2, 22); const vm = j(3, 23); const _i = j(4, 24); const Tm = j(7, 27); const Am = j(8, 28); const Cm = j(9, 29); const Rm = j(30, 39); const Ye = j(31, 39); const Ni = j(32, 39); const Fi = j(33, 39); const Li = j(34, 39); const Sm = j(35, 39); const Ui = j(36, 39); const km = j(37, 39); const Bi = j(90, 39); const Im = j(90, 39); const Om = j(40, 49); const Dm = j(41, 49); const Mm = j(42, 49); const _m = j(43, 49); const Nm = j(44, 49); const Fm = j(45, 49); const Lm = j(46, 49); const Um = j(47, 49); d(); u(); c(); p(); m(); const Wa = 100; const qi = ['green', 'yellow', 'blue', 'magenta', 'cyan', 'red']; const pr = []; let $i = Date.now(); let Ka = 0; const fn = typeof y < 'u' ? y.env : {}; globalThis.DEBUG ??= fn.DEBUG ?? ''; globalThis.DEBUG_COLORS ??= fn.DEBUG_COLORS ? fn.DEBUG_COLORS === 'true' : !0; const vt = { enable(e) { typeof e == 'string' && (globalThis.DEBUG = e) }, disable() { const e = globalThis.DEBUG; return globalThis.DEBUG = '', e }, enabled(e) { const t = globalThis.DEBUG.split(',').map(i => i.replace(/[.+?^${}()|[\]\\]/g, '\\$&')); const r = t.some(i => i === '' || i[0] === '-' ? !1 : e.match(new RegExp(`${i.split('*').join('.*')}$`))); const n = t.some(i => i === '' || i[0] !== '-' ? !1 : e.match(new RegExp(`${i.slice(1).split('*').join('.*')}$`))); return r && !n }, log: (...e) => { const [t, r, ...n] = e; (console.warn ?? console.log)(`${t} ${r}`, ...n) }, formatters: {} }; function Ha(e) { const t = { color: qi[Ka++ % qi.length], enabled: vt.enabled(e), namespace: e, log: vt.log, extend: () => {} }; const r = (...n) => { const { enabled: i, namespace: o, color: s, log: a } = t; if (n.length !== 0 && pr.push([o, ...n]), pr.length > Wa && pr.shift(), vt.enabled(o) || i) { const l = n.map(g => typeof g == 'string' ? g : za(g)); const f = `+${Date.now() - $i}ms`; $i = Date.now(), a(o, ...l, f) } }; return new Proxy(r, { get: (n, i) => t[i], set: (n, i, o) => t[i] = o }) } const Z = new Proxy(Ha, { get: (e, t) => vt[t], set: (e, t, r) => vt[t] = r }); function za(e, t = 2) {
  const r = new Set(); return JSON.stringify(e, (n, i) => {
    if (typeof i == 'object' && i !== null) {
      if (r.has(i))
        return '[Circular *]'; r.add(i)
    }
    else if (typeof i == 'bigint') {
      return i.toString()
    } return i
  }, t)
} function Vi() { pr.length = 0 }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const vl = Hi(); const hn = vl.version; d(); u(); c(); p(); m(); function Ze(e) { const t = Tl(); return t || (e?.config.engineType === 'library' ? 'library' : e?.config.engineType === 'binary' ? 'binary' : e?.config.engineType === 'client' ? 'client' : Al(e)) } function Tl() { const e = y.env.PRISMA_CLIENT_ENGINE_TYPE; return e === 'library' ? 'library' : e === 'binary' ? 'binary' : e === 'client' ? 'client' : void 0 } function Al(e) { return e?.previewFeatures.includes('queryCompiler') ? 'client' : 'library' }d(); u(); c(); p(); m(); const Yi = 'prisma+postgres'; const fr = `${Yi}:`; function gr(e) { return e?.toString().startsWith(`${fr}//`) ?? !1 } function wn(e) {
  if (!gr(e))
    return !1; const { host: t } = new URL(e); return t.includes('localhost') || t.includes('127.0.0.1') || t.includes('[::1]')
} const At = {}; sr(At, { error: () => kl, info: () => Sl, log: () => Rl, query: () => Il, should: () => eo, tags: () => Tt, warn: () => En }); d(); u(); c(); p(); m(); var Tt = { error: Ye('prisma:error'), warn: Fi('prisma:warn'), info: Ui('prisma:info'), query: Li('prisma:query') }; var eo = { warn: () => !y.env.PRISMA_DISABLE_WARNINGS }; function Rl(...e) { console.log(...e) } function En(e, ...t) { eo.warn() && console.warn(`${Tt.warn} ${e}`, ...t) } function Sl(e, ...t) { console.info(`${Tt.info} ${e}`, ...t) } function kl(e, ...t) { console.error(`${Tt.error} ${e}`, ...t) } function Il(e, ...t) { console.log(`${Tt.query} ${e}`, ...t) }d(); u(); c(); p(); m(); function Pe(e, t) { throw new Error(t) }d(); u(); c(); p(); m(); function bn(e, t) { return Object.prototype.hasOwnProperty.call(e, t) }d(); u(); c(); p(); m(); function Xe(e, t) { const r = {}; for (const n of Object.keys(e))r[n] = t(e[n], n); return r }d(); u(); c(); p(); m(); function xn(e, t) {
  if (e.length === 0)
    return; let r = e[0]; for (let n = 1; n < e.length; n++)t(r, e[n]) < 0 && (r = e[n]); return r
}d(); u(); c(); p(); m(); function F(e, t) { Object.defineProperty(e, 'name', { value: t, configurable: !0 }) }d(); u(); c(); p(); m(); const oo = new Set(); const hr = (e, t, ...r) => { oo.has(e) || (oo.add(e), En(t, ...r)) }; const J = class e extends Error {clientVersion; errorCode; retryable; constructor(t, r, n) { super(t), this.name = 'PrismaClientInitializationError', this.clientVersion = r, this.errorCode = n, Error.captureStackTrace(e) } get [Symbol.toStringTag]() { return 'PrismaClientInitializationError' }}; F(J, 'PrismaClientInitializationError'); d(); u(); c(); p(); m(); const se = class extends Error {code; meta; clientVersion; batchRequestIdx; constructor(t, { code: r, clientVersion: n, meta: i, batchRequestIdx: o }) { super(t), this.name = 'PrismaClientKnownRequestError', this.code = r, this.clientVersion = n, this.meta = i, Object.defineProperty(this, 'batchRequestIdx', { value: o, enumerable: !1, writable: !0 }) } get [Symbol.toStringTag]() { return 'PrismaClientKnownRequestError' }}; F(se, 'PrismaClientKnownRequestError'); d(); u(); c(); p(); m(); const ke = class extends Error {clientVersion; constructor(t, r) { super(t), this.name = 'PrismaClientRustPanicError', this.clientVersion = r } get [Symbol.toStringTag]() { return 'PrismaClientRustPanicError' }}; F(ke, 'PrismaClientRustPanicError'); d(); u(); c(); p(); m(); const ae = class extends Error {clientVersion; batchRequestIdx; constructor(t, { clientVersion: r, batchRequestIdx: n }) { super(t), this.name = 'PrismaClientUnknownRequestError', this.clientVersion = r, Object.defineProperty(this, 'batchRequestIdx', { value: n, writable: !0, enumerable: !1 }) } get [Symbol.toStringTag]() { return 'PrismaClientUnknownRequestError' }}; F(ae, 'PrismaClientUnknownRequestError'); d(); u(); c(); p(); m(); const ee = class extends Error {name = 'PrismaClientValidationError'; clientVersion; constructor(t, { clientVersion: r }) { super(t), this.clientVersion = r } get [Symbol.toStringTag]() { return 'PrismaClientValidationError' }}; F(ee, 'PrismaClientValidationError'); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const et = 9e15; const Me = 1e9; const Pn = '0123456789abcdef'; let Er = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058'; let br = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789'; const vn = { precision: 20, rounding: 4, modulo: 1, toExpNeg: -7, toExpPos: 21, minE: -et, maxE: et, crypto: !1 }; let co; let ve; let N = !0; const Pr = '[DecimalError] '; const De = `${Pr}Invalid argument: `; const po = `${Pr}Precision limit exceeded`; const mo = `${Pr}crypto unavailable`; const fo = '[object Decimal]'; const X = Math.floor; const W = Math.pow; const Dl = /^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i; const Ml = /^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i; const _l = /^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i; const go = /^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i; const pe = 1e7; const D = 7; const Nl = 9007199254740991; const Fl = Er.length - 1; const Tn = br.length - 1; const R = { toStringTag: fo }; R.absoluteValue = R.abs = function () { const e = new this.constructor(this); return e.s < 0 && (e.s = 1), O(e) }; R.ceil = function () { return O(new this.constructor(this), this.e + 1, 2) }; R.clampedTo = R.clamp = function (e, t) {
  let r; const n = this; const i = n.constructor; if (e = new i(e), t = new i(t), !e.s || !t.s)
    return new i(Number.NaN); if (e.gt(t))
    throw new Error(De + t); return r = n.cmp(e), r < 0 ? e : n.cmp(t) > 0 ? t : new i(n)
}; R.comparedTo = R.cmp = function (e) {
  let t; let r; let n; let i; const o = this; const s = o.d; const a = (e = new o.constructor(e)).d; const l = o.s; const f = e.s; if (!s || !a)
    return !l || !f ? Number.NaN : l !== f ? l : s === a ? 0 : !s ^ l < 0 ? 1 : -1; if (!s[0] || !a[0])
    return s[0] ? l : a[0] ? -f : 0; if (l !== f)
    return l; if (o.e !== e.e)
    return o.e > e.e ^ l < 0 ? 1 : -1; for (n = s.length, i = a.length, t = 0, r = n < i ? n : i; t < r; ++t) {
    if (s[t] !== a[t])
      return s[t] > a[t] ^ l < 0 ? 1 : -1
  } return n === i ? 0 : n > i ^ l < 0 ? 1 : -1
}; R.cosine = R.cos = function () { let e; let t; let r = this; const n = r.constructor; return r.d ? r.d[0] ? (e = n.precision, t = n.rounding, n.precision = e + Math.max(r.e, r.sd()) + D, n.rounding = 1, r = Ll(n, bo(n, r)), n.precision = e, n.rounding = t, O(ve == 2 || ve == 3 ? r.neg() : r, e, t, !0)) : new n(1) : new n(Number.NaN) }; R.cubeRoot = R.cbrt = function () {
  let e; let t; let r; let n; let i; let o; let s; let a; let l; let f; const g = this; const h = g.constructor; if (!g.isFinite() || g.isZero())
    return new h(g); for (N = !1, o = g.s * (g.s * g) ** (1 / 3), !o || Math.abs(o) == 1 / 0 ? (r = z(g.d), e = g.e, (o = (e - r.length + 1) % 3) && (r += o == 1 || o == -2 ? '0' : '00'), o = r ** (1 / 3), e = X((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2)), o == 1 / 0 ? r = `5e${e}` : (r = o.toExponential(), r = r.slice(0, r.indexOf('e') + 1) + e), n = new h(r), n.s = g.s) : n = new h(o.toString()), s = (e = h.precision) + 3; ;) {
    if (a = n, l = a.times(a).times(a), f = l.plus(g), n = $(f.plus(g).times(a), f.plus(l), s + 2, 1), z(a.d).slice(0, s) === (r = z(n.d)).slice(0, s)) {
      if (r = r.slice(s - 3, s + 1), r == '9999' || !i && r == '4999') { if (!i && (O(a, e + 1, 0), a.times(a).times(a).eq(g))) { n = a; break }s += 4, i = 1 }
      else { (!+r || !+r.slice(1) && r.charAt(0) == '5') && (O(n, e + 1, 1), t = !n.times(n).times(n).eq(g)); break }
    }
  } return N = !0, O(n, e, h.rounding, t)
}; R.decimalPlaces = R.dp = function () {
  let e; const t = this.d; let r = Number.NaN; if (t) {
    if (e = t.length - 1, r = (e - X(this.e / D)) * D, e = t[e], e) {
      for (;e % 10 == 0; e /= 10)r--
    } r < 0 && (r = 0)
  } return r
}; R.dividedBy = R.div = function (e) { return $(this, new this.constructor(e)) }; R.dividedToIntegerBy = R.divToInt = function (e) { const t = this; const r = t.constructor; return O($(t, new r(e), 0, 1, 1), r.precision, r.rounding) }; R.equals = R.eq = function (e) { return this.cmp(e) === 0 }; R.floor = function () { return O(new this.constructor(this), this.e + 1, 3) }; R.greaterThan = R.gt = function (e) { return this.cmp(e) > 0 }; R.greaterThanOrEqualTo = R.gte = function (e) { const t = this.cmp(e); return t == 1 || t === 0 }; R.hyperbolicCosine = R.cosh = function () {
  let e; let t; let r; let n; let i; let o = this; const s = o.constructor; const a = new s(1); if (!o.isFinite())
    return new s(o.s ? 1 / 0 : Number.NaN); if (o.isZero())
    return a; r = s.precision, n = s.rounding, s.precision = r + Math.max(o.e, o.sd()) + 4, s.rounding = 1, i = o.d.length, i < 32 ? (e = Math.ceil(i / 3), t = (1 / Tr(4, e)).toString()) : (e = 16, t = '2.3283064365386962890625e-10'), o = tt(s, 1, o.times(t), new s(1), !0); for (var l, f = e, g = new s(8); f--;)l = o.times(o), o = a.minus(l.times(g.minus(l.times(g)))); return O(o, s.precision = r, s.rounding = n, !0)
}; R.hyperbolicSine = R.sinh = function () {
  let e; let t; let r; let n; let i = this; const o = i.constructor; if (!i.isFinite() || i.isZero())
    return new o(i); if (t = o.precision, r = o.rounding, o.precision = t + Math.max(i.e, i.sd()) + 4, o.rounding = 1, n = i.d.length, n < 3) {
    i = tt(o, 2, i, i, !0)
  }
  else { e = 1.4 * Math.sqrt(n), e = e > 16 ? 16 : e | 0, i = i.times(1 / Tr(5, e)), i = tt(o, 2, i, i, !0); for (var s, a = new o(5), l = new o(16), f = new o(20); e--;)s = i.times(i), i = i.times(a.plus(s.times(l.times(s).plus(f)))) } return o.precision = t, o.rounding = r, O(i, t, r, !0)
}; R.hyperbolicTangent = R.tanh = function () { let e; let t; const r = this; const n = r.constructor; return r.isFinite() ? r.isZero() ? new n(r) : (e = n.precision, t = n.rounding, n.precision = e + 7, n.rounding = 1, $(r.sinh(), r.cosh(), n.precision = e, n.rounding = t)) : new n(r.s) }; R.inverseCosine = R.acos = function () { let e = this; const t = e.constructor; const r = e.abs().cmp(1); const n = t.precision; const i = t.rounding; return r !== -1 ? r === 0 ? e.isNeg() ? ge(t, n, i) : new t(0) : new t(Number.NaN) : e.isZero() ? ge(t, n + 4, i).times(0.5) : (t.precision = n + 6, t.rounding = 1, e = new t(1).minus(e).div(e.plus(1)).sqrt().atan(), t.precision = n, t.rounding = i, e.times(2)) }; R.inverseHyperbolicCosine = R.acosh = function () { let e; let t; let r = this; const n = r.constructor; return r.lte(1) ? new n(r.eq(1) ? 0 : Number.NaN) : r.isFinite() ? (e = n.precision, t = n.rounding, n.precision = e + Math.max(Math.abs(r.e), r.sd()) + 4, n.rounding = 1, N = !1, r = r.times(r).minus(1).sqrt().plus(r), N = !0, n.precision = e, n.rounding = t, r.ln()) : new n(r) }; R.inverseHyperbolicSine = R.asinh = function () { let e; let t; let r = this; const n = r.constructor; return !r.isFinite() || r.isZero() ? new n(r) : (e = n.precision, t = n.rounding, n.precision = e + 2 * Math.max(Math.abs(r.e), r.sd()) + 6, n.rounding = 1, N = !1, r = r.times(r).plus(1).sqrt().plus(r), N = !0, n.precision = e, n.rounding = t, r.ln()) }; R.inverseHyperbolicTangent = R.atanh = function () { let e; let t; let r; let n; let i = this; const o = i.constructor; return i.isFinite() ? i.e >= 0 ? new o(i.abs().eq(1) ? i.s / 0 : i.isZero() ? i : Number.NaN) : (e = o.precision, t = o.rounding, n = i.sd(), Math.max(n, e) < 2 * -i.e - 1 ? O(new o(i), e, t, !0) : (o.precision = r = n - i.e, i = $(i.plus(1), new o(1).minus(i), r + e, 1), o.precision = e + 4, o.rounding = 1, i = i.ln(), o.precision = e, o.rounding = t, i.times(0.5))) : new o(Number.NaN) }; R.inverseSine = R.asin = function () { let e; let t; let r; let n; let i = this; const o = i.constructor; return i.isZero() ? new o(i) : (t = i.abs().cmp(1), r = o.precision, n = o.rounding, t !== -1 ? t === 0 ? (e = ge(o, r + 4, n).times(0.5), e.s = i.s, e) : new o(Number.NaN) : (o.precision = r + 6, o.rounding = 1, i = i.div(new o(1).minus(i.times(i)).sqrt().plus(1)).atan(), o.precision = r, o.rounding = n, i.times(2))) }; R.inverseTangent = R.atan = function () {
  let e; let t; let r; let n; let i; let o; let s; let a; let l; let f = this; const g = f.constructor; const h = g.precision; const T = g.rounding; if (f.isFinite()) {
    if (f.isZero())
      return new g(f); if (f.abs().eq(1) && h + 4 <= Tn)
      return s = ge(g, h + 4, T).times(0.25), s.s = f.s, s
  }
  else {
    if (!f.s)
      return new g(Number.NaN); if (h + 4 <= Tn)
      return s = ge(g, h + 4, T).times(0.5), s.s = f.s, s
  } for (g.precision = a = h + 10, g.rounding = 1, r = Math.min(28, a / D + 2 | 0), e = r; e; --e)f = f.div(f.times(f).plus(1).sqrt().plus(1)); for (N = !1, t = Math.ceil(a / D), n = 1, l = f.times(f), s = new g(f), i = f; e !== -1;) {
    if (i = i.times(l), o = s.minus(i.div(n += 2)), i = i.times(l), s = o.plus(i.div(n += 2)), s.d[t] !== void 0) {
      for (e = t; s.d[e] === o.d[e] && e--;);
    }
  } return r && (s = s.times(2 << r - 1)), N = !0, O(s, g.precision = h, g.rounding = T, !0)
}; R.isFinite = function () { return !!this.d }; R.isInteger = R.isInt = function () { return !!this.d && X(this.e / D) > this.d.length - 2 }; R.isNaN = function () { return !this.s }; R.isNegative = R.isNeg = function () { return this.s < 0 }; R.isPositive = R.isPos = function () { return this.s > 0 }; R.isZero = function () { return !!this.d && this.d[0] === 0 }; R.lessThan = R.lt = function (e) { return this.cmp(e) < 0 }; R.lessThanOrEqualTo = R.lte = function (e) { return this.cmp(e) < 1 }; R.logarithm = R.log = function (e) {
  let t; let r; let n; let i; let o; let s; let a; let l; const f = this; const g = f.constructor; const h = g.precision; const T = g.rounding; const k = 5; if (e == null) {
    e = new g(10), t = !0
  }
  else {
    if (e = new g(e), r = e.d, e.s < 0 || !r || !r[0] || e.eq(1))
      return new g(Number.NaN); t = e.eq(10)
  } if (r = f.d, f.s < 0 || !r || !r[0] || f.eq(1))
    return new g(r && !r[0] ? -1 / 0 : f.s != 1 ? Number.NaN : r ? 0 : 1 / 0); if (t) {
    if (r.length > 1) {
      o = !0
    }
    else { for (i = r[0]; i % 10 === 0;)i /= 10; o = i !== 1 }
  } if (N = !1, a = h + k, s = Oe(f, a), n = t ? xr(g, a + 10) : Oe(e, a), l = $(s, n, a, 1), Ct(l.d, i = h, T)) {
    do {
      if (a += 10, s = Oe(f, a), n = t ? xr(g, a + 10) : Oe(e, a), l = $(s, n, a, 1), !o) { +z(l.d).slice(i + 1, i + 15) + 1 == 1e14 && (l = O(l, h + 1, 0)); break }
    } while (Ct(l.d, i += 10, T))
  } return N = !0, O(l, h, T)
}; R.minus = R.sub = function (e) {
  let t; let r; let n; let i; let o; let s; let a; let l; let f; let g; let h; let T; const k = this; const C = k.constructor; if (e = new C(e), !k.d || !e.d)
    return !k.s || !e.s ? e = new C(Number.NaN) : k.d ? e.s = -e.s : e = new C(e.d || k.s !== e.s ? k : Number.NaN), e; if (k.s != e.s)
    return e.s = -e.s, k.plus(e); if (f = k.d, T = e.d, a = C.precision, l = C.rounding, !f[0] || !T[0]) {
    if (T[0])
      e.s = -e.s; else if (f[0])
      e = new C(k); else return new C(l === 3 ? -0 : 0); return N ? O(e, a, l) : e
  } if (r = X(e.e / D), g = X(k.e / D), f = f.slice(), o = g - r, o) { for (h = o < 0, h ? (t = f, o = -o, s = T.length) : (t = T, r = g, s = f.length), n = Math.max(Math.ceil(a / D), s) + 2, o > n && (o = n, t.length = 1), t.reverse(), n = o; n--;)t.push(0); t.reverse() }
  else {
    for (n = f.length, s = T.length, h = n < s, h && (s = n), n = 0; n < s; n++) {
      if (f[n] != T[n]) { h = f[n] < T[n]; break }
    }o = 0
  } for (h && (t = f, f = T, T = t, e.s = -e.s), s = f.length, n = T.length - s; n > 0; --n)f[s++] = 0; for (n = T.length; n > o;) { if (f[--n] < T[n]) { for (i = n; i && f[--i] === 0;)f[i] = pe - 1; --f[i], f[n] += pe }f[n] -= T[n] } for (;f[--s] === 0;)f.pop(); for (;f[0] === 0; f.shift())--r; return f[0] ? (e.d = f, e.e = vr(f, r), N ? O(e, a, l) : e) : new C(l === 3 ? -0 : 0)
}; R.modulo = R.mod = function (e) { let t; const r = this; const n = r.constructor; return e = new n(e), !r.d || !e.s || e.d && !e.d[0] ? new n(Number.NaN) : !e.d || r.d && !r.d[0] ? O(new n(r), n.precision, n.rounding) : (N = !1, n.modulo == 9 ? (t = $(r, e.abs(), 0, 3, 1), t.s *= e.s) : t = $(r, e, 0, n.modulo, 1), t = t.times(e), N = !0, r.minus(t)) }; R.naturalExponential = R.exp = function () { return An(this) }; R.naturalLogarithm = R.ln = function () { return Oe(this) }; R.negated = R.neg = function () { const e = new this.constructor(this); return e.s = -e.s, O(e) }; R.plus = R.add = function (e) {
  let t; let r; let n; let i; let o; let s; let a; let l; let f; let g; const h = this; const T = h.constructor; if (e = new T(e), !h.d || !e.d)
    return !h.s || !e.s ? e = new T(Number.NaN) : h.d || (e = new T(e.d || h.s === e.s ? h : Number.NaN)), e; if (h.s != e.s)
    return e.s = -e.s, h.minus(e); if (f = h.d, g = e.d, a = T.precision, l = T.rounding, !f[0] || !g[0])
    return g[0] || (e = new T(h)), N ? O(e, a, l) : e; if (o = X(h.e / D), n = X(e.e / D), f = f.slice(), i = o - n, i) { for (i < 0 ? (r = f, i = -i, s = g.length) : (r = g, n = o, s = f.length), o = Math.ceil(a / D), s = o > s ? o + 1 : s + 1, i > s && (i = s, r.length = 1), r.reverse(); i--;)r.push(0); r.reverse() } for (s = f.length, i = g.length, s - i < 0 && (i = s, r = g, g = f, f = r), t = 0; i;)t = (f[--i] = f[i] + g[i] + t) / pe | 0, f[i] %= pe; for (t && (f.unshift(t), ++n), s = f.length; f[--s] == 0;)f.pop(); return e.d = f, e.e = vr(f, n), N ? O(e, a, l) : e
}; R.precision = R.sd = function (e) {
  let t; const r = this; if (e !== void 0 && e !== !!e && e !== 1 && e !== 0)
    throw new Error(De + e); return r.d ? (t = ho(r.d), e && r.e + 1 > t && (t = r.e + 1)) : t = Number.NaN, t
}; R.round = function () { const e = this; const t = e.constructor; return O(new t(e), e.e + 1, t.rounding) }; R.sine = R.sin = function () { let e; let t; let r = this; const n = r.constructor; return r.isFinite() ? r.isZero() ? new n(r) : (e = n.precision, t = n.rounding, n.precision = e + Math.max(r.e, r.sd()) + D, n.rounding = 1, r = Bl(n, bo(n, r)), n.precision = e, n.rounding = t, O(ve > 2 ? r.neg() : r, e, t, !0)) : new n(Number.NaN) }; R.squareRoot = R.sqrt = function () {
  let e; let t; let r; let n; let i; let o; const s = this; const a = s.d; let l = s.e; let f = s.s; const g = s.constructor; if (f !== 1 || !a || !a[0])
    return new g(!f || f < 0 && (!a || a[0]) ? Number.NaN : a ? s : 1 / 0); for (N = !1, f = Math.sqrt(+s), f == 0 || f == 1 / 0 ? (t = z(a), (t.length + l) % 2 == 0 && (t += '0'), f = Math.sqrt(t), l = X((l + 1) / 2) - (l < 0 || l % 2), f == 1 / 0 ? t = `5e${l}` : (t = f.toExponential(), t = t.slice(0, t.indexOf('e') + 1) + l), n = new g(t)) : n = new g(f.toString()), r = (l = g.precision) + 3; ;) {
    if (o = n, n = o.plus($(s, o, r + 2, 1)).times(0.5), z(o.d).slice(0, r) === (t = z(n.d)).slice(0, r)) {
      if (t = t.slice(r - 3, r + 1), t == '9999' || !i && t == '4999') { if (!i && (O(o, l + 1, 0), o.times(o).eq(s))) { n = o; break }r += 4, i = 1 }
      else { (!+t || !+t.slice(1) && t.charAt(0) == '5') && (O(n, l + 1, 1), e = !n.times(n).eq(s)); break }
    }
  } return N = !0, O(n, l, g.rounding, e)
}; R.tangent = R.tan = function () { let e; let t; let r = this; const n = r.constructor; return r.isFinite() ? r.isZero() ? new n(r) : (e = n.precision, t = n.rounding, n.precision = e + 10, n.rounding = 1, r = r.sin(), r.s = 1, r = $(r, new n(1).minus(r.times(r)).sqrt(), e + 10, 0), n.precision = e, n.rounding = t, O(ve == 2 || ve == 4 ? r.neg() : r, e, t, !0)) : new n(Number.NaN) }; R.times = R.mul = function (e) {
  let t; let r; let n; let i; let o; let s; let a; let l; let f; const g = this; const h = g.constructor; let T = g.d; let k = (e = new h(e)).d; if (e.s *= g.s, !T || !T[0] || !k || !k[0])
    return new h(!e.s || T && !T[0] && !k || k && !k[0] && !T ? Number.NaN : !T || !k ? e.s / 0 : e.s * 0); for (r = X(g.e / D) + X(e.e / D), l = T.length, f = k.length, l < f && (o = T, T = k, k = o, s = l, l = f, f = s), o = [], s = l + f, n = s; n--;)o.push(0); for (n = f; --n >= 0;) { for (t = 0, i = l + n; i > n;)a = o[i] + k[n] * T[i - n - 1] + t, o[i--] = a % pe | 0, t = a / pe | 0; o[i] = (o[i] + t) % pe | 0 } for (;!o[--s];)o.pop(); return t ? ++r : o.shift(), e.d = o, e.e = vr(o, r), N ? O(e, h.precision, h.rounding) : e
}; R.toBinary = function (e, t) { return Cn(this, 2, e, t) }; R.toDecimalPlaces = R.toDP = function (e, t) { let r = this; const n = r.constructor; return r = new n(r), e === void 0 ? r : (ne(e, 0, Me), t === void 0 ? t = n.rounding : ne(t, 0, 8), O(r, e + r.e + 1, t)) }; R.toExponential = function (e, t) { let r; let n = this; const i = n.constructor; return e === void 0 ? r = he(n, !0) : (ne(e, 0, Me), t === void 0 ? t = i.rounding : ne(t, 0, 8), n = O(new i(n), e + 1, t), r = he(n, !0, e + 1)), n.isNeg() && !n.isZero() ? `-${r}` : r }; R.toFixed = function (e, t) { let r; let n; const i = this; const o = i.constructor; return e === void 0 ? r = he(i) : (ne(e, 0, Me), t === void 0 ? t = o.rounding : ne(t, 0, 8), n = O(new o(i), e + i.e + 1, t), r = he(n, !1, e + n.e + 1)), i.isNeg() && !i.isZero() ? `-${r}` : r }; R.toFraction = function (e) {
  let t; let r; let n; let i; let o; let s; let a; let l; let f; let g; let h; let T; const k = this; const C = k.d; const S = k.constructor; if (!C)
    return new S(k); if (f = r = new S(1), n = l = new S(0), t = new S(n), o = t.e = ho(C) - k.e - 1, s = o % D, t.d[0] = 10 ** (s < 0 ? D + s : s), e == null) {
    e = o > 0 ? t : f
  }
  else {
    if (a = new S(e), !a.isInt() || a.lt(f))
      throw new Error(De + a); e = a.gt(t) ? o > 0 ? t : f : a
  } for (N = !1, a = new S(z(C)), g = S.precision, S.precision = o = C.length * D * 2; h = $(a, t, 0, 1, 1), i = r.plus(h.times(n)), i.cmp(e) != 1;)r = n, n = i, i = f, f = l.plus(h.times(i)), l = i, i = t, t = a.minus(h.times(i)), a = i; return i = $(e.minus(r), n, 0, 1, 1), l = l.plus(i.times(f)), r = r.plus(i.times(n)), l.s = f.s = k.s, T = $(f, n, o, 1).minus(k).abs().cmp($(l, r, o, 1).minus(k).abs()) < 1 ? [f, n] : [l, r], S.precision = g, N = !0, T
}; R.toHexadecimal = R.toHex = function (e, t) { return Cn(this, 16, e, t) }; R.toNearest = function (e, t) {
  let r = this; const n = r.constructor; if (r = new n(r), e == null) {
    if (!r.d)
      return r; e = new n(1), t = n.rounding
  }
  else {
    if (e = new n(e), t === void 0 ? t = n.rounding : ne(t, 0, 8), !r.d)
      return e.s ? r : e; if (!e.d)
      return e.s && (e.s = r.s), e
  } return e.d[0] ? (N = !1, r = $(r, e, 0, t, 1).times(e), N = !0, O(r)) : (e.s = r.s, r = e), r
}; R.toNumber = function () { return +this }; R.toOctal = function (e, t) { return Cn(this, 8, e, t) }; R.toPower = R.pow = function (e) {
  let t; let r; let n; let i; let o; let s; let a = this; const l = a.constructor; const f = +(e = new l(e)); if (!a.d || !e.d || !a.d[0] || !e.d[0])
    return new l((+a) ** f); if (a = new l(a), a.eq(1))
    return a; if (n = l.precision, o = l.rounding, e.eq(1))
    return O(a, n, o); if (t = X(e.e / D), t >= e.d.length - 1 && (r = f < 0 ? -f : f) <= Nl)
    return i = yo(l, a, r, n), e.s < 0 ? new l(1).div(i) : O(i, n, o); if (s = a.s, s < 0) {
    if (t < e.d.length - 1)
      return new l(Number.NaN); if ((e.d[t] & 1) == 0 && (s = 1), a.e == 0 && a.d[0] == 1 && a.d.length == 1)
      return a.s = s, a
  } return r = (+a) ** f, t = r == 0 || !isFinite(r) ? X(f * (Math.log(`0.${z(a.d)}`) / Math.LN10 + a.e + 1)) : new l(`${r}`).e, t > l.maxE + 1 || t < l.minE - 1 ? new l(t > 0 ? s / 0 : 0) : (N = !1, l.rounding = a.s = 1, r = Math.min(12, (`${t}`).length), i = An(e.times(Oe(a, n + r)), n), i.d && (i = O(i, n + 5, 1), Ct(i.d, n, o) && (t = n + 10, i = O(An(e.times(Oe(a, t + r)), t), t + 5, 1), +z(i.d).slice(n + 1, n + 15) + 1 == 1e14 && (i = O(i, n + 1, 0)))), i.s = s, N = !0, l.rounding = o, O(i, n, o))
}; R.toPrecision = function (e, t) { let r; let n = this; const i = n.constructor; return e === void 0 ? r = he(n, n.e <= i.toExpNeg || n.e >= i.toExpPos) : (ne(e, 1, Me), t === void 0 ? t = i.rounding : ne(t, 0, 8), n = O(new i(n), e, t), r = he(n, e <= n.e || n.e <= i.toExpNeg, e)), n.isNeg() && !n.isZero() ? `-${r}` : r }; R.toSignificantDigits = R.toSD = function (e, t) { const r = this; const n = r.constructor; return e === void 0 ? (e = n.precision, t = n.rounding) : (ne(e, 1, Me), t === void 0 ? t = n.rounding : ne(t, 0, 8)), O(new n(r), e, t) }; R.toString = function () { const e = this; const t = e.constructor; const r = he(e, e.e <= t.toExpNeg || e.e >= t.toExpPos); return e.isNeg() && !e.isZero() ? `-${r}` : r }; R.truncated = R.trunc = function () { return O(new this.constructor(this), this.e + 1, 1) }; R.valueOf = R.toJSON = function () { const e = this; const t = e.constructor; const r = he(e, e.e <= t.toExpNeg || e.e >= t.toExpPos); return e.isNeg() ? `-${r}` : r }; function z(e) {
  let t; let r; let n; const i = e.length - 1; let o = ''; let s = e[0]; if (i > 0) { for (o += s, t = 1; t < i; t++)n = `${e[t]}`, r = D - n.length, r && (o += Ie(r)), o += n; s = e[t], n = `${s}`, r = D - n.length, r && (o += Ie(r)) }
  else if (s === 0) {
    return '0'
  } for (;s % 10 === 0;)s /= 10; return o + s
} function ne(e, t, r) {
  if (e !== ~~e || e < t || e > r)
    throw new Error(De + e)
} function Ct(e, t, r, n) { let i, o, s, a; for (o = e[0]; o >= 10; o /= 10)--t; return --t < 0 ? (t += D, i = 0) : (i = Math.ceil((t + 1) / D), t %= D), o = 10 ** (D - t), a = e[i] % o | 0, n == null ? t < 3 ? (t == 0 ? a = a / 100 | 0 : t == 1 && (a = a / 10 | 0), s = r < 4 && a == 99999 || r > 3 && a == 49999 || a == 5e4 || a == 0) : s = (r < 4 && a + 1 == o || r > 3 && a + 1 == o / 2) && (e[i + 1] / o / 100 | 0) == 10 ** (t - 2) - 1 || (a == o / 2 || a == 0) && (e[i + 1] / o / 100 | 0) == 0 : t < 4 ? (t == 0 ? a = a / 1e3 | 0 : t == 1 ? a = a / 100 | 0 : t == 2 && (a = a / 10 | 0), s = (n || r < 4) && a == 9999 || !n && r > 3 && a == 4999) : s = ((n || r < 4) && a + 1 == o || !n && r > 3 && a + 1 == o / 2) && (e[i + 1] / o / 1e3 | 0) == 10 ** (t - 3) - 1, s } function yr(e, t, r) { for (var n, i = [0], o, s = 0, a = e.length; s < a;) { for (o = i.length; o--;)i[o] *= t; for (i[0] += Pn.indexOf(e.charAt(s++)), n = 0; n < i.length; n++)i[n] > r - 1 && (i[n + 1] === void 0 && (i[n + 1] = 0), i[n + 1] += i[n] / r | 0, i[n] %= r) } return i.reverse() } function Ll(e, t) {
  let r, n, i; if (t.isZero())
    return t; n = t.d.length, n < 32 ? (r = Math.ceil(n / 3), i = (1 / Tr(4, r)).toString()) : (r = 16, i = '2.3283064365386962890625e-10'), e.precision += r, t = tt(e, 1, t.times(i), new e(1)); for (let o = r; o--;) { const s = t.times(t); t = s.times(s).minus(s).times(8).plus(1) } return e.precision -= r, t
} var $ = (function () {
  function e(n, i, o) { let s; let a = 0; let l = n.length; for (n = n.slice(); l--;)s = n[l] * i + a, n[l] = s % o | 0, a = s / o | 0; return a && n.unshift(a), n } function t(n, i, o, s) {
    let a, l; if (o != s) {
      l = o > s ? 1 : -1
    }
    else {
      for (a = l = 0; a < o; a++) {
        if (n[a] != i[a]) { l = n[a] > i[a] ? 1 : -1; break }
      }
    } return l
  } function r(n, i, o, s) { for (let a = 0; o--;)n[o] -= a, a = n[o] < i[o] ? 1 : 0, n[o] = a * s + n[o] - i[o]; for (;!n[0] && n.length > 1;)n.shift() } return function (n, i, o, s, a, l) {
    let f; let g; let h; let T; let k; let C; let S; let M; let _; let B; let I; let L; let oe; let Q; let tn; let nr; let xt; let rn; let ce; let ir; const or = n.constructor; const nn = n.s == i.s ? 1 : -1; let Y = n.d; let V = i.d; if (!Y || !Y[0] || !V || !V[0])
      return new or(!n.s || !i.s || (Y ? V && Y[0] == V[0] : !V) ? Number.NaN : Y && Y[0] == 0 || !V ? nn * 0 : nn / 0); for (l ? (k = 1, g = n.e - i.e) : (l = pe, k = D, g = X(n.e / k) - X(i.e / k)), ce = V.length, xt = Y.length, _ = new or(nn), B = _.d = [], h = 0; V[h] == (Y[h] || 0); h++);if (V[h] > (Y[h] || 0) && g--, o == null ? (Q = o = or.precision, s = or.rounding) : a ? Q = o + (n.e - i.e) + 1 : Q = o, Q < 0) {
      B.push(1), C = !0
    }
    else {
      if (Q = Q / k + 2 | 0, h = 0, ce == 1) { for (T = 0, V = V[0], Q++; (h < xt || T) && Q--; h++)tn = T * l + (Y[h] || 0), B[h] = tn / V | 0, T = tn % V | 0; C = T || h < xt }
      else { for (T = l / (V[0] + 1) | 0, T > 1 && (V = e(V, T, l), Y = e(Y, T, l), ce = V.length, xt = Y.length), nr = ce, I = Y.slice(0, ce), L = I.length; L < ce;)I[L++] = 0; ir = V.slice(), ir.unshift(0), rn = V[0], V[1] >= l / 2 && ++rn; do T = 0, f = t(V, I, ce, L), f < 0 ? (oe = I[0], ce != L && (oe = oe * l + (I[1] || 0)), T = oe / rn | 0, T > 1 ? (T >= l && (T = l - 1), S = e(V, T, l), M = S.length, L = I.length, f = t(S, I, M, L), f == 1 && (T--, r(S, ce < M ? ir : V, M, l))) : (T == 0 && (f = T = 1), S = V.slice()), M = S.length, M < L && S.unshift(0), r(I, S, L, l), f == -1 && (L = I.length, f = t(V, I, ce, L), f < 1 && (T++, r(I, ce < L ? ir : V, L, l))), L = I.length) : f === 0 && (T++, I = [0]), B[h++] = T, f && I[0] ? I[L++] = Y[nr] || 0 : (I = [Y[nr]], L = 1); while ((nr++ < xt || I[0] !== void 0) && Q--); C = I[0] !== void 0 }B[0] || B.shift()
    } if (k == 1) {
      _.e = g, co = C
    }
    else { for (h = 1, T = B[0]; T >= 10; T /= 10)h++; _.e = h + g * k - 1, O(_, a ? o + _.e + 1 : o, s, C) } return _
  }
}()); function O(e, t, r, n) {
  let i; let o; let s; let a; let l; let f; let g; let h; let T; const k = e.constructor; e:if (t != null) {
    if (h = e.d, !h)
      return e; for (i = 1, a = h[0]; a >= 10; a /= 10)i++; if (o = t - i, o < 0) {
      o += D, s = t, g = h[T = 0], l = g / 10 ** (i - s - 1) % 10 | 0
    }
    else if (T = Math.ceil((o + 1) / D), a = h.length, T >= a) {
      if (n) { for (;a++ <= T;)h.push(0); g = l = 0, i = 1, o %= D, s = o - D + 1 }
      else {
        break e
      }
    }
    else { for (g = a = h[T], i = 1; a >= 10; a /= 10)i++; o %= D, s = o - D + i, l = s < 0 ? 0 : g / 10 ** (i - s - 1) % 10 | 0 } if (n = n || t < 0 || h[T + 1] !== void 0 || (s < 0 ? g : g % 10 ** (i - s - 1)), f = r < 4 ? (l || n) && (r == 0 || r == (e.s < 0 ? 3 : 2)) : l > 5 || l == 5 && (r == 4 || n || r == 6 && (o > 0 ? s > 0 ? g / 10 ** (i - s) : 0 : h[T - 1]) % 10 & 1 || r == (e.s < 0 ? 8 : 7)), t < 1 || !h[0])
      return h.length = 0, f ? (t -= e.e + 1, h[0] = 10 ** ((D - t % D) % D), e.e = -t || 0) : h[0] = e.e = 0, e; if (o == 0 ? (h.length = T, a = 1, T--) : (h.length = T + 1, a = 10 ** (D - o), h[T] = s > 0 ? (g / 10 ** (i - s) % 10 ** s | 0) * a : 0), f) {
      for (;;) {
        if (T == 0) { for (o = 1, s = h[0]; s >= 10; s /= 10)o++; for (s = h[0] += a, a = 1; s >= 10; s /= 10)a++; o != a && (e.e++, h[0] == pe && (h[0] = 1)); break }
        else {
          if (h[T] += a, h[T] != pe)
            break; h[T--] = 0, a = 1
        }
      }
    } for (o = h.length; h[--o] === 0;)h.pop()
  } return N && (e.e > k.maxE ? (e.d = null, e.e = Number.NaN) : e.e < k.minE && (e.e = 0, e.d = [0])), e
} function he(e, t, r) {
  if (!e.isFinite())
    return Eo(e); let n; const i = e.e; let o = z(e.d); const s = o.length; return t ? (r && (n = r - s) > 0 ? o = `${o.charAt(0)}.${o.slice(1)}${Ie(n)}` : s > 1 && (o = `${o.charAt(0)}.${o.slice(1)}`), o = o + (e.e < 0 ? 'e' : 'e+') + e.e) : i < 0 ? (o = `0.${Ie(-i - 1)}${o}`, r && (n = r - s) > 0 && (o += Ie(n))) : i >= s ? (o += Ie(i + 1 - s), r && (n = r - i - 1) > 0 && (o = `${o}.${Ie(n)}`)) : ((n = i + 1) < s && (o = `${o.slice(0, n)}.${o.slice(n)}`), r && (n = r - s) > 0 && (i + 1 === s && (o += '.'), o += Ie(n))), o
} function vr(e, t) { let r = e[0]; for (t *= D; r >= 10; r /= 10)t++; return t } function xr(e, t, r) {
  if (t > Fl)
    throw N = !0, r && (e.precision = r), new Error(po); return O(new e(Er), t, 1, !0)
} function ge(e, t, r) {
  if (t > Tn)
    throw new Error(po); return O(new e(br), t, r, !0)
} function ho(e) { let t = e.length - 1; let r = t * D + 1; if (t = e[t], t) { for (;t % 10 == 0; t /= 10)r--; for (t = e[0]; t >= 10; t /= 10)r++ } return r } function Ie(e) { for (var t = ''; e--;)t += '0'; return t } function yo(e, t, r, n) { let i; let o = new e(1); const s = Math.ceil(n / D + 4); for (N = !1; ;) { if (r % 2 && (o = o.times(t), lo(o.d, s) && (i = !0)), r = X(r / 2), r === 0) { r = o.d.length - 1, i && o.d[r] === 0 && ++o.d[r]; break }t = t.times(t), lo(t.d, s) } return N = !0, o } function ao(e) { return e.d[e.d.length - 1] & 1 } function wo(e, t, r) { for (var n, i, o = new e(t[0]), s = 0; ++s < t.length;) { if (i = new e(t[s]), !i.s) { o = i; break }n = o.cmp(i), (n === r || n === 0 && o.s === r) && (o = i) } return o } function An(e, t) {
  let r; let n; let i; let o; let s; let a; let l; let f = 0; let g = 0; let h = 0; const T = e.constructor; const k = T.rounding; const C = T.precision; if (!e.d || !e.d[0] || e.e > 17)
    return new T(e.d ? e.d[0] ? e.s < 0 ? 0 : 1 / 0 : 1 : e.s ? e.s < 0 ? 0 : e : Number.NaN); for (t == null ? (N = !1, l = C) : l = t, a = new T(0.03125); e.e > -2;)e = e.times(a), h += 5; for (n = Math.log(2 ** h) / Math.LN10 * 2 + 5 | 0, l += n, r = o = s = new T(1), T.precision = l; ;) {
    if (o = O(o.times(e), l, 1), r = r.times(++g), a = s.plus($(o, r, l, 1)), z(a.d).slice(0, l) === z(s.d).slice(0, l)) {
      for (i = h; i--;)s = O(s.times(s), l, 1); if (t == null) {
        if (f < 3 && Ct(s.d, l - n, k, f))
          T.precision = l += 10, r = o = a = new T(1), g = 0, f++; else return O(s, T.precision = C, k, N = !0)
      }
      else {
        return T.precision = C, s
      }
    }s = a
  }
} function Oe(e, t) {
  let r; let n; let i; let o; let s; let a; let l; let f; let g; let h; let T; let k = 1; const C = 10; let S = e; const M = S.d; const _ = S.constructor; const B = _.rounding; const I = _.precision; if (S.s < 0 || !M || !M[0] || !S.e && M[0] == 1 && M.length == 1)
    return new _(M && !M[0] ? -1 / 0 : S.s != 1 ? Number.NaN : M ? 0 : S); if (t == null ? (N = !1, g = I) : g = t, _.precision = g += C, r = z(M), n = r.charAt(0), Math.abs(o = S.e) < 15e14) { for (;n < 7 && n != 1 || n == 1 && r.charAt(1) > 3;)S = S.times(e), r = z(S.d), n = r.charAt(0), k++; o = S.e, n > 1 ? (S = new _(`0.${r}`), o++) : S = new _(`${n}.${r.slice(1)}`) }
  else {
    return f = xr(_, g + 2, I).times(`${o}`), S = Oe(new _(`${n}.${r.slice(1)}`), g - C).plus(f), _.precision = I, t == null ? O(S, I, B, N = !0) : S
  } for (h = S, l = s = S = $(S.minus(1), S.plus(1), g, 1), T = O(S.times(S), g, 1), i = 3; ;) {
    if (s = O(s.times(T), g, 1), f = l.plus($(s, new _(i), g, 1)), z(f.d).slice(0, g) === z(l.d).slice(0, g)) {
      if (l = l.times(2), o !== 0 && (l = l.plus(xr(_, g + 2, I).times(`${o}`))), l = $(l, new _(k), g, 1), t == null) {
        if (Ct(l.d, g - C, B, a))
          _.precision = g += C, f = s = S = $(h.minus(1), h.plus(1), g, 1), T = O(S.times(S), g, 1), i = a = 1; else return O(l, _.precision = I, B, N = !0)
      }
      else {
        return _.precision = I, l
      }
    }l = f, i += 2
  }
} function Eo(e) { return String(e.s * e.s / 0) } function wr(e, t) {
  let r, n, i; for ((r = t.indexOf('.')) > -1 && (t = t.replace('.', '')), (n = t.search(/e/i)) > 0 ? (r < 0 && (r = n), r += +t.slice(n + 1), t = t.substring(0, n)) : r < 0 && (r = t.length), n = 0; t.charCodeAt(n) === 48; n++);for (i = t.length; t.charCodeAt(i - 1) === 48; --i);if (t = t.slice(n, i), t) {
    if (i -= n, e.e = r = r - n - 1, e.d = [], n = (r + 1) % D, r < 0 && (n += D), n < i) { for (n && e.d.push(+t.slice(0, n)), i -= D; n < i;)e.d.push(+t.slice(n, n += D)); t = t.slice(n), n = D - t.length }
    else {
      n -= i
    } for (;n--;)t += '0'; e.d.push(+t), N && (e.e > e.constructor.maxE ? (e.d = null, e.e = Number.NaN) : e.e < e.constructor.minE && (e.e = 0, e.d = [0]))
  }
  else {
    e.e = 0, e.d = [0]
  } return e
} function Ul(e, t) {
  let r, n, i, o, s, a, l, f, g; if (t.includes('_')) {
    if (t = t.replace(/(\d)_(?=\d)/g, '$1'), go.test(t))
      return wr(e, t)
  }
  else if (t === 'Infinity' || t === 'NaN') {
    return +t || (e.s = Number.NaN), e.e = Number.NaN, e.d = null, e
  } if (Ml.test(t))
    r = 16, t = t.toLowerCase(); else if (Dl.test(t))
    r = 2; else if (_l.test(t))
    r = 8; else throw new Error(De + t); for (o = t.search(/p/i), o > 0 ? (l = +t.slice(o + 1), t = t.substring(2, o)) : t = t.slice(2), o = t.indexOf('.'), s = o >= 0, n = e.constructor, s && (t = t.replace('.', ''), a = t.length, o = a - o, i = yo(n, new n(r), o, o * 2)), f = yr(t, r, pe), g = f.length - 1, o = g; f[o] === 0; --o)f.pop(); return o < 0 ? new n(e.s * 0) : (e.e = vr(f, g), e.d = f, N = !1, s && (e = $(e, i, a * 4)), l && (e = e.times(Math.abs(l) < 54 ? 2 ** l : qe.pow(2, l))), N = !0, e)
} function Bl(e, t) {
  let r; const n = t.d.length; if (n < 3)
    return t.isZero() ? t : tt(e, 2, t, t); r = 1.4 * Math.sqrt(n), r = r > 16 ? 16 : r | 0, t = t.times(1 / Tr(5, r)), t = tt(e, 2, t, t); for (var i, o = new e(5), s = new e(16), a = new e(20); r--;)i = t.times(t), t = t.times(o.plus(i.times(s.times(i).minus(a)))); return t
} function tt(e, t, r, n, i) {
  let o; let s; let a; let l; let f = 1; const g = e.precision; const h = Math.ceil(g / D); for (N = !1, l = r.times(r), a = new e(n); ;) {
    if (s = $(a.times(l), new e(t++ * t++), g, 1), a = i ? n.plus(s) : n.minus(s), n = $(s.times(l), new e(t++ * t++), g, 1), s = a.plus(n), s.d[h] !== void 0) {
      for (o = h; s.d[o] === a.d[o] && o--;);if (o == -1)
        break
    }o = a, a = n, n = s, s = o, f++
  } return N = !0, s.d.length = h + 1, s
} function Tr(e, t) { for (var r = e; --t;)r *= e; return r } function bo(e, t) {
  let r; const n = t.s < 0; const i = ge(e, e.precision, 1); const o = i.times(0.5); if (t = t.abs(), t.lte(o))
    return ve = n ? 4 : 1, t; if (r = t.divToInt(i), r.isZero()) {
    ve = n ? 3 : 2
  }
  else {
    if (t = t.minus(r.times(i)), t.lte(o))
      return ve = ao(r) ? n ? 2 : 3 : n ? 4 : 1, t; ve = ao(r) ? n ? 1 : 4 : n ? 3 : 2
  } return t.minus(i).abs()
} function Cn(e, t, r, n) {
  let i; let o; let s; let a; let l; let f; let g; let h; let T; const k = e.constructor; const C = r !== void 0; if (C ? (ne(r, 1, Me), n === void 0 ? n = k.rounding : ne(n, 0, 8)) : (r = k.precision, n = k.rounding), !e.isFinite()) {
    g = Eo(e)
  }
  else {
    for (g = he(e), s = g.indexOf('.'), C ? (i = 2, t == 16 ? r = r * 4 - 3 : t == 8 && (r = r * 3 - 2)) : i = t, s >= 0 && (g = g.replace('.', ''), T = new k(1), T.e = g.length - s, T.d = yr(he(T), 10, i), T.e = T.d.length), h = yr(g, 10, i), o = l = h.length; h[--l] == 0;)h.pop(); if (!h[0]) {
      g = C ? '0p+0' : '0'
    }
    else {
      if (s < 0 ? o-- : (e = new k(e), e.d = h, e.e = o, e = $(e, T, r, n, 0, i), h = e.d, o = e.e, f = co), s = h[r], a = i / 2, f = f || h[r + 1] !== void 0, f = n < 4 ? (s !== void 0 || f) && (n === 0 || n === (e.s < 0 ? 3 : 2)) : s > a || s === a && (n === 4 || f || n === 6 && h[r - 1] & 1 || n === (e.s < 0 ? 8 : 7)), h.length = r, f) {
        for (;++h[--r] > i - 1;)h[r] = 0, r || (++o, h.unshift(1))
      } for (l = h.length; !h[l - 1]; --l);for (s = 0, g = ''; s < l; s++)g += Pn.charAt(h[s]); if (C) {
        if (l > 1) {
          if (t == 16 || t == 8) { for (s = t == 16 ? 4 : 3, --l; l % s; l++)g += '0'; for (h = yr(g, i, t), l = h.length; !h[l - 1]; --l);for (s = 1, g = '1.'; s < l; s++)g += Pn.charAt(h[s]) }
          else {
            g = `${g.charAt(0)}.${g.slice(1)}`
          }
        }g = g + (o < 0 ? 'p' : 'p+') + o
      }
      else if (o < 0) { for (;++o;)g = `0${g}`; g = `0.${g}` }
      else if (++o > l) {
        for (o -= l; o--;)g += '0'
      }
      else {
        o < l && (g = `${g.slice(0, o)}.${g.slice(o)}`)
      }
    }g = (t == 16 ? '0x' : t == 2 ? '0b' : t == 8 ? '0o' : '') + g
  } return e.s < 0 ? `-${g}` : g
} function lo(e, t) {
  if (e.length > t)
    return e.length = t, !0
} function ql(e) { return new this(e).abs() } function $l(e) { return new this(e).acos() } function Vl(e) { return new this(e).acosh() } function jl(e, t) { return new this(e).plus(t) } function Gl(e) { return new this(e).asin() } function Ql(e) { return new this(e).asinh() } function Jl(e) { return new this(e).atan() } function Wl(e) { return new this(e).atanh() } function Kl(e, t) { e = new this(e), t = new this(t); let r; const n = this.precision; const i = this.rounding; const o = n + 4; return !e.s || !t.s ? r = new this(Number.NaN) : !e.d && !t.d ? (r = ge(this, o, 1).times(t.s > 0 ? 0.25 : 0.75), r.s = e.s) : !t.d || e.isZero() ? (r = t.s < 0 ? ge(this, n, i) : new this(0), r.s = e.s) : !e.d || t.isZero() ? (r = ge(this, o, 1).times(0.5), r.s = e.s) : t.s < 0 ? (this.precision = o, this.rounding = 1, r = this.atan($(e, t, o, 1)), t = ge(this, o, 1), this.precision = n, this.rounding = i, r = e.s < 0 ? r.minus(t) : r.plus(t)) : r = this.atan($(e, t, o, 1)), r } function Hl(e) { return new this(e).cbrt() } function zl(e) { return O(e = new this(e), e.e + 1, 2) } function Yl(e, t, r) { return new this(e).clamp(t, r) } function Zl(e) {
  if (!e || typeof e != 'object')
    throw new Error(`${Pr}Object expected`); let t; let r; let n; const i = e.defaults === !0; const o = ['precision', 1, Me, 'rounding', 0, 8, 'toExpNeg', -et, 0, 'toExpPos', 0, et, 'maxE', 0, et, 'minE', -et, 0, 'modulo', 0, 9]; for (t = 0; t < o.length; t += 3) {
    if (r = o[t], i && (this[r] = vn[r]), (n = e[r]) !== void 0) {
      if (X(n) === n && n >= o[t + 1] && n <= o[t + 2])
        this[r] = n; else throw new Error(`${De + r}: ${n}`)
    }
  } if (r = 'crypto', i && (this[r] = vn[r]), (n = e[r]) !== void 0) {
    if (n === !0 || n === !1 || n === 0 || n === 1) {
      if (n) {
        if (typeof crypto < 'u' && crypto && (crypto.getRandomValues || crypto.randomBytes))
          this[r] = !0; else throw new Error(mo)
      }
      else {
        this[r] = !1
      }
    }
    else {
      throw new Error(`${De + r}: ${n}`)
    }
  } return this
} function Xl(e) { return new this(e).cos() } function eu(e) { return new this(e).cosh() } function xo(e) {
  let t, r, n; function i(o) {
    let s; let a; let l; const f = this; if (!(f instanceof i))
      return new i(o); if (f.constructor = i, uo(o)) { f.s = o.s, N ? !o.d || o.e > i.maxE ? (f.e = Number.NaN, f.d = null) : o.e < i.minE ? (f.e = 0, f.d = [0]) : (f.e = o.e, f.d = o.d.slice()) : (f.e = o.e, f.d = o.d ? o.d.slice() : o.d); return } if (l = typeof o, l === 'number') { if (o === 0) { f.s = 1 / o < 0 ? -1 : 1, f.e = 0, f.d = [0]; return } if (o < 0 ? (o = -o, f.s = -1) : f.s = 1, o === ~~o && o < 1e7) { for (s = 0, a = o; a >= 10; a /= 10)s++; N ? s > i.maxE ? (f.e = Number.NaN, f.d = null) : s < i.minE ? (f.e = 0, f.d = [0]) : (f.e = s, f.d = [o]) : (f.e = s, f.d = [o]); return } if (o * 0 !== 0) { o || (f.s = Number.NaN), f.e = Number.NaN, f.d = null; return } return wr(f, o.toString()) } if (l === 'string')
      return (a = o.charCodeAt(0)) === 45 ? (o = o.slice(1), f.s = -1) : (a === 43 && (o = o.slice(1)), f.s = 1), go.test(o) ? wr(f, o) : Ul(f, o); if (l === 'bigint')
      return o < 0 ? (o = -o, f.s = -1) : f.s = 1, wr(f, o.toString()); throw new Error(De + o)
  } if (i.prototype = R, i.ROUND_UP = 0, i.ROUND_DOWN = 1, i.ROUND_CEIL = 2, i.ROUND_FLOOR = 3, i.ROUND_HALF_UP = 4, i.ROUND_HALF_DOWN = 5, i.ROUND_HALF_EVEN = 6, i.ROUND_HALF_CEIL = 7, i.ROUND_HALF_FLOOR = 8, i.EUCLID = 9, i.config = i.set = Zl, i.clone = xo, i.isDecimal = uo, i.abs = ql, i.acos = $l, i.acosh = Vl, i.add = jl, i.asin = Gl, i.asinh = Ql, i.atan = Jl, i.atanh = Wl, i.atan2 = Kl, i.cbrt = Hl, i.ceil = zl, i.clamp = Yl, i.cos = Xl, i.cosh = eu, i.div = tu, i.exp = ru, i.floor = nu, i.hypot = iu, i.ln = ou, i.log = su, i.log10 = lu, i.log2 = au, i.max = uu, i.min = cu, i.mod = pu, i.mul = mu, i.pow = du, i.random = fu, i.round = gu, i.sign = hu, i.sin = yu, i.sinh = wu, i.sqrt = Eu, i.sub = bu, i.sum = xu, i.tan = Pu, i.tanh = vu, i.trunc = Tu, e === void 0 && (e = {}), e && e.defaults !== !0) {
    for (n = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'], t = 0; t < n.length;)e.hasOwnProperty(r = n[t++]) || (e[r] = this[r])
  } return i.config(e), i
} function tu(e, t) { return new this(e).div(t) } function ru(e) { return new this(e).exp() } function nu(e) { return O(e = new this(e), e.e + 1, 3) } function iu() {
  let e; let t; let r = new this(0); for (N = !1, e = 0; e < arguments.length;) {
    if (t = new this(arguments[e++]), t.d) {
      r.d && (r = r.plus(t.times(t)))
    }
    else {
      if (t.s)
        return N = !0, new this(1 / 0); r = t
    }
  } return N = !0, r.sqrt()
} function uo(e) { return e instanceof qe || e && e.toStringTag === fo || !1 } function ou(e) { return new this(e).ln() } function su(e, t) { return new this(e).log(t) } function au(e) { return new this(e).log(2) } function lu(e) { return new this(e).log(10) } function uu() { return wo(this, arguments, -1) } function cu() { return wo(this, arguments, 1) } function pu(e, t) { return new this(e).mod(t) } function mu(e, t) { return new this(e).mul(t) } function du(e, t) { return new this(e).pow(t) } function fu(e) {
  let t; let r; let n; let i; let o = 0; const s = new this(1); let a = []; if (e === void 0 ? e = this.precision : ne(e, 1, Me), n = Math.ceil(e / D), this.crypto) {
    if (crypto.getRandomValues) {
      for (t = crypto.getRandomValues(new Uint32Array(n)); o < n;)i = t[o], i >= 429e7 ? t[o] = crypto.getRandomValues(new Uint32Array(1))[0] : a[o++] = i % 1e7
    }
    else if (crypto.randomBytes) { for (t = crypto.randomBytes(n *= 4); o < n;)i = t[o] + (t[o + 1] << 8) + (t[o + 2] << 16) + ((t[o + 3] & 127) << 24), i >= 214e7 ? crypto.randomBytes(4).copy(t, o) : (a.push(i % 1e7), o += 4); o = n / 4 }
    else {
      throw new Error(mo)
    }
  }
  else {
    for (;o < n;)a[o++] = Math.random() * 1e7 | 0
  } for (n = a[--o], e %= D, n && e && (i = 10 ** (D - e), a[o] = (n / i | 0) * i); a[o] === 0; o--)a.pop(); if (o < 0) {
    r = 0, a = [0]
  }
  else { for (r = -1; a[0] === 0; r -= D)a.shift(); for (n = 1, i = a[0]; i >= 10; i /= 10)n++; n < D && (r -= D - n) } return s.e = r, s.d = a, s
} function gu(e) { return O(e = new this(e), e.e + 1, this.rounding) } function hu(e) { return e = new this(e), e.d ? e.d[0] ? e.s : 0 * e.s : e.s || Number.NaN } function yu(e) { return new this(e).sin() } function wu(e) { return new this(e).sinh() } function Eu(e) { return new this(e).sqrt() } function bu(e, t) { return new this(e).sub(t) } function xu() { let e = 0; const t = arguments; let r = new this(t[e]); for (N = !1; r.s && ++e < t.length;)r = r.plus(t[e]); return N = !0, O(r, this.precision, this.rounding) } function Pu(e) { return new this(e).tan() } function vu(e) { return new this(e).tanh() } function Tu(e) { return O(e = new this(e), e.e + 1, 1) }R[Symbol.for('nodejs.util.inspect.custom')] = R.toString; R[Symbol.toStringTag] = 'Decimal'; var qe = R.constructor = xo(vn); Er = new qe(Er); br = new qe(br); const Te = qe; function Rt(e) { return e === null ? e : Array.isArray(e) ? e.map(Rt) : typeof e == 'object' ? Au(e) ? Cu(e) : e.constructor !== null && e.constructor.name !== 'Object' ? e : Xe(e, Rt) : e } function Au(e) { return e !== null && typeof e == 'object' && typeof e.$type == 'string' } function Cu({ $type: e, value: t }) { switch (e) { case 'BigInt':return BigInt(t); case 'Bytes':{ const { buffer: r, byteOffset: n, byteLength: i } = w.Buffer.from(t, 'base64'); return new Uint8Array(r, n, i) } case 'DateTime':return new Date(t); case 'Decimal':return new Te(t); case 'Json':return JSON.parse(t); default:Pe(t, 'Unknown tagged value') } }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const ye = class {
  _map = new Map(); get(t) { return this._map.get(t)?.value }set(t, r) { this._map.set(t, { value: r }) }getOrCreate(t, r) {
    const n = this._map.get(t); if (n)
      return n.value; const i = r(); return this.set(t, i), i
  }
}; d(); u(); c(); p(); m(); function _e(e) { return e.substring(0, 1).toLowerCase() + e.substring(1) }d(); u(); c(); p(); m(); function Po(e, t) { const r = {}; for (const n of e) { const i = n[t]; r[i] = n } return r }d(); u(); c(); p(); m(); function St(e) { let t; return { get() { return t || (t = { value: e() }), t.value } } }d(); u(); c(); p(); m(); function Ru(e) { return { models: Rn(e.models), enums: Rn(e.enums), types: Rn(e.types) } } function Rn(e) { const t = {}; for (const { name: r, ...n } of e)t[r] = n; return t }d(); u(); c(); p(); m(); function rt(e) { return e instanceof Date || Object.prototype.toString.call(e) === '[object Date]' } function Ar(e) { return e.toString() !== 'Invalid Date' }d(); u(); c(); p(); m(); function nt(e) { return qe.isDecimal(e) ? !0 : e !== null && typeof e == 'object' && typeof e.s == 'number' && typeof e.e == 'number' && typeof e.toFixed == 'function' && Array.isArray(e.d) }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Cr = {}; sr(Cr, { ModelAction: () => kt, datamodelEnumToSchemaEnum: () => Su }); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); function Su(e) { return { name: e.name, values: e.values.map(t => t.name) } }d(); u(); c(); p(); m(); var kt = (I => (I.findUnique = 'findUnique', I.findUniqueOrThrow = 'findUniqueOrThrow', I.findFirst = 'findFirst', I.findFirstOrThrow = 'findFirstOrThrow', I.findMany = 'findMany', I.create = 'create', I.createMany = 'createMany', I.createManyAndReturn = 'createManyAndReturn', I.update = 'update', I.updateMany = 'updateMany', I.updateManyAndReturn = 'updateManyAndReturn', I.upsert = 'upsert', I.delete = 'delete', I.deleteMany = 'deleteMany', I.groupBy = 'groupBy', I.count = 'count', I.aggregate = 'aggregate', I.findRaw = 'findRaw', I.aggregateRaw = 'aggregateRaw', I))(kt || {}); const ku = Ue(Xi()); const Iu = { red: Ye, gray: Bi, dim: cr, bold: ur, underline: _i, highlightSource: e => e.highlight() }; const Ou = { red: e => e, gray: e => e, dim: e => e, bold: e => e, underline: e => e, highlightSource: e => e }; function Du({ message: e, originalMethod: t, isPanic: r, callArguments: n }) { return { functionName: `prisma.${t}()`, message: e, isPanic: r ?? !1, callArguments: n } } function Mu({ functionName: e, location: t, message: r, isPanic: n, contextLines: i, callArguments: o }, s) {
  const a = ['']; const l = t ? ' in' : ':'; if (n ? (a.push(s.red(`Oops, an unknown error occurred! This is ${s.bold('on us')}, you did nothing wrong.`)), a.push(s.red(`It occurred in the ${s.bold(`\`${e}\``)} invocation${l}`))) : a.push(s.red(`Invalid ${s.bold(`\`${e}\``)} invocation${l}`)), t && a.push(s.underline(_u(t))), i) { a.push(''); const f = [i.toString()]; o && (f.push(o), f.push(s.dim(')'))), a.push(f.join('')), o && a.push('') }
  else {
    a.push(''), o && a.push(o), a.push('')
  } return a.push(r), a.join(`
`)
} function _u(e) { const t = [e.fileName]; return e.lineNumber && t.push(String(e.lineNumber)), e.columnNumber && t.push(String(e.columnNumber)), t.join(':') } function Rr(e) { const t = e.showColors ? Iu : Ou; let r; return typeof $getTemplateParameters < 'u' ? r = $getTemplateParameters(e, t) : r = Du(e), Mu(r, t) }d(); u(); c(); p(); m(); const Oo = Ue(Sn()); d(); u(); c(); p(); m(); function Co(e, t, r) { const n = Ro(e); const i = Nu(n); const o = Lu(i); o ? Sr(o, t, r) : t.addErrorMessage(() => 'Unknown error') } function Ro(e) { return e.errors.flatMap(t => t.kind === 'Union' ? Ro(t) : [t]) } function Nu(e) { const t = new Map(); const r = []; for (const n of e) { if (n.kind !== 'InvalidArgumentType') { r.push(n); continue } const i = `${n.selectionPath.join('.')}:${n.argumentPath.join('.')}`; const o = t.get(i); o ? t.set(i, { ...n, argument: { ...n.argument, typeNames: Fu(o.argument.typeNames, n.argument.typeNames) } }) : t.set(i, n) } return r.push(...t.values()), r } function Fu(e, t) { return [...new Set(e.concat(t))] } function Lu(e) { return xn(e, (t, r) => { const n = To(t); const i = To(r); return n !== i ? n - i : Ao(t) - Ao(r) }) } function To(e) { let t = 0; return Array.isArray(e.selectionPath) && (t += e.selectionPath.length), Array.isArray(e.argumentPath) && (t += e.argumentPath.length), t } function Ao(e) { switch (e.kind) { case 'InvalidArgumentValue':case 'ValueTooLarge':return 20; case 'InvalidArgumentType':return 10; case 'RequiredArgumentMissing':return -10; default:return 0 } }d(); u(); c(); p(); m(); const le = class {constructor(t, r) { this.name = t; this.value = r }isRequired = !1; makeRequired() { return this.isRequired = !0, this }write(t) { const { colors: { green: r } } = t.context; t.addMarginSymbol(r(this.isRequired ? '+' : '?')), t.write(r(this.name)), this.isRequired || t.write(r('?')), t.write(r(': ')), typeof this.value == 'string' ? t.write(r(this.value)) : t.write(this.value) }}; d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); ko(); d(); u(); c(); p(); m(); const it = class {
  constructor(t = 0, r) { this.context = r; this.currentIndent = t }lines = []; currentLine = ''; currentIndent = 0; marginSymbol; afterNextNewLineCallback; write(t) { return typeof t == 'string' ? this.currentLine += t : t.write(this), this }writeJoined(t, r, n = (i, o) => o.write(i)) { const i = r.length - 1; for (let o = 0; o < r.length; o++)n(r[o], this), o !== i && this.write(t); return this }writeLine(t) { return this.write(t).newLine() }newLine() { this.lines.push(this.indentedCurrentLine()), this.currentLine = '', this.marginSymbol = void 0; const t = this.afterNextNewLineCallback; return this.afterNextNewLineCallback = void 0, t?.(), this }withIndent(t) { return this.indent(), t(this), this.unindent(), this }afterNextNewline(t) { return this.afterNextNewLineCallback = t, this }indent() { return this.currentIndent++, this }unindent() { return this.currentIndent > 0 && this.currentIndent--, this }addMarginSymbol(t) { return this.marginSymbol = t, this }toString() {
    return this.lines.concat(this.indentedCurrentLine()).join(`
`)
  }

  getCurrentLineLength() { return this.currentLine.length }indentedCurrentLine() { const t = this.currentLine.padStart(this.currentLine.length + 2 * this.currentIndent); return this.marginSymbol ? this.marginSymbol + t.slice(1) : t }
}; So(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const kr = class {constructor(t) { this.value = t }write(t) { t.write(this.value) }markAsError() { this.value.markAsError() }}; d(); u(); c(); p(); m(); const Ir = e => e; const Or = { bold: Ir, red: Ir, green: Ir, dim: Ir, enabled: !1 }; const Io = { bold: ur, red: Ye, green: Ni, dim: cr, enabled: !0 }; const ot = { write(e) { e.writeLine(',') } }; d(); u(); c(); p(); m(); const we = class {constructor(t) { this.contents = t }isUnderlined = !1; color = t => t; underline() { return this.isUnderlined = !0, this }setColor(t) { return this.color = t, this }write(t) { const r = t.getCurrentLineLength(); t.write(this.color(this.contents)), this.isUnderlined && t.afterNextNewline(() => { t.write(' '.repeat(r)).writeLine(this.color('~'.repeat(this.contents.length))) }) }}; d(); u(); c(); p(); m(); const Ne = class {hasError = !1; markAsError() { return this.hasError = !0, this }}; const st = class extends Ne {items = []; addItem(t) { return this.items.push(new kr(t)), this }getField(t) { return this.items[t] }getPrintWidth() { return this.items.length === 0 ? 2 : Math.max(...this.items.map(r => r.value.getPrintWidth())) + 2 }write(t) { if (this.items.length === 0) { this.writeEmpty(t); return } this.writeWithItems(t) }writeEmpty(t) { const r = new we('[]'); this.hasError && r.setColor(t.context.colors.red).underline(), t.write(r) }writeWithItems(t) { const { colors: r } = t.context; t.writeLine('[').withIndent(() => t.writeJoined(ot, this.items).newLine()).write(']'), this.hasError && t.afterNextNewline(() => { t.writeLine(r.red('~'.repeat(this.getPrintWidth()))) }) }asObject() {}}; const at = class e extends Ne {
  fields = {}; suggestions = []; addField(t) { this.fields[t.name] = t }addSuggestion(t) { this.suggestions.push(t) }getField(t) { return this.fields[t] }getDeepField(t) {
    const [r, ...n] = t; const i = this.getField(r); if (!i)
      return; let o = i; for (const s of n) {
      let a; if (o.value instanceof e ? a = o.value.getField(s) : o.value instanceof st && (a = o.value.getField(Number(s))), !a)
        return; o = a
    } return o
  }

  getDeepFieldValue(t) { return t.length === 0 ? this : this.getDeepField(t)?.value }hasField(t) { return !!this.getField(t) }removeAllFields() { this.fields = {} }removeField(t) { delete this.fields[t] }getFields() { return this.fields }isEmpty() { return Object.keys(this.fields).length === 0 }getFieldValue(t) { return this.getField(t)?.value }getDeepSubSelectionValue(t) {
    let r = this; for (const n of t) {
      if (!(r instanceof e))
        return; const i = r.getSubSelectionValue(n); if (!i)
        return; r = i
    } return r
  }

  getDeepSelectionParent(t) {
    const r = this.getSelectionParent(); if (!r)
      return; let n = r; for (const i of t) {
      const o = n.value.getFieldValue(i); if (!o || !(o instanceof e))
        return; const s = o.getSelectionParent(); if (!s)
        return; n = s
    } return n
  }

  getSelectionParent() {
    const t = this.getField('select')?.value.asObject(); if (t)
      return { kind: 'select', value: t }; const r = this.getField('include')?.value.asObject(); if (r)
      return { kind: 'include', value: r }
  }

  getSubSelectionValue(t) { return this.getSelectionParent()?.value.fields[t].value }getPrintWidth() { const t = Object.values(this.fields); return t.length == 0 ? 2 : Math.max(...t.map(n => n.getPrintWidth())) + 2 }write(t) { const r = Object.values(this.fields); if (r.length === 0 && this.suggestions.length === 0) { this.writeEmpty(t); return } this.writeWithContents(t, r) }asObject() { return this }writeEmpty(t) { const r = new we('{}'); this.hasError && r.setColor(t.context.colors.red).underline(), t.write(r) }writeWithContents(t, r) { t.writeLine('{').withIndent(() => { t.writeJoined(ot, [...r, ...this.suggestions]).newLine() }), t.write('}'), this.hasError && t.afterNextNewline(() => { t.writeLine(t.context.colors.red('~'.repeat(this.getPrintWidth()))) }) }
}; d(); u(); c(); p(); m(); const H = class extends Ne {constructor(r) { super(); this.text = r }getPrintWidth() { return this.text.length }write(r) { const n = new we(this.text); this.hasError && n.underline().setColor(r.context.colors.red), r.write(n) }asObject() {}}; d(); u(); c(); p(); m(); const It = class {fields = []; addField(t, r) { return this.fields.push({ write(n) { const { green: i, dim: o } = n.context.colors; n.write(i(o(`${t}: ${r}`))).addMarginSymbol(i(o('+'))) } }), this }write(t) { const { colors: { green: r } } = t.context; t.writeLine(r('{')).withIndent(() => { t.writeJoined(ot, this.fields).newLine() }).write(r('}')).addMarginSymbol(r('+')) }}; function Sr(e, t, r) { switch (e.kind) { case 'MutuallyExclusiveFields':Uu(e, t); break; case 'IncludeOnScalar':Bu(e, t); break; case 'EmptySelection':qu(e, t, r); break; case 'UnknownSelectionField':Gu(e, t); break; case 'InvalidSelectionValue':Qu(e, t); break; case 'UnknownArgument':Ju(e, t); break; case 'UnknownInputField':Wu(e, t); break; case 'RequiredArgumentMissing':Ku(e, t); break; case 'InvalidArgumentType':Hu(e, t); break; case 'InvalidArgumentValue':zu(e, t); break; case 'ValueTooLarge':Yu(e, t); break; case 'SomeFieldsMissing':Zu(e, t); break; case 'TooManyFieldsGiven':Xu(e, t); break; case 'Union':Co(e, t, r); break; default:throw new Error(`not implemented: ${e.kind}`) } } function Uu(e, t) { const r = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); r && (r.getField(e.firstField)?.markAsError(), r.getField(e.secondField)?.markAsError()), t.addErrorMessage(n => `Please ${n.bold('either')} use ${n.green(`\`${e.firstField}\``)} or ${n.green(`\`${e.secondField}\``)}, but ${n.red('not both')} at the same time.`) } function Bu(e, t) {
  const [r, n] = lt(e.selectionPath); const i = e.outputType; const o = t.arguments.getDeepSelectionParent(r)?.value; if (o && (o.getField(n)?.markAsError(), i)) {
    for (const s of i.fields)s.isRelation && o.addSuggestion(new le(s.name, 'true'))
  } t.addErrorMessage((s) => {
    let a = `Invalid scalar field ${s.red(`\`${n}\``)} for ${s.bold('include')} statement`; return i ? a += ` on model ${s.bold(i.name)}. ${Ot(s)}` : a += '.', a += `
Note that ${s.bold('include')} statements only accept relation fields.`, a
  })
} function qu(e, t, r) { const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); if (n) { const i = n.getField('omit')?.value.asObject(); if (i) { $u(e, t, i); return } if (n.hasField('select')) { Vu(e, t); return } } if (r?.[_e(e.outputType.name)]) { ju(e, t); return }t.addErrorMessage(() => `Unknown field at "${e.selectionPath.join('.')} selection"`) } function $u(e, t, r) { r.removeAllFields(); for (const n of e.outputType.fields)r.addSuggestion(new le(n.name, 'false')); t.addErrorMessage(n => `The ${n.red('omit')} statement includes every field of the model ${n.bold(e.outputType.name)}. At least one field must be included in the result`) } function Vu(e, t) { const r = e.outputType; const n = t.arguments.getDeepSelectionParent(e.selectionPath)?.value; const i = n?.isEmpty() ?? !1; n && (n.removeAllFields(), _o(n, r)), t.addErrorMessage(o => i ? `The ${o.red('`select`')} statement for type ${o.bold(r.name)} must not be empty. ${Ot(o)}` : `The ${o.red('`select`')} statement for type ${o.bold(r.name)} needs ${o.bold('at least one truthy value')}.`) } function ju(e, t) {
  const r = new It(); for (const i of e.outputType.fields)i.isRelation || r.addField(i.name, 'false'); const n = new le('omit', r).makeRequired(); if (e.selectionPath.length === 0) {
    t.arguments.addSuggestion(n)
  }
  else { const [i, o] = lt(e.selectionPath); const a = t.arguments.getDeepSelectionParent(i)?.value.asObject()?.getField(o); if (a) { const l = a?.value.asObject() ?? new at(); l.addSuggestion(n), a.value = l } }t.addErrorMessage(i => `The global ${i.red('omit')} configuration excludes every field of the model ${i.bold(e.outputType.name)}. At least one field must be included in the result`)
} function Gu(e, t) { const r = No(e.selectionPath, t); if (r.parentKind !== 'unknown') { r.field.markAsError(); const n = r.parent; switch (r.parentKind) { case 'select':_o(n, e.outputType); break; case 'include':ec(n, e.outputType); break; case 'omit':tc(n, e.outputType); break } }t.addErrorMessage((n) => { const i = [`Unknown field ${n.red(`\`${r.fieldName}\``)}`]; return r.parentKind !== 'unknown' && i.push(`for ${n.bold(r.parentKind)} statement`), i.push(`on model ${n.bold(`\`${e.outputType.name}\``)}.`), i.push(Ot(n)), i.join(' ') }) } function Qu(e, t) { const r = No(e.selectionPath, t); r.parentKind !== 'unknown' && r.field.value.markAsError(), t.addErrorMessage(n => `Invalid value for selection field \`${n.red(r.fieldName)}\`: ${e.underlyingError}`) } function Ju(e, t) { const r = e.argumentPath[0]; const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); n && (n.getField(r)?.markAsError(), rc(n, e.arguments)), t.addErrorMessage(i => Do(i, r, e.arguments.map(o => o.name))) } function Wu(e, t) { const [r, n] = lt(e.argumentPath); const i = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); if (i) { i.getDeepField(e.argumentPath)?.markAsError(); const o = i.getDeepFieldValue(r)?.asObject(); o && Fo(o, e.inputType) }t.addErrorMessage(o => Do(o, n, e.inputType.fields.map(s => s.name))) } function Do(e, t, r) { const n = [`Unknown argument \`${e.red(t)}\`.`]; const i = ic(t, r); return i && n.push(`Did you mean \`${e.green(i)}\`?`), r.length > 0 && n.push(Ot(e)), n.join(' ') } function Ku(e, t) {
  let r; t.addErrorMessage(l => r?.value instanceof H && r.value.text === 'null' ? `Argument \`${l.green(o)}\` must not be ${l.red('null')}.` : `Argument \`${l.green(o)}\` is missing.`); const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); if (!n)
    return; let [i, o] = lt(e.argumentPath); const s = new It(); const a = n.getDeepFieldValue(i)?.asObject(); if (a) {
    if (r = a.getField(o), r && a.removeField(o), e.inputTypes.length === 1 && e.inputTypes[0].kind === 'object') { for (const l of e.inputTypes[0].fields)s.addField(l.name, l.typeNames.join(' | ')); a.addSuggestion(new le(o, s).makeRequired()) }
    else { const l = e.inputTypes.map(Mo).join(' | '); a.addSuggestion(new le(o, l).makeRequired()) } if (e.dependentArgumentPath) { n.getDeepField(e.dependentArgumentPath)?.markAsError(); const [,l] = lt(e.dependentArgumentPath); t.addErrorMessage(f => `Argument \`${f.green(o)}\` is required because argument \`${f.green(l)}\` was provided.`) }
  }
} function Mo(e) { return e.kind === 'list' ? `${Mo(e.elementType)}[]` : e.name } function Hu(e, t) { const r = e.argument.name; const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); n && n.getDeepFieldValue(e.argumentPath)?.markAsError(), t.addErrorMessage((i) => { const o = Dr('or', e.argument.typeNames.map(s => i.green(s))); return `Argument \`${i.bold(r)}\`: Invalid value provided. Expected ${o}, provided ${i.red(e.inferredType)}.` }) } function zu(e, t) { const r = e.argument.name; const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); n && n.getDeepFieldValue(e.argumentPath)?.markAsError(), t.addErrorMessage((i) => { const o = [`Invalid value for argument \`${i.bold(r)}\``]; if (e.underlyingError && o.push(`: ${e.underlyingError}`), o.push('.'), e.argument.typeNames.length > 0) { const s = Dr('or', e.argument.typeNames.map(a => i.green(a))); o.push(` Expected ${s}.`) } return o.join('') }) } function Yu(e, t) { const r = e.argument.name; const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); let i; if (n) { const s = n.getDeepField(e.argumentPath)?.value; s?.markAsError(), s instanceof H && (i = s.text) }t.addErrorMessage((o) => { const s = ['Unable to fit value']; return i && s.push(o.red(i)), s.push(`into a 64-bit signed integer for field \`${o.bold(r)}\``), s.join(' ') }) } function Zu(e, t) { const r = e.argumentPath[e.argumentPath.length - 1]; const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); if (n) { const i = n.getDeepFieldValue(e.argumentPath)?.asObject(); i && Fo(i, e.inputType) }t.addErrorMessage((i) => { const o = [`Argument \`${i.bold(r)}\` of type ${i.bold(e.inputType.name)} needs`]; return e.constraints.minFieldCount === 1 ? e.constraints.requiredFields ? o.push(`${i.green('at least one of')} ${Dr('or', e.constraints.requiredFields.map(s => `\`${i.bold(s)}\``))} arguments.`) : o.push(`${i.green('at least one')} argument.`) : o.push(`${i.green(`at least ${e.constraints.minFieldCount}`)} arguments.`), o.push(Ot(i)), o.join(' ') }) } function Xu(e, t) { const r = e.argumentPath[e.argumentPath.length - 1]; const n = t.arguments.getDeepSubSelectionValue(e.selectionPath)?.asObject(); let i = []; if (n) { const o = n.getDeepFieldValue(e.argumentPath)?.asObject(); o && (o.markAsError(), i = Object.keys(o.getFields())) }t.addErrorMessage((o) => { const s = [`Argument \`${o.bold(r)}\` of type ${o.bold(e.inputType.name)} needs`]; return e.constraints.minFieldCount === 1 && e.constraints.maxFieldCount == 1 ? s.push(`${o.green('exactly one')} argument,`) : e.constraints.maxFieldCount == 1 ? s.push(`${o.green('at most one')} argument,`) : s.push(`${o.green(`at most ${e.constraints.maxFieldCount}`)} arguments,`), s.push(`but you provided ${Dr('and', i.map(a => o.red(a)))}. Please choose`), e.constraints.maxFieldCount === 1 ? s.push('one.') : s.push(`${e.constraints.maxFieldCount}.`), s.join(' ') }) } function _o(e, t) { for (const r of t.fields)e.hasField(r.name) || e.addSuggestion(new le(r.name, 'true')) } function ec(e, t) { for (const r of t.fields)r.isRelation && !e.hasField(r.name) && e.addSuggestion(new le(r.name, 'true')) } function tc(e, t) { for (const r of t.fields)!e.hasField(r.name) && !r.isRelation && e.addSuggestion(new le(r.name, 'true')) } function rc(e, t) { for (const r of t)e.hasField(r.name) || e.addSuggestion(new le(r.name, r.typeNames.join(' | '))) } function No(e, t) {
  const [r, n] = lt(e); const i = t.arguments.getDeepSubSelectionValue(r)?.asObject(); if (!i)
    return { parentKind: 'unknown', fieldName: n }; const o = i.getFieldValue('select')?.asObject(); const s = i.getFieldValue('include')?.asObject(); const a = i.getFieldValue('omit')?.asObject(); let l = o?.getField(n); return o && l ? { parentKind: 'select', parent: o, field: l, fieldName: n } : (l = s?.getField(n), s && l ? { parentKind: 'include', field: l, parent: s, fieldName: n } : (l = a?.getField(n), a && l ? { parentKind: 'omit', field: l, parent: a, fieldName: n } : { parentKind: 'unknown', fieldName: n }))
} function Fo(e, t) {
  if (t.kind === 'object') {
    for (const r of t.fields)e.hasField(r.name) || e.addSuggestion(new le(r.name, r.typeNames.join(' | ')))
  }
} function lt(e) {
  const t = [...e]; const r = t.pop(); if (!r)
    throw new Error('unexpected empty path'); return [t, r]
} function Ot({ green: e, enabled: t }) { return `Available options are ${t ? `listed in ${e('green')}` : 'marked with ?'}.` } function Dr(e, t) {
  if (t.length === 1)
    return t[0]; const r = [...t]; const n = r.pop(); return `${r.join(', ')} ${e} ${n}`
} const nc = 3; function ic(e, t) { let r = 1 / 0; let n; for (const i of t) { const o = (0, Oo.default)(e, i); o > nc || o < r && (r = o, n = i) } return n }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Dt = class {modelName; name; typeName; isList; isEnum; constructor(t, r, n, i, o) { this.modelName = t, this.name = r, this.typeName = n, this.isList = i, this.isEnum = o }_toGraphQLInputType() { const t = this.isList ? 'List' : ''; const r = this.isEnum ? 'Enum' : ''; return `${t}${r}${this.typeName}FieldRefInput<${this.modelName}>` }}; function ut(e) { return e instanceof Dt }d(); u(); c(); p(); m(); const Mr = Symbol(); const In = new WeakMap(); const Ae = class {constructor(t) { t === Mr ? In.set(this, `Prisma.${this._getName()}`) : In.set(this, `new Prisma.${this._getNamespace()}.${this._getName()}()`) }_getName() { return this.constructor.name }toString() { return In.get(this) }}; const Mt = class extends Ae {_getNamespace() { return 'NullTypes' }}; const _t = class extends Mt {#e}; Dn(_t, 'DbNull'); const Nt = class extends Mt {#e}; Dn(Nt, 'JsonNull'); const Ft = class extends Mt {#e}; Dn(Ft, 'AnyNull'); const On = { classes: { DbNull: _t, JsonNull: Nt, AnyNull: Ft }, instances: { DbNull: new _t(Mr), JsonNull: new Nt(Mr), AnyNull: new Ft(Mr) } }; function Dn(e, t) { Object.defineProperty(e, 'name', { value: t, configurable: !0 }) }d(); u(); c(); p(); m(); const Lo = ': '; const _r = class {constructor(t, r) { this.name = t; this.value = r }hasError = !1; markAsError() { this.hasError = !0 }getPrintWidth() { return this.name.length + this.value.getPrintWidth() + Lo.length }write(t) { const r = new we(this.name); this.hasError && r.underline().setColor(t.context.colors.red), t.write(r).write(Lo).write(this.value) }}; const Mn = class {
  arguments; errorMessages = []; constructor(t) { this.arguments = t }write(t) { t.write(this.arguments) }addErrorMessage(t) { this.errorMessages.push(t) }renderAllMessages(t) {
    return this.errorMessages.map(r => r(t)).join(`
`)
  }
}; function ct(e) { return new Mn(Uo(e)) } function Uo(e) { const t = new at(); for (const [r, n] of Object.entries(e)) { const i = new _r(r, Bo(n)); t.addField(i) } return t } function Bo(e) {
  if (typeof e == 'string')
    return new H(JSON.stringify(e)); if (typeof e == 'number' || typeof e == 'boolean')
    return new H(String(e)); if (typeof e == 'bigint')
    return new H(`${e}n`); if (e === null)
    return new H('null'); if (e === void 0)
    return new H('undefined'); if (nt(e))
    return new H(`new Prisma.Decimal("${e.toFixed()}")`); if (e instanceof Uint8Array)
    return w.Buffer.isBuffer(e) ? new H(`Buffer.alloc(${e.byteLength})`) : new H(`new Uint8Array(${e.byteLength})`); if (e instanceof Date) { const t = Ar(e) ? e.toISOString() : 'Invalid Date'; return new H(`new Date("${t}")`) } return e instanceof Ae ? new H(`Prisma.${e._getName()}`) : ut(e) ? new H(`prisma.${_e(e.modelName)}.$fields.${e.name}`) : Array.isArray(e) ? oc(e) : typeof e == 'object' ? Uo(e) : new H(Object.prototype.toString.call(e))
} function oc(e) { const t = new st(); for (const r of e)t.addItem(Bo(r)); return t } function Nr(e, t) { const r = t === 'pretty' ? Io : Or; const n = e.renderAllMessages(r); const i = new it(0, { colors: r }).write(e).toString(); return { message: n, args: i } } function Fr({ args: e, errors: t, errorFormat: r, callsite: n, originalMethod: i, clientVersion: o, globalOmit: s }) { const a = ct(e); for (const h of t)Sr(h, a, s); const { message: l, args: f } = Nr(a, r); const g = Rr({ message: l, callsite: n, originalMethod: i, showColors: r === 'pretty', callArguments: f }); throw new ee(g, { clientVersion: o }) }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); function Ee(e) { return e.replace(/^./, t => t.toLowerCase()) }d(); u(); c(); p(); m(); function $o(e, t, r) { const n = Ee(r); return !t.result || !(t.result.$allModels || t.result[n]) ? e : sc({ ...e, ...qo(t.name, e, t.result.$allModels), ...qo(t.name, e, t.result[n]) }) } function sc(e) { const t = new ye(); const r = (n, i) => t.getOrCreate(n, () => i.has(n) ? [n] : (i.add(n), e[n] ? e[n].needs.flatMap(o => r(o, i)) : [n])); return Xe(e, n => ({ ...n, needs: r(n.name, new Set()) })) } function qo(e, t, r) { return r ? Xe(r, ({ needs: n, compute: i }, o) => ({ name: o, needs: n ? Object.keys(n).filter(s => n[s]) : [], compute: ac(t, o, i) })) : {} } function ac(e, t, r) { const n = e?.[t]?.compute; return n ? i => r({ ...i, [t]: n(i) }) : r } function Vo(e, t) {
  if (!t)
    return e; const r = { ...e }; for (const n of Object.values(t)) {
    if (e[n.name]) {
      for (const i of n.needs)r[i] = !0
    }
  } return r
} function jo(e, t) {
  if (!t)
    return e; const r = { ...e }; for (const n of Object.values(t)) {
    if (!e[n.name]) {
      for (const i of n.needs) delete r[i]
    }
  } return r
} const Lr = class {constructor(t, r) { this.extension = t; this.previous = r }computedFieldsCache = new ye(); modelExtensionsCache = new ye(); queryCallbacksCache = new ye(); clientExtensions = St(() => this.extension.client ? { ...this.previous?.getAllClientExtensions(), ...this.extension.client } : this.previous?.getAllClientExtensions()); batchCallbacks = St(() => { const t = this.previous?.getAllBatchQueryCallbacks() ?? []; const r = this.extension.query?.$__internalBatch; return r ? t.concat(r) : t }); getAllComputedFields(t) { return this.computedFieldsCache.getOrCreate(t, () => $o(this.previous?.getAllComputedFields(t), this.extension, t)) }getAllClientExtensions() { return this.clientExtensions.get() }getAllModelExtensions(t) { return this.modelExtensionsCache.getOrCreate(t, () => { const r = Ee(t); return !this.extension.model || !(this.extension.model[r] || this.extension.model.$allModels) ? this.previous?.getAllModelExtensions(t) : { ...this.previous?.getAllModelExtensions(t), ...this.extension.model.$allModels, ...this.extension.model[r] } }) }getAllQueryCallbacks(t, r) { return this.queryCallbacksCache.getOrCreate(`${t}:${r}`, () => { const n = this.previous?.getAllQueryCallbacks(t, r) ?? []; const i = []; const o = this.extension.query; return !o || !(o[t] || o.$allModels || o[r] || o.$allOperations) ? n : (o[t] !== void 0 && (o[t][r] !== void 0 && i.push(o[t][r]), o[t].$allOperations !== void 0 && i.push(o[t].$allOperations)), t !== '$none' && o.$allModels !== void 0 && (o.$allModels[r] !== void 0 && i.push(o.$allModels[r]), o.$allModels.$allOperations !== void 0 && i.push(o.$allModels.$allOperations)), o[r] !== void 0 && i.push(o[r]), o.$allOperations !== void 0 && i.push(o.$allOperations), n.concat(i)) }) }getAllBatchQueryCallbacks() { return this.batchCallbacks.get() }}; const pt = class e {constructor(t) { this.head = t } static empty() { return new e() } static single(t) { return new e(new Lr(t)) }isEmpty() { return this.head === void 0 }append(t) { return new e(new Lr(t, this.head)) }getAllComputedFields(t) { return this.head?.getAllComputedFields(t) }getAllClientExtensions() { return this.head?.getAllClientExtensions() }getAllModelExtensions(t) { return this.head?.getAllModelExtensions(t) }getAllQueryCallbacks(t, r) { return this.head?.getAllQueryCallbacks(t, r) ?? [] }getAllBatchQueryCallbacks() { return this.head?.getAllBatchQueryCallbacks() ?? [] }}; d(); u(); c(); p(); m(); const Ur = class {constructor(t) { this.name = t }}; function Go(e) { return e instanceof Ur } function lc(e) { return new Ur(e) }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Qo = Symbol(); const Lt = class {
  constructor(t) {
    if (t !== Qo)
      throw new Error('Skip instance can not be constructed directly')
  }

  ifUndefined(t) { return t === void 0 ? _n : t }
}; var _n = new Lt(Qo); function be(e) { return e instanceof Lt } const uc = { findUnique: 'findUnique', findUniqueOrThrow: 'findUniqueOrThrow', findFirst: 'findFirst', findFirstOrThrow: 'findFirstOrThrow', findMany: 'findMany', count: 'aggregate', create: 'createOne', createMany: 'createMany', createManyAndReturn: 'createManyAndReturn', update: 'updateOne', updateMany: 'updateMany', updateManyAndReturn: 'updateManyAndReturn', upsert: 'upsertOne', delete: 'deleteOne', deleteMany: 'deleteMany', executeRaw: 'executeRaw', queryRaw: 'queryRaw', aggregate: 'aggregate', groupBy: 'groupBy', runCommandRaw: 'runCommandRaw', findRaw: 'findRaw', aggregateRaw: 'aggregateRaw' }; const Jo = 'explicitly `undefined` values are not allowed'; function Fn({ modelName: e, action: t, args: r, runtimeDataModel: n, extensions: i = pt.empty(), callsite: o, clientMethod: s, errorFormat: a, clientVersion: l, previewFeatures: f, globalOmit: g }) { const h = new Nn({ runtimeDataModel: n, modelName: e, action: t, rootArgs: r, callsite: o, extensions: i, selectionPath: [], argumentPath: [], originalMethod: s, errorFormat: a, clientVersion: l, previewFeatures: f, globalOmit: g }); return { modelName: e, action: uc[t], query: Ut(r, h) } } function Ut({ select: e, include: t, ...r } = {}, n) { const i = r.omit; return delete r.omit, { arguments: Ko(r, n), selection: cc(e, t, i, n) } } function cc(e, t, r, n) { return e ? (t ? n.throwValidationError({ kind: 'MutuallyExclusiveFields', firstField: 'include', secondField: 'select', selectionPath: n.getSelectionPath() }) : r && n.throwValidationError({ kind: 'MutuallyExclusiveFields', firstField: 'omit', secondField: 'select', selectionPath: n.getSelectionPath() }), fc(e, n)) : pc(n, t, r) } function pc(e, t, r) { const n = {}; return e.modelOrType && !e.isRawAction() && (n.$composites = !0, n.$scalars = !0), t && mc(n, t, e), dc(n, r, e), n } function mc(e, t, r) {
  for (const [n, i] of Object.entries(t)) {
    if (be(i))
      continue; const o = r.nestSelection(n); if (Ln(i, o), i === !1 || i === void 0) { e[n] = !1; continue } const s = r.findField(n); if (s && s.kind !== 'object' && r.throwValidationError({ kind: 'IncludeOnScalar', selectionPath: r.getSelectionPath().concat(n), outputType: r.getOutputTypeDescription() }), s) { e[n] = Ut(i === !0 ? {} : i, o); continue } if (i === !0) { e[n] = !0; continue }e[n] = Ut(i, o)
  }
} function dc(e, t, r) {
  const n = r.getComputedFields(); const i = { ...r.getGlobalOmit(), ...t }; const o = jo(i, n); for (const [s, a] of Object.entries(o)) {
    if (be(a))
      continue; Ln(a, r.nestSelection(s)); const l = r.findField(s); n?.[s] && !l || (e[s] = !a)
  }
} function fc(e, t) {
  const r = {}; const n = t.getComputedFields(); const i = Vo(e, n); for (const [o, s] of Object.entries(i)) {
    if (be(s))
      continue; const a = t.nestSelection(o); Ln(s, a); const l = t.findField(o); if (!(n?.[o] && !l)) { if (s === !1 || s === void 0 || be(s)) { r[o] = !1; continue } if (s === !0) { l?.kind === 'object' ? r[o] = Ut({}, a) : r[o] = !0; continue }r[o] = Ut(s, a) }
  } return r
} function Wo(e, t) {
  if (e === null)
    return null; if (typeof e == 'string' || typeof e == 'number' || typeof e == 'boolean')
    return e; if (typeof e == 'bigint')
    return { $type: 'BigInt', value: String(e) }; if (rt(e)) {
    if (Ar(e))
      return { $type: 'DateTime', value: e.toISOString() }; t.throwValidationError({ kind: 'InvalidArgumentValue', selectionPath: t.getSelectionPath(), argumentPath: t.getArgumentPath(), argument: { name: t.getArgumentName(), typeNames: ['Date'] }, underlyingError: 'Provided Date object is invalid' })
  } if (Go(e))
    return { $type: 'Param', value: e.name }; if (ut(e))
    return { $type: 'FieldRef', value: { _ref: e.name, _container: e.modelName } }; if (Array.isArray(e))
    return gc(e, t); if (ArrayBuffer.isView(e)) { const { buffer: r, byteOffset: n, byteLength: i } = e; return { $type: 'Bytes', value: w.Buffer.from(r, n, i).toString('base64') } } if (hc(e))
    return e.values; if (nt(e))
    return { $type: 'Decimal', value: e.toFixed() }; if (e instanceof Ae) {
    if (e !== On.instances[e._getName()])
      throw new Error('Invalid ObjectEnumValue'); return { $type: 'Enum', value: e._getName() }
  } if (yc(e))
    return e.toJSON(); if (typeof e == 'object')
    return Ko(e, t); t.throwValidationError({ kind: 'InvalidArgumentValue', selectionPath: t.getSelectionPath(), argumentPath: t.getArgumentPath(), argument: { name: t.getArgumentName(), typeNames: [] }, underlyingError: `We could not serialize ${Object.prototype.toString.call(e)} value. Serialize the object to JSON or implement a ".toJSON()" method on it` })
} function Ko(e, t) {
  if (e.$type)
    return { $type: 'Raw', value: e }; const r = {}; for (const n in e) { const i = e[n]; const o = t.nestArgument(n); be(i) || (i !== void 0 ? r[n] = Wo(i, o) : t.isPreviewFeatureOn('strictUndefinedChecks') && t.throwValidationError({ kind: 'InvalidArgumentValue', argumentPath: o.getArgumentPath(), selectionPath: t.getSelectionPath(), argument: { name: t.getArgumentName(), typeNames: [] }, underlyingError: Jo })) } return r
} function gc(e, t) { const r = []; for (let n = 0; n < e.length; n++) { const i = t.nestArgument(String(n)); const o = e[n]; if (o === void 0 || be(o)) { const s = o === void 0 ? 'undefined' : 'Prisma.skip'; t.throwValidationError({ kind: 'InvalidArgumentValue', selectionPath: i.getSelectionPath(), argumentPath: i.getArgumentPath(), argument: { name: `${t.getArgumentName()}[${n}]`, typeNames: [] }, underlyingError: `Can not use \`${s}\` value within array. Use \`null\` or filter out \`${s}\` values` }) }r.push(Wo(o, i)) } return r } function hc(e) { return typeof e == 'object' && e !== null && e.__prismaRawParameters__ === !0 } function yc(e) { return typeof e == 'object' && e !== null && typeof e.toJSON == 'function' } function Ln(e, t) { e === void 0 && t.isPreviewFeatureOn('strictUndefinedChecks') && t.throwValidationError({ kind: 'InvalidSelectionValue', selectionPath: t.getSelectionPath(), underlyingError: Jo }) } var Nn = class e {
  constructor(t) { this.params = t; this.params.modelName && (this.modelOrType = this.params.runtimeDataModel.models[this.params.modelName] ?? this.params.runtimeDataModel.types[this.params.modelName]) }modelOrType; throwValidationError(t) { Fr({ errors: [t], originalMethod: this.params.originalMethod, args: this.params.rootArgs ?? {}, callsite: this.params.callsite, errorFormat: this.params.errorFormat, clientVersion: this.params.clientVersion, globalOmit: this.params.globalOmit }) }getSelectionPath() { return this.params.selectionPath }getArgumentPath() { return this.params.argumentPath }getArgumentName() { return this.params.argumentPath[this.params.argumentPath.length - 1] }getOutputTypeDescription() {
    if (!(!this.params.modelName || !this.modelOrType))
      return { name: this.params.modelName, fields: this.modelOrType.fields.map(t => ({ name: t.name, typeName: 'boolean', isRelation: t.kind === 'object' })) }
  }

  isRawAction() { return ['executeRaw', 'queryRaw', 'runCommandRaw', 'findRaw', 'aggregateRaw'].includes(this.params.action) }isPreviewFeatureOn(t) { return this.params.previewFeatures.includes(t) }getComputedFields() {
    if (this.params.modelName)
      return this.params.extensions.getAllComputedFields(this.params.modelName)
  }

  findField(t) { return this.modelOrType?.fields.find(r => r.name === t) }nestSelection(t) { const r = this.findField(t); const n = r?.kind === 'object' ? r.type : void 0; return new e({ ...this.params, modelName: n, selectionPath: this.params.selectionPath.concat(t) }) }getGlobalOmit() { return this.params.modelName && this.shouldApplyGlobalOmit() ? this.params.globalOmit?.[_e(this.params.modelName)] ?? {} : {} }shouldApplyGlobalOmit() { switch (this.params.action) { case 'findFirst':case 'findFirstOrThrow':case 'findUniqueOrThrow':case 'findMany':case 'upsert':case 'findUnique':case 'createManyAndReturn':case 'create':case 'update':case 'updateManyAndReturn':case 'delete':return !0; case 'executeRaw':case 'aggregateRaw':case 'runCommandRaw':case 'findRaw':case 'createMany':case 'deleteMany':case 'groupBy':case 'updateMany':case 'count':case 'aggregate':case 'queryRaw':return !1; default:Pe(this.params.action, 'Unknown action') } }nestArgument(t) { return new e({ ...this.params, argumentPath: this.params.argumentPath.concat(t) }) }
}; d(); u(); c(); p(); m(); function Ho(e) {
  if (!e._hasPreviewFlag('metrics'))
    throw new ee('`metrics` preview feature must be enabled in order to access metrics API', { clientVersion: e._clientVersion })
} const Bt = class {_client; constructor(t) { this._client = t }prometheus(t) { return Ho(this._client), this._client._engine.metrics({ format: 'prometheus', ...t }) }json(t) { return Ho(this._client), this._client._engine.metrics({ format: 'json', ...t }) }}; d(); u(); c(); p(); m(); function wc(e, t) { const r = St(() => Ec(t)); Object.defineProperty(e, 'dmmf', { get: () => r.get() }) } function Ec(e) { return { datamodel: { models: Un(e.models), enums: Un(e.enums), types: Un(e.types) } } } function Un(e) { return Object.entries(e).map(([t, r]) => ({ name: t, ...r })) }d(); u(); c(); p(); m(); const Bn = new WeakMap(); const Br = '$$PrismaTypedSql'; const qt = class {constructor(t, r) { Bn.set(this, { sql: t, values: r }), Object.defineProperty(this, Br, { value: Br }) } get sql() { return Bn.get(this).sql } get values() { return Bn.get(this).values }}; function bc(e) { return (...t) => new qt(e, t) } function qr(e) { return e != null && e[Br] === Br }d(); u(); c(); p(); m(); const ma = Ue(yn()); d(); u(); c(); p(); m(); zo(); Gi(); Ki(); d(); u(); c(); p(); m(); const ue = class e {
  constructor(t, r) {
    if (t.length - 1 !== r.length)
      throw t.length === 0 ? new TypeError('Expected at least 1 string') : new TypeError(`Expected ${t.length} strings to have ${t.length - 1} values`); const n = r.reduce((s, a) => s + (a instanceof e ? a.values.length : 1), 0); this.values = new Array(n), this.strings = new Array(n + 1), this.strings[0] = t[0]; let i = 0; let o = 0; for (;i < r.length;) {
      const s = r[i++]; const a = t[i]; if (s instanceof e) { this.strings[o] += s.strings[0]; let l = 0; for (;l < s.values.length;) this.values[o++] = s.values[l++], this.strings[o] = s.strings[l]; this.strings[o] += a }
      else {
        this.values[o++] = s, this.strings[o] = a
      }
    }
  }

  get sql() { const t = this.strings.length; let r = 1; let n = this.strings[0]; for (;r < t;)n += `?${this.strings[r++]}`; return n } get statement() { const t = this.strings.length; let r = 1; let n = this.strings[0]; for (;r < t;)n += `:${r}${this.strings[r++]}`; return n } get text() { const t = this.strings.length; let r = 1; let n = this.strings[0]; for (;r < t;)n += `$${r}${this.strings[r++]}`; return n }inspect() { return { sql: this.sql, statement: this.statement, text: this.text, values: this.values } }
}; function xc(e, t = ',', r = '', n = '') {
  if (e.length === 0)
    throw new TypeError('Expected `join([])` to be called with an array of multiple elements, but got an empty array'); return new ue([r, ...Array.from({ length: e.length - 1 }).fill(t), n], e)
} function Yo(e) { return new ue([e], []) } const Pc = Yo(''); function Zo(e, ...t) { return new ue(e, t) }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); function $t(e) { return { getKeys() { return Object.keys(e) }, getPropertyValue(t) { return e[t] } } }d(); u(); c(); p(); m(); function te(e, t) { return { getKeys() { return [e] }, getPropertyValue() { return t() } } }d(); u(); c(); p(); m(); function $e(e) { const t = new ye(); return { getKeys() { return e.getKeys() }, getPropertyValue(r) { return t.getOrCreate(r, () => e.getPropertyValue(r)) }, getPropertyDescriptor(r) { return e.getPropertyDescriptor?.(r) } } }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Vr = { enumerable: !0, configurable: !0, writable: !0 }; function jr(e) { const t = new Set(e); return { getPrototypeOf: () => Object.prototype, getOwnPropertyDescriptor: () => Vr, has: (r, n) => t.has(n), set: (r, n, i) => t.add(n) && Reflect.set(r, n, i), ownKeys: () => [...t] } } const Xo = Symbol.for('nodejs.util.inspect.custom'); function me(e, t) {
  const r = vc(t); const n = new Set(); const i = new Proxy(e, { get(o, s) {
    if (n.has(s))
      return o[s]; const a = r.get(s); return a ? a.getPropertyValue(s) : o[s]
  }, has(o, s) {
    if (n.has(s))
      return !0; const a = r.get(s); return a ? a.has?.(s) ?? !0 : Reflect.has(o, s)
  }, ownKeys(o) { const s = es(Reflect.ownKeys(o), r); const a = es(Array.from(r.keys()), r); return [...new Set([...s, ...a, ...n])] }, set(o, s, a) { return r.get(s)?.getPropertyDescriptor?.(s)?.writable === !1 ? !1 : (n.add(s), Reflect.set(o, s, a)) }, getOwnPropertyDescriptor(o, s) {
    const a = Reflect.getOwnPropertyDescriptor(o, s); if (a && !a.configurable)
      return a; const l = r.get(s); return l ? l.getPropertyDescriptor ? { ...Vr, ...l?.getPropertyDescriptor(s) } : Vr : a
  }, defineProperty(o, s, a) { return n.add(s), Reflect.defineProperty(o, s, a) }, getPrototypeOf: () => Object.prototype }); return i[Xo] = function () { const o = { ...this }; return delete o[Xo], o }, i
} function vc(e) { const t = new Map(); for (const r of e) { const n = r.getKeys(); for (const i of n)t.set(i, r) } return t } function es(e, t) { return e.filter(r => t.get(r)?.has?.(r) ?? !0) }d(); u(); c(); p(); m(); function mt(e) { return { getKeys() { return e }, has() { return !1 }, getPropertyValue() {} } }d(); u(); c(); p(); m(); function Gr(e, t) { return { batch: e, transaction: t?.kind === 'batch' ? { isolationLevel: t.options.isolationLevel } : void 0 } }d(); u(); c(); p(); m(); function ts(e) {
  if (e === void 0)
    return ''; const t = ct(e); return new it(0, { colors: Or }).write(t).toString()
}d(); u(); c(); p(); m(); const Tc = 'P2037'; function Qr({ error: e, user_facing_error: t }, r, n) { return t.error_code ? new se(Ac(t, n), { code: t.error_code, clientVersion: r, meta: t.meta, batchRequestIdx: t.batch_request_idx }) : new ae(e, { clientVersion: r, batchRequestIdx: t.batch_request_idx }) } function Ac(e, t) {
  let r = e.message; return (t === 'postgresql' || t === 'postgres' || t === 'mysql') && e.error_code === Tc && (r += `
Prisma Accelerate has built-in connection pooling to prevent such errors: https://pris.ly/client/error-accelerate`), r
}d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const qn = class {getLocation() { return null }}; function Fe(e) { return typeof $EnabledCallSite == 'function' && e !== 'minimal' ? new $EnabledCallSite() : new qn() }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const rs = { _avg: !0, _count: !0, _sum: !0, _min: !0, _max: !0 }; function dt(e = {}) { const t = Rc(e); return Object.entries(t).reduce((n, [i, o]) => (rs[i] !== void 0 ? n.select[i] = { select: o } : n[i] = o, n), { select: {} }) } function Rc(e = {}) { return typeof e._count == 'boolean' ? { ...e, _count: { _all: e._count } } : e } function Jr(e = {}) { return t => (typeof e._count == 'boolean' && (t._count = t._count._all), t) } function ns(e, t) { const r = Jr(e); return t({ action: 'aggregate', unpacker: r, argsMapper: dt })(e) }d(); u(); c(); p(); m(); function Sc(e = {}) { const { select: t, ...r } = e; return typeof t == 'object' ? dt({ ...r, _count: t }) : dt({ ...r, _count: { _all: !0 } }) } function kc(e = {}) { return typeof e.select == 'object' ? t => Jr(e)(t)._count : t => Jr(e)(t)._count._all } function is(e, t) { return t({ action: 'count', unpacker: kc(e), argsMapper: Sc })(e) }d(); u(); c(); p(); m(); function Ic(e = {}) {
  const t = dt(e); if (Array.isArray(t.by)) {
    for (const r of t.by) typeof r == 'string' && (t.select[r] = !0)
  }
  else {
    typeof t.by == 'string' && (t.select[t.by] = !0)
  } return t
} function Oc(e = {}) { return t => (typeof e?._count == 'boolean' && t.forEach((r) => { r._count = r._count._all }), t) } function os(e, t) { return t({ action: 'groupBy', unpacker: Oc(e), argsMapper: Ic })(e) } function ss(e, t, r) {
  if (t === 'aggregate')
    return n => ns(n, r); if (t === 'count')
    return n => is(n, r); if (t === 'groupBy')
    return n => os(n, r)
}d(); u(); c(); p(); m(); function as(e, t) {
  const r = t.fields.filter(i => !i.relationName); const n = Po(r, 'name'); return new Proxy({}, { get(i, o) {
    if (o in i || typeof o == 'symbol')
      return i[o]; const s = n[o]; if (s)
      return new Dt(e, o, s.type, s.isList, s.kind === 'enum')
  }, ...jr(Object.keys(n)) })
}d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const ls = e => Array.isArray(e) ? e : e.split('.'); const $n = (e, t) => ls(t).reduce((r, n) => r && r[n], e); const us = (e, t, r) => ls(t).reduceRight((n, i, o, s) => Object.assign({}, $n(e, s.slice(0, o)), { [i]: n }), r); function Dc(e, t) { return e === void 0 || t === void 0 ? [] : [...t, 'select', e] } function Mc(e, t, r) { return t === void 0 ? e ?? {} : us(t, r, e || !0) } function Vn(e, t, r, n, i, o) {
  const a = e._runtimeDataModel.models[t].fields.reduce((l, f) => ({ ...l, [f.name]: f }), {}); return (l) => {
    const f = Fe(e._errorFormat); const g = Dc(n, i); const h = Mc(l, o, g); const T = r({ dataPath: g, callsite: f })(h); const k = _c(e, t); return new Proxy(T, { get(C, S) {
      if (!k.includes(S))
        return C[S]; const _ = [a[S].type, r, S]; const B = [g, h]; return Vn(e, ..._, ...B)
    }, ...jr([...k, ...Object.getOwnPropertyNames(T)]) })
  }
} function _c(e, t) { return e._runtimeDataModel.models[t].fields.filter(r => r.kind === 'object').map(r => r.name) } const Nc = ['findUnique', 'findUniqueOrThrow', 'findFirst', 'findFirstOrThrow', 'create', 'update', 'upsert', 'delete']; const Fc = ['aggregate', 'count', 'groupBy']; function jn(e, t) { const r = e._extensions.getAllModelExtensions(t) ?? {}; const n = [Lc(e, t), Bc(e, t), $t(r), te('name', () => t), te('$name', () => t), te('$parent', () => e._appliedParent)]; return me({}, n) } function Lc(e, t) { const r = Ee(t); const n = Object.keys(kt).concat('count'); return { getKeys() { return n }, getPropertyValue(i) { const o = i; const s = a => (l) => { const f = Fe(e._errorFormat); return e._createPrismaPromise((g) => { const h = { args: l, dataPath: [], action: o, model: t, clientMethod: `${r}.${i}`, jsModelName: r, transaction: g, callsite: f }; return e._request({ ...h, ...a }) }, { action: o, args: l, model: t }) }; return Nc.includes(o) ? Vn(e, t, s) : Uc(i) ? ss(e, i, s) : s({}) } } } function Uc(e) { return Fc.includes(e) } function Bc(e, t) { return $e(te('fields', () => { const r = e._runtimeDataModel.models[t]; return as(t, r) })) }d(); u(); c(); p(); m(); function cs(e) { return e.replace(/^./, t => t.toUpperCase()) } const Gn = Symbol(); function Vt(e) { const t = [qc(e), $c(e), te(Gn, () => e), te('$parent', () => e._appliedParent)]; const r = e._extensions.getAllClientExtensions(); return r && t.push($t(r)), me(e, t) } function qc(e) { const t = Object.getPrototypeOf(e._originalClient); const r = [...new Set(Object.getOwnPropertyNames(t))]; return { getKeys() { return r }, getPropertyValue(n) { return e[n] } } } function $c(e) {
  const t = Object.keys(e._runtimeDataModel.models); const r = t.map(Ee); const n = [...new Set(t.concat(r))]; return $e({ getKeys() { return n }, getPropertyValue(i) {
    const o = cs(i); if (e._runtimeDataModel.models[o] !== void 0)
      return jn(e, o); if (e._runtimeDataModel.models[i] !== void 0)
      return jn(e, i)
  }, getPropertyDescriptor(i) {
    if (!r.includes(i))
      return { enumerable: !1 }
  } })
} function ps(e) { return e[Gn] ? e[Gn] : e } function ms(e) {
  if (typeof e == 'function')
    return e(this); if (e.client?.__AccelerateEngine) { const r = e.client.__AccelerateEngine; this._originalClient._engine = new r(this._originalClient._accelerateEngineConfig) } const t = Object.create(this._originalClient, { _extensions: { value: this._extensions.append(e) }, _appliedParent: { value: this, configurable: !0 }, $use: { value: void 0 }, $on: { value: void 0 } }); return Vt(t)
}d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); function ds({ result: e, modelName: t, select: r, omit: n, extensions: i }) {
  const o = i.getAllComputedFields(t); if (!o)
    return e; const s = []; const a = []; for (const l of Object.values(o)) {
    if (n) {
      if (n[l.name])
        continue; const f = l.needs.filter(g => n[g]); f.length > 0 && a.push(mt(f))
    }
    else if (r) {
      if (!r[l.name])
        continue; const f = l.needs.filter(g => !r[g]); f.length > 0 && a.push(mt(f))
    }Vc(e, l.needs) && s.push(jc(l, me(e, s)))
  } return s.length > 0 || a.length > 0 ? me(e, [...s, ...a]) : e
} function Vc(e, t) { return t.every(r => bn(e, r)) } function jc(e, t) { return $e(te(e.name, () => e.compute(t))) }d(); u(); c(); p(); m(); function Wr({ visitor: e, result: t, args: r, runtimeDataModel: n, modelName: i }) { if (Array.isArray(t)) { for (let s = 0; s < t.length; s++)t[s] = Wr({ result: t[s], args: r, modelName: i, runtimeDataModel: n, visitor: e }); return t } const o = e(t, i, r) ?? t; return r.include && fs({ includeOrSelect: r.include, result: o, parentModelName: i, runtimeDataModel: n, visitor: e }), r.select && fs({ includeOrSelect: r.select, result: o, parentModelName: i, runtimeDataModel: n, visitor: e }), o } function fs({ includeOrSelect: e, result: t, parentModelName: r, runtimeDataModel: n, visitor: i }) {
  for (const [o, s] of Object.entries(e)) {
    if (!s || t[o] == null || be(s))
      continue; const l = n.models[r].fields.find(g => g.name === o); if (!l || l.kind !== 'object' || !l.relationName)
      continue; const f = typeof s == 'object' ? s : {}; t[o] = Wr({ visitor: i, result: t[o], args: f, modelName: l.type, runtimeDataModel: n })
  }
} function gs({ result: e, modelName: t, args: r, extensions: n, runtimeDataModel: i, globalOmit: o }) { return n.isEmpty() || e == null || typeof e != 'object' || !i.models[t] ? e : Wr({ result: e, args: r ?? {}, modelName: t, runtimeDataModel: i, visitor: (a, l, f) => { const g = Ee(l); return ds({ result: a, modelName: g, select: f.select, omit: f.select ? void 0 : { ...o?.[g], ...f.omit }, extensions: n }) } }) }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Gc = ['$connect', '$disconnect', '$on', '$transaction', '$use', '$extends']; const hs = Gc; function ys(e) {
  if (e instanceof ue)
    return Qc(e); if (qr(e))
    return Jc(e); if (Array.isArray(e)) { const r = [e[0]]; for (let n = 1; n < e.length; n++)r[n] = jt(e[n]); return r } const t = {}; for (const r in e)t[r] = jt(e[r]); return t
} function Qc(e) { return new ue(e.strings, e.values) } function Jc(e) { return new qt(e.sql, e.values) } function jt(e) {
  if (typeof e != 'object' || e == null || e instanceof Ae || ut(e))
    return e; if (nt(e))
    return new Te(e.toFixed()); if (rt(e))
    return new Date(+e); if (ArrayBuffer.isView(e))
    return e.slice(0); if (Array.isArray(e)) { let t = e.length; let r; for (r = new Array(t); t--;)r[t] = jt(e[t]); return r } if (typeof e == 'object') { const t = {}; for (const r in e)r === '__proto__' ? Object.defineProperty(t, r, { value: jt(e[r]), configurable: !0, enumerable: !0, writable: !0 }) : t[r] = jt(e[r]); return t }Pe(e, 'Unknown value')
} function Es(e, t, r, n = 0) { return e._createPrismaPromise((i) => { const o = t.customDataProxyFetch; return 'transaction' in t && i !== void 0 && (t.transaction?.kind === 'batch' && t.transaction.lock.then(), t.transaction = i), n === r.length ? e._executeRequest(t) : r[n]({ model: t.model, operation: t.model ? t.action : t.clientMethod, args: ys(t.args ?? {}), __internalParams: t, query: (s, a = t) => { const l = a.customDataProxyFetch; return a.customDataProxyFetch = vs(o, l), a.args = s, Es(e, a, r, n + 1) } }) }) } function bs(e, t) {
  const { jsModelName: r, action: n, clientMethod: i } = t; const o = r ? n : i; if (e._extensions.isEmpty())
    return e._executeRequest(t); const s = e._extensions.getAllQueryCallbacks(r ?? '$none', o); return Es(e, t, s)
} function xs(e) { return (t) => { const r = { requests: t }; const n = t[0].extensions.getAllBatchQueryCallbacks(); return n.length ? Ps(r, n, 0, e) : e(r) } } function Ps(e, t, r, n) {
  if (r === t.length)
    return n(e); const i = e.customDataProxyFetch; const o = e.requests[0].transaction; return t[r]({ args: { queries: e.requests.map(s => ({ model: s.modelName, operation: s.action, args: s.args })), transaction: o ? { isolationLevel: o.kind === 'batch' ? o.isolationLevel : void 0 } : void 0 }, __internalParams: e, query(s, a = e) { const l = a.customDataProxyFetch; return a.customDataProxyFetch = vs(i, l), Ps(a, t, r + 1, n) } })
} const ws = e => e; function vs(e = ws, t = ws) { return r => e(t(r)) }d(); u(); c(); p(); m(); const Ts = Z('prisma:client'); const As = { 'Vercel': 'vercel', 'Netlify CI': 'netlify' }; function Cs({ postinstall: e, ciName: t, clientVersion: r }) {
  if (Ts('checkPlatformCaching:postinstall', e), Ts('checkPlatformCaching:ciName', t), e === !0 && t && t in As) {
    const n = `Prisma has detected that this project was built on ${t}, which caches dependencies. This leads to an outdated Prisma Client because Prisma's auto-generation isn't triggered. To fix this, make sure to run the \`prisma generate\` command during the build process.

Learn how: https://pris.ly/d/${As[t]}-build`; throw console.error(n), new J(n, r)
  }
}d(); u(); c(); p(); m(); function Rs(e, t) { return e ? e.datasources ? e.datasources : e.datasourceUrl ? { [t[0]]: { url: e.datasourceUrl } } : {} : {} }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Wc = () => globalThis.process?.release?.name === 'node'; const Kc = () => !!globalThis.Bun || !!globalThis.process?.versions?.bun; const Hc = () => !!globalThis.Deno; const zc = () => typeof globalThis.Netlify == 'object'; const Yc = () => typeof globalThis.EdgeRuntime == 'object'; const Zc = () => globalThis.navigator?.userAgent === 'Cloudflare-Workers'; function Xc() { return [[zc, 'netlify'], [Yc, 'edge-light'], [Zc, 'workerd'], [Hc, 'deno'], [Kc, 'bun'], [Wc, 'node']].flatMap(r => r[0]() ? [r[1]] : []).at(0) ?? '' } const ep = { 'node': 'Node.js', 'workerd': 'Cloudflare Workers', 'deno': 'Deno and Deno Deploy', 'netlify': 'Netlify Edge Functions', 'edge-light': 'Edge Runtime (Vercel Edge Functions, Vercel Edge Middleware, Next.js (Pages Router) Edge API Routes, Next.js (App Router) Edge Route Handlers or Next.js Middleware)' }; function Qn() { const e = Xc(); return { id: e, prettyName: ep[e] || e, isEdge: ['workerd', 'deno', 'netlify', 'edge-light'].includes(e) } }d(); u(); c(); p(); m(); const Ss = '6.13.0'; d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); function ft({ inlineDatasources: e, overrideDatasources: t, env: r, clientVersion: n }) {
  let i; const o = Object.keys(e)[0]; const s = e[o]?.url; const a = t[o]?.url; if (o === void 0 ? i = void 0 : a ? i = a : s?.value ? i = s.value : s?.fromEnvVar && (i = r[s.fromEnvVar]), s?.fromEnvVar !== void 0 && i === void 0) {
    throw Qn().id === 'workerd'
      ? new J(`error: Environment variable not found: ${s.fromEnvVar}.

In Cloudflare module Workers, environment variables are available only in the Worker's \`env\` parameter of \`fetch\`.
To solve this, provide the connection string directly: https://pris.ly/d/cloudflare-datasource-url`, n)
      : new J(`error: Environment variable not found: ${s.fromEnvVar}.`, n)
  } if (i === void 0)
    throw new J('error: Missing URL environment variable, value, or override.', n); return i
}d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Kr = class extends Error {clientVersion; cause; constructor(t, r) { super(t), this.clientVersion = r.clientVersion, this.cause = r.cause } get [Symbol.toStringTag]() { return this.name }}; const ie = class extends Kr {isRetryable; constructor(t, r) { super(t, r), this.isRetryable = r.isRetryable ?? !0 }}; d(); u(); c(); p(); m(); function U(e, t) { return { ...e, isRetryable: t } } const Ve = class extends ie {name = 'InvalidDatasourceError'; code = 'P6001'; constructor(t, r) { super(t, U(r, !1)) }}; F(Ve, 'InvalidDatasourceError'); function ks(e) {
  const t = { clientVersion: e.clientVersion }; const r = Object.keys(e.inlineDatasources)[0]; const n = ft({ inlineDatasources: e.inlineDatasources, overrideDatasources: e.overrideDatasources, clientVersion: e.clientVersion, env: { ...e.env, ...typeof y < 'u' ? y.env : {} } }); let i; try { i = new URL(n) }
  catch { throw new Ve(`Error validating datasource \`${r}\`: the URL must start with the protocol \`prisma://\``, t) } const { protocol: o, searchParams: s } = i; if (o !== 'prisma:' && o !== fr)
    throw new Ve(`Error validating datasource \`${r}\`: the URL must start with the protocol \`prisma://\` or \`prisma+postgres://\``, t); const a = s.get('api_key'); if (a === null || a.length < 1)
    throw new Ve(`Error validating datasource \`${r}\`: the URL must contain a valid API key`, t); const l = wn(i) ? 'http:' : 'https:'; const f = new URL(i.href.replace(o, l)); return { apiKey: a, url: f }
}d(); u(); c(); p(); m(); const Is = Ue(zi()); const Hr = class {apiKey; tracingHelper; logLevel; logQueries; engineHash; constructor({ apiKey: t, tracingHelper: r, logLevel: n, logQueries: i, engineHash: o }) { this.apiKey = t, this.tracingHelper = r, this.logLevel = n, this.logQueries = i, this.engineHash = o }build({ traceparent: t, transactionId: r } = {}) { const n = { 'Accept': 'application/json', 'Authorization': `Bearer ${this.apiKey}`, 'Content-Type': 'application/json', 'Prisma-Engine-Hash': this.engineHash, 'Prisma-Engine-Version': Is.enginesVersion }; this.tracingHelper.isEnabled() && (n.traceparent = t ?? this.tracingHelper.getTraceParent()), r && (n['X-Transaction-Id'] = r); const i = this.#e(); return i.length > 0 && (n['X-Capture-Telemetry'] = i.join(', ')), n }#e() { const t = []; return this.tracingHelper.isEnabled() && t.push('tracing'), this.logLevel && t.push(this.logLevel), this.logQueries && t.push('query'), t }}; d(); u(); c(); p(); m(); function rp(e) { return e[0] * 1e3 + e[1] / 1e6 } function Jn(e) { return new Date(rp(e)) }d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const gt = class extends ie {name = 'ForcedRetryError'; code = 'P5001'; constructor(t) { super('This request must be retried', U(t, !0)) }}; F(gt, 'ForcedRetryError'); d(); u(); c(); p(); m(); const je = class extends ie {name = 'NotImplementedYetError'; code = 'P5004'; constructor(t, r) { super(t, U(r, !1)) }}; F(je, 'NotImplementedYetError'); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const G = class extends ie {response; constructor(t, r) { super(t, r), this.response = r.response; const n = this.response.headers.get('prisma-request-id'); if (n) { const i = `(The request id was: ${n})`; this.message = `${this.message} ${i}` } }}; const Ge = class extends G {name = 'SchemaMissingError'; code = 'P5005'; constructor(t) { super('Schema needs to be uploaded', U(t, !0)) }}; F(Ge, 'SchemaMissingError'); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const Wn = 'This request could not be understood by the server'; const Gt = class extends G {name = 'BadRequestError'; code = 'P5000'; constructor(t, r, n) { super(r || Wn, U(t, !1)), n && (this.code = n) }}; F(Gt, 'BadRequestError'); d(); u(); c(); p(); m(); const Qt = class extends G {name = 'HealthcheckTimeoutError'; code = 'P5013'; logs; constructor(t, r) { super('Engine not started: healthcheck timeout', U(t, !0)), this.logs = r }}; F(Qt, 'HealthcheckTimeoutError'); d(); u(); c(); p(); m(); const Jt = class extends G {name = 'EngineStartupError'; code = 'P5014'; logs; constructor(t, r, n) { super(r, U(t, !0)), this.logs = n }}; F(Jt, 'EngineStartupError'); d(); u(); c(); p(); m(); const Wt = class extends G {name = 'EngineVersionNotSupportedError'; code = 'P5012'; constructor(t) { super('Engine version is not supported', U(t, !1)) }}; F(Wt, 'EngineVersionNotSupportedError'); d(); u(); c(); p(); m(); const Kn = 'Request timed out'; const Kt = class extends G {name = 'GatewayTimeoutError'; code = 'P5009'; constructor(t, r = Kn) { super(r, U(t, !1)) }}; F(Kt, 'GatewayTimeoutError'); d(); u(); c(); p(); m(); const np = 'Interactive transaction error'; const Ht = class extends G {name = 'InteractiveTransactionError'; code = 'P5015'; constructor(t, r = np) { super(r, U(t, !1)) }}; F(Ht, 'InteractiveTransactionError'); d(); u(); c(); p(); m(); const ip = 'Request parameters are invalid'; const zt = class extends G {name = 'InvalidRequestError'; code = 'P5011'; constructor(t, r = ip) { super(r, U(t, !1)) }}; F(zt, 'InvalidRequestError'); d(); u(); c(); p(); m(); const Hn = 'Requested resource does not exist'; const Yt = class extends G {name = 'NotFoundError'; code = 'P5003'; constructor(t, r = Hn) { super(r, U(t, !1)) }}; F(Yt, 'NotFoundError'); d(); u(); c(); p(); m(); const zn = 'Unknown server error'; const ht = class extends G {name = 'ServerError'; code = 'P5006'; logs; constructor(t, r, n) { super(r || zn, U(t, !0)), this.logs = n }}; F(ht, 'ServerError'); d(); u(); c(); p(); m(); const Yn = 'Unauthorized, check your connection string'; const Zt = class extends G {name = 'UnauthorizedError'; code = 'P5007'; constructor(t, r = Yn) { super(r, U(t, !1)) }}; F(Zt, 'UnauthorizedError'); d(); u(); c(); p(); m(); const Zn = 'Usage exceeded, retry again later'; const Xt = class extends G {name = 'UsageExceededError'; code = 'P5008'; constructor(t, r = Zn) { super(r, U(t, !0)) }}; F(Xt, 'UsageExceededError'); async function op(e) {
  let t; try { t = await e.text() }
  catch { return { type: 'EmptyError' } } try {
    const r = JSON.parse(t); if (typeof r == 'string')
      switch (r) { case 'InternalDataProxyError':return { type: 'DataProxyError', body: r }; default:return { type: 'UnknownTextError', body: r } } if (typeof r == 'object' && r !== null) {
      if ('is_panic' in r && 'message' in r && 'error_code' in r)
        return { type: 'QueryEngineError', body: r }; if ('EngineNotStarted' in r || 'InteractiveTransactionMisrouted' in r || 'InvalidRequestError' in r) { const n = Object.values(r)[0].reason; return typeof n == 'string' && !['SchemaMissing', 'EngineVersionNotSupported'].includes(n) ? { type: 'UnknownJsonError', body: r } : { type: 'DataProxyError', body: r } }
    } return { type: 'UnknownJsonError', body: r }
  }
  catch { return t === '' ? { type: 'EmptyError' } : { type: 'UnknownTextError', body: t } }
} async function er(e, t) {
  if (e.ok)
    return; const r = { clientVersion: t, response: e }; const n = await op(e); if (n.type === 'QueryEngineError')
    throw new se(n.body.message, { code: n.body.error_code, clientVersion: t }); if (n.type === 'DataProxyError') {
    if (n.body === 'InternalDataProxyError')
      throw new ht(r, 'Internal Data Proxy error'); if ('EngineNotStarted' in n.body) {
      if (n.body.EngineNotStarted.reason === 'SchemaMissing')
        return new Ge(r); if (n.body.EngineNotStarted.reason === 'EngineVersionNotSupported')
        throw new Wt(r); if ('EngineStartupError' in n.body.EngineNotStarted.reason) { const { msg: i, logs: o } = n.body.EngineNotStarted.reason.EngineStartupError; throw new Jt(r, i, o) } if ('KnownEngineStartupError' in n.body.EngineNotStarted.reason) { const { msg: i, error_code: o } = n.body.EngineNotStarted.reason.KnownEngineStartupError; throw new J(i, t, o) } if ('HealthcheckTimeout' in n.body.EngineNotStarted.reason) { const { logs: i } = n.body.EngineNotStarted.reason.HealthcheckTimeout; throw new Qt(r, i) }
    } if ('InteractiveTransactionMisrouted' in n.body) { const i = { IDParseError: 'Could not parse interactive transaction ID', NoQueryEngineFoundError: 'Could not find Query Engine for the specified host and transaction ID', TransactionStartError: 'Could not start interactive transaction' }; throw new Ht(r, i[n.body.InteractiveTransactionMisrouted.reason]) } if ('InvalidRequestError' in n.body)
      throw new zt(r, n.body.InvalidRequestError.reason)
  } if (e.status === 401 || e.status === 403)
    throw new Zt(r, yt(Yn, n)); if (e.status === 404)
    return new Yt(r, yt(Hn, n)); if (e.status === 429)
    throw new Xt(r, yt(Zn, n)); if (e.status === 504)
    throw new Kt(r, yt(Kn, n)); if (e.status >= 500)
    throw new ht(r, yt(zn, n)); if (e.status >= 400)
    throw new Gt(r, yt(Wn, n))
} function yt(e, t) { return t.type === 'EmptyError' ? e : `${e}: ${JSON.stringify(t)}` }d(); u(); c(); p(); m(); function Os(e) { const t = 2 ** e * 50; const r = Math.ceil(Math.random() * t) - Math.ceil(t / 2); const n = t + r; return new Promise(i => setTimeout(() => i(n), n)) }d(); u(); c(); p(); m(); const Ce = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; function Ds(e) { const t = new TextEncoder().encode(e); let r = ''; const n = t.byteLength; const i = n % 3; const o = n - i; let s; let a; let l; let f; let g; for (let h = 0; h < o; h = h + 3)g = t[h] << 16 | t[h + 1] << 8 | t[h + 2], s = (g & 16515072) >> 18, a = (g & 258048) >> 12, l = (g & 4032) >> 6, f = g & 63, r += Ce[s] + Ce[a] + Ce[l] + Ce[f]; return i == 1 ? (g = t[o], s = (g & 252) >> 2, a = (g & 3) << 4, r += `${Ce[s] + Ce[a]}==`) : i == 2 && (g = t[o] << 8 | t[o + 1], s = (g & 64512) >> 10, a = (g & 1008) >> 4, l = (g & 15) << 2, r += `${Ce[s] + Ce[a] + Ce[l]}=`), r }d(); u(); c(); p(); m(); function Ms(e) {
  if (e.generator?.previewFeatures.some(r => r.toLowerCase().includes('metrics')))
    throw new J('The `metrics` preview feature is not yet available with Accelerate.\nPlease remove `metrics` from the `previewFeatures` in your schema.\n\nMore information about Accelerate: https://pris.ly/d/accelerate', e.clientVersion)
}d(); u(); c(); p(); m(); const _s = { '@prisma/debug': 'workspace:*', '@prisma/engines-version': '6.13.0-35.361e86d0ea4987e9f53a565309b3eed797a6bcbd', '@prisma/fetch-engine': 'workspace:*', '@prisma/get-platform': 'workspace:*' }; d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const tr = class extends ie {
  name = 'RequestError'; code = 'P5010'; constructor(t, r) {
    super(`Cannot fetch data from service:
${t}`, U(r, !0))
  }
}; F(tr, 'RequestError'); async function Qe(e, t, r = n => n) {
  const { clientVersion: n, ...i } = t; const o = r(fetch); try { return await o(e, i) }
  catch (s) { const a = s.message ?? 'Unknown error'; throw new tr(a, { clientVersion: n, cause: s }) }
} const ap = /^[1-9]\d*\.\d+\.\d+$/; const Ns = Z('prisma:client:dataproxyEngine'); async function lp(e, t) {
  const r = _s['@prisma/engines-version']; const n = t.clientVersion ?? 'unknown'; if (y.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION || globalThis.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION)
    return y.env.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION || globalThis.PRISMA_CLIENT_DATA_PROXY_CLIENT_VERSION; if (e.includes('accelerate') && n !== '0.0.0' && n !== 'in-memory')
    return n; const [i, o] = n?.split('-') ?? []; if (o === void 0 && ap.test(i))
    return i; if (o !== void 0 || n === '0.0.0' || n === 'in-memory') {
    const [s] = r.split('-') ?? []; const [a, l, f] = s.split('.'); const g = up(`<=${a}.${l}.${f}`); const h = await Qe(g, { clientVersion: n }); if (!h.ok)
      throw new Error(`Failed to fetch stable Prisma version, unpkg.com status ${h.status} ${h.statusText}, response body: ${await h.text() || '<empty body>'}`); const T = await h.text(); Ns('length of body fetched from unpkg.com', T.length); let k; try { k = JSON.parse(T) }
    catch (C) { throw console.error('JSON.parse error: body fetched from unpkg.com: ', T), C } return k.version
  } throw new je('Only `major.minor.patch` versions are supported by Accelerate.', { clientVersion: n })
} async function Fs(e, t) { const r = await lp(e, t); return Ns('version', r), r } function up(e) { return encodeURI(`https://unpkg.com/prisma@${e}/package.json`) } const Ls = 3; const rr = Z('prisma:client:dataproxyEngine'); const wt = class {
  name = 'DataProxyEngine'; inlineSchema; inlineSchemaHash; inlineDatasources; config; logEmitter; env; clientVersion; engineHash; tracingHelper; remoteClientVersion; host; headerBuilder; startPromise; protocol; constructor(t) { Ms(t), this.config = t, this.env = t.env, this.inlineSchema = Ds(t.inlineSchema), this.inlineDatasources = t.inlineDatasources, this.inlineSchemaHash = t.inlineSchemaHash, this.clientVersion = t.clientVersion, this.engineHash = t.engineVersion, this.logEmitter = t.logEmitter, this.tracingHelper = t.tracingHelper }apiKey() { return this.headerBuilder.apiKey }version() { return this.engineHash } async start() { this.startPromise !== void 0 && await this.startPromise, this.startPromise = (async () => { const { apiKey: t, url: r } = this.getURLAndAPIKey(); this.host = r.host, this.protocol = r.protocol, this.headerBuilder = new Hr({ apiKey: t, tracingHelper: this.tracingHelper, logLevel: this.config.logLevel ?? 'error', logQueries: this.config.logQueries, engineHash: this.engineHash }), this.remoteClientVersion = await Fs(this.host, this.config), rr('host', this.host), rr('protocol', this.protocol) })(), await this.startPromise } async stop() {}propagateResponseExtensions(t) { t?.logs?.length && t.logs.forEach((r) => { switch (r.level) { case 'debug':case 'trace':rr(r); break; case 'error':case 'warn':case 'info':{ this.logEmitter.emit(r.level, { timestamp: Jn(r.timestamp), message: r.attributes.message ?? '', target: r.target }); break } case 'query':{ this.logEmitter.emit('query', { query: r.attributes.query ?? '', timestamp: Jn(r.timestamp), duration: r.attributes.duration_ms ?? 0, params: r.attributes.params ?? '', target: r.target }); break } default:r.level } }), t?.traces?.length && this.tracingHelper.dispatchEngineSpans(t.traces) }onBeforeExit() { throw new Error('"beforeExit" hook is not applicable to the remote query engine') } async url(t) { return await this.start(), `${this.protocol}//${this.host}/${this.remoteClientVersion}/${this.inlineSchemaHash}/${t}` } async uploadSchema() {
    const t = { name: 'schemaUpload', internal: !0 }; return this.tracingHelper.runInChildSpan(t, async () => {
      const r = await Qe(await this.url('schema'), { method: 'PUT', headers: this.headerBuilder.build(), body: this.inlineSchema, clientVersion: this.clientVersion }); r.ok || rr('schema response status', r.status); const n = await er(r, this.clientVersion); if (n)
        throw this.logEmitter.emit('warn', { message: `Error while uploading schema: ${n.message}`, timestamp: new Date(), target: '' }), n; this.logEmitter.emit('info', { message: `Schema (re)uploaded (hash: ${this.inlineSchemaHash})`, timestamp: new Date(), target: '' })
    })
  }

  request(t, { traceparent: r, interactiveTransaction: n, customDataProxyFetch: i }) { return this.requestInternal({ body: t, traceparent: r, interactiveTransaction: n, customDataProxyFetch: i }) } async requestBatch(t, { traceparent: r, transaction: n, customDataProxyFetch: i }) { const o = n?.kind === 'itx' ? n.options : void 0; const s = Gr(t, n); return (await this.requestInternal({ body: s, customDataProxyFetch: i, interactiveTransaction: o, traceparent: r })).map(l => (l.extensions && this.propagateResponseExtensions(l.extensions), 'errors' in l ? this.convertProtocolErrorsToClientError(l.errors) : l)) }requestInternal({ body: t, traceparent: r, customDataProxyFetch: n, interactiveTransaction: i }) {
    return this.withRetry({ actionGerund: 'querying', callback: async ({ logHttpCall: o }) => {
      const s = i ? `${i.payload.endpoint}/graphql` : await this.url('graphql'); o(s); const a = await Qe(s, { method: 'POST', headers: this.headerBuilder.build({ traceparent: r, transactionId: i?.id }), body: JSON.stringify(t), clientVersion: this.clientVersion }, n); a.ok || rr('graphql response status', a.status), await this.handleError(await er(a, this.clientVersion)); const l = await a.json(); if (l.extensions && this.propagateResponseExtensions(l.extensions), 'errors' in l)
        throw this.convertProtocolErrorsToClientError(l.errors); return 'batchResult' in l ? l.batchResult : l
    } })
  }

  async transaction(t, r, n) {
    const i = { start: 'starting', commit: 'committing', rollback: 'rolling back' }; return this.withRetry({ actionGerund: `${i[t]} transaction`, callback: async ({ logHttpCall: o }) => {
      if (t === 'start') { const s = JSON.stringify({ max_wait: n.maxWait, timeout: n.timeout, isolation_level: n.isolationLevel }); const a = await this.url('transaction/start'); o(a); const l = await Qe(a, { method: 'POST', headers: this.headerBuilder.build({ traceparent: r.traceparent }), body: s, clientVersion: this.clientVersion }); await this.handleError(await er(l, this.clientVersion)); const f = await l.json(); const { extensions: g } = f; g && this.propagateResponseExtensions(g); const h = f.id; const T = f['data-proxy'].endpoint; return { id: h, payload: { endpoint: T } } }
      else { const s = `${n.payload.endpoint}/${t}`; o(s); const a = await Qe(s, { method: 'POST', headers: this.headerBuilder.build({ traceparent: r.traceparent }), clientVersion: this.clientVersion }); await this.handleError(await er(a, this.clientVersion)); const l = await a.json(); const { extensions: f } = l; f && this.propagateResponseExtensions(f) }
    } })
  }

  getURLAndAPIKey() { return ks({ clientVersion: this.clientVersion, env: this.env, inlineDatasources: this.inlineDatasources, overrideDatasources: this.config.overrideDatasources }) }metrics() { throw new je('Metrics are not yet supported for Accelerate', { clientVersion: this.clientVersion }) } async withRetry(t) {
    for (let r = 0; ;r++) {
      const n = (i) => { this.logEmitter.emit('info', { message: `Calling ${i} (n=${r})`, timestamp: new Date(), target: '' }) }; try { return await t.callback({ logHttpCall: n }) }
      catch (i) {
        if (!(i instanceof ie) || !i.isRetryable)
          throw i; if (r >= Ls)
          throw i instanceof gt ? i.cause : i; this.logEmitter.emit('warn', { message: `Attempt ${r + 1}/${Ls} failed for ${t.actionGerund}: ${i.message ?? '(unknown)'}`, timestamp: new Date(), target: '' }); const o = await Os(r); this.logEmitter.emit('warn', { message: `Retrying after ${o}ms`, timestamp: new Date(), target: '' })
      }
    }
  }

  async handleError(t) {
    if (t instanceof Ge)
      throw await this.uploadSchema(), new gt({ clientVersion: this.clientVersion, cause: t }); if (t)
      throw t
  }

  convertProtocolErrorsToClientError(t) { return t.length === 1 ? Qr(t[0], this.config.clientVersion, this.config.activeProvider) : new ae(JSON.stringify(t), { clientVersion: this.config.clientVersion }) }applyPendingMigrations() { throw new Error('Method not implemented.') }
}; d(); u(); c(); p(); m(); function Us({ url: e, adapter: t, copyEngine: r, targetBuildType: n }) {
  const i = []; const o = []; const s = (S) => { i.push({ _tag: 'warning', value: S }) }; const a = (S) => {
    const M = S.join(`
`); o.push({ _tag: 'error', value: M })
  }; const l = !!e?.startsWith('prisma://'); const f = gr(e); const g = !!t; const h = l || f; !g && r && h && s(['recommend--no-engine', 'In production, we recommend using `prisma generate --no-engine` (See: `prisma generate --help`)']); const T = h || !r; g && (T || n === 'edge') && (n === 'edge' ? a(['Prisma Client was configured to use the `adapter` option but it was imported via its `/edge` endpoint.', 'Please either remove the `/edge` endpoint or remove the `adapter` from the Prisma Client constructor.']) : r ? l && a(['Prisma Client was configured to use the `adapter` option but the URL was a `prisma://` URL.', 'Please either use the `prisma://` URL or remove the `adapter` from the Prisma Client constructor.']) : a(['Prisma Client was configured to use the `adapter` option but `prisma generate` was run with `--no-engine`.', 'Please run `prisma generate` without `--no-engine` to be able to use Prisma Client with the adapter.'])); const k = { accelerate: T, ppg: f, driverAdapters: g }; function C(S) { return S.length > 0 } return C(o) ? { ok: !1, diagnostics: { warnings: i, errors: o }, isUsing: k } : { ok: !0, diagnostics: { warnings: i }, isUsing: k }
} function Bs({ copyEngine: e = !0 }, t) {
  let r; try { r = ft({ inlineDatasources: t.inlineDatasources, overrideDatasources: t.overrideDatasources, env: { ...t.env, ...y.env }, clientVersion: t.clientVersion }) }
  catch {} const { ok: n, isUsing: i, diagnostics: o } = Us({ url: r, adapter: t.adapter, copyEngine: e, targetBuildType: 'edge' }); for (const h of o.warnings)hr(...h.value); if (!n) { const h = o.errors[0]; throw new ee(h.value, { clientVersion: t.clientVersion }) } const s = Ze(t.generator); const a = s === 'library'; const l = s === 'binary'; const f = s === 'client'; const g = (i.accelerate || i.ppg) && !i.driverAdapters; return i.accelerate ? new wt(t) : (i.driverAdapters, i.accelerate, new wt(t))
}d(); u(); c(); p(); m(); function zr({ generator: e }) { return e?.previewFeatures ?? [] }d(); u(); c(); p(); m(); const qs = e => ({ command: e }); d(); u(); c(); p(); m(); d(); u(); c(); p(); m(); const $s = e => e.strings.reduce((t, r, n) => `${t}@P${n}${r}`); d(); u(); c(); p(); m(); function Et(e) {
  try { return Vs(e, 'fast') }
  catch { return Vs(e, 'slow') }
} function Vs(e, t) { return JSON.stringify(e.map(r => Gs(r, t))) } function Gs(e, t) {
  if (Array.isArray(e))
    return e.map(r => Gs(r, t)); if (typeof e == 'bigint')
    return { prisma__type: 'bigint', prisma__value: e.toString() }; if (rt(e))
    return { prisma__type: 'date', prisma__value: e.toJSON() }; if (Te.isDecimal(e))
    return { prisma__type: 'decimal', prisma__value: e.toJSON() }; if (w.Buffer.isBuffer(e))
    return { prisma__type: 'bytes', prisma__value: e.toString('base64') }; if (cp(e))
    return { prisma__type: 'bytes', prisma__value: w.Buffer.from(e).toString('base64') }; if (ArrayBuffer.isView(e)) { const { buffer: r, byteOffset: n, byteLength: i } = e; return { prisma__type: 'bytes', prisma__value: w.Buffer.from(r, n, i).toString('base64') } } return typeof e == 'object' && t === 'slow' ? Qs(e) : e
} function cp(e) { return e instanceof ArrayBuffer || e instanceof SharedArrayBuffer ? !0 : typeof e == 'object' && e !== null ? e[Symbol.toStringTag] === 'ArrayBuffer' || e[Symbol.toStringTag] === 'SharedArrayBuffer' : !1 } function Qs(e) {
  if (typeof e != 'object' || e === null)
    return e; if (typeof e.toJSON == 'function')
    return e.toJSON(); if (Array.isArray(e))
    return e.map(js); const t = {}; for (const r of Object.keys(e))t[r] = js(e[r]); return t
} function js(e) { return typeof e == 'bigint' ? e.toString() : Qs(e) } const pp = /^(\s*alter\s)/i; const Js = Z('prisma:client'); function Xn(e, t, r, n) {
  if (!(e !== 'postgresql' && e !== 'cockroachdb') && r.length > 0 && pp.exec(t)) {
    throw new Error(`Running ALTER using ${n} is not supported
Using the example below you can still execute your query with Prisma, but please note that it is vulnerable to SQL injection attacks and requires you to take care of input sanitization.

Example:
  await prisma.$executeRawUnsafe(\`ALTER USER prisma WITH PASSWORD '\${password}'\`)

More Information: https://pris.ly/d/execute-raw
`)
  }
} const ei = ({ clientMethod: e, activeProvider: t }) => (r) => {
  let n = ''; let i; if (qr(r)) {
    n = r.sql, i = { values: Et(r.values), __prismaRawParameters__: !0 }
  }
  else if (Array.isArray(r)) { const [o, ...s] = r; n = o, i = { values: Et(s || []), __prismaRawParameters__: !0 } }
  else {
    switch (t) { case 'sqlite':case 'mysql':{ n = r.sql, i = { values: Et(r.values), __prismaRawParameters__: !0 }; break } case 'cockroachdb':case 'postgresql':case 'postgres':{ n = r.text, i = { values: Et(r.values), __prismaRawParameters__: !0 }; break } case 'sqlserver':{ n = $s(r), i = { values: Et(r.values), __prismaRawParameters__: !0 }; break } default:throw new Error(`The ${t} provider does not support ${e}`) }
  } return i?.values ? Js(`prisma.${e}(${n}, ${i.values})`) : Js(`prisma.${e}(${n})`), { query: n, parameters: i }
}; const Ws = { requestArgsToMiddlewareArgs(e) { return [e.strings, ...e.values] }, middlewareArgsToRequestArgs(e) { const [t, ...r] = e; return new ue(t, r) } }; const Ks = { requestArgsToMiddlewareArgs(e) { return [e] }, middlewareArgsToRequestArgs(e) { return e[0] } }; d(); u(); c(); p(); m(); function ti(e) {
  return function (r, n) {
    let i; const o = (s = e) => {
      try { return s === void 0 || s?.kind === 'itx' ? i ??= Hs(r(s)) : Hs(r(s)) }
      catch (a) { return Promise.reject(a) }
    }; return { get spec() { return n }, then(s, a) { return o().then(s, a) }, catch(s) { return o().catch(s) }, finally(s) { return o().finally(s) }, requestTransaction(s) { const a = o(s); return a.requestTransaction ? a.requestTransaction(s) : a }, [Symbol.toStringTag]: 'PrismaPromise' }
  }
} function Hs(e) { return typeof e.then == 'function' ? e : Promise.resolve(e) }d(); u(); c(); p(); m(); const mp = hn.split('.')[0]; const dp = { isEnabled() { return !1 }, getTraceParent() { return '00-10-10-00' }, dispatchEngineSpans() {}, getActiveContext() {}, runInChildSpan(e, t) { return t() } }; const ri = class {isEnabled() { return this.getGlobalTracingHelper().isEnabled() }getTraceParent(t) { return this.getGlobalTracingHelper().getTraceParent(t) }dispatchEngineSpans(t) { return this.getGlobalTracingHelper().dispatchEngineSpans(t) }getActiveContext() { return this.getGlobalTracingHelper().getActiveContext() }runInChildSpan(t, r) { return this.getGlobalTracingHelper().runInChildSpan(t, r) }getGlobalTracingHelper() { const t = globalThis[`V${mp}_PRISMA_INSTRUMENTATION`]; const r = globalThis.PRISMA_INSTRUMENTATION; return t?.helper ?? r?.helper ?? dp }}; function zs() { return new ri() }d(); u(); c(); p(); m(); function Ys(e, t = () => {}) { let r; const n = new Promise(i => r = i); return { then(i) { return --e === 0 && r(t()), i?.(n) } } }d(); u(); c(); p(); m(); function Zs(e) { return typeof e == 'string' ? e : e.reduce((t, r) => { const n = typeof r == 'string' ? r : r.level; return n === 'query' ? t : t && (r === 'info' || t === 'info') ? 'info' : n }, void 0) }d(); u(); c(); p(); m(); const Yr = class {_middlewares = []; use(t) { this._middlewares.push(t) }get(t) { return this._middlewares[t] }has(t) { return !!this._middlewares[t] }length() { return this._middlewares.length }}; d(); u(); c(); p(); m(); const ea = Ue(io()); d(); u(); c(); p(); m(); function Zr(e) { return typeof e.batchRequestIdx == 'number' }d(); u(); c(); p(); m(); function Xs(e) {
  if (e.action !== 'findUnique' && e.action !== 'findUniqueOrThrow')
    return; const t = []; return e.modelName && t.push(e.modelName), e.query.arguments && t.push(ni(e.query.arguments)), t.push(ni(e.query.selection)), t.join('')
} function ni(e) { return `(${Object.keys(e).sort().map((r) => { const n = e[r]; return typeof n == 'object' && n !== null ? `(${r} ${ni(n)})` : r }).join(' ')})` }d(); u(); c(); p(); m(); const fp = { aggregate: !1, aggregateRaw: !1, createMany: !0, createManyAndReturn: !0, createOne: !0, deleteMany: !0, deleteOne: !0, executeRaw: !0, findFirst: !1, findFirstOrThrow: !1, findMany: !1, findRaw: !1, findUnique: !1, findUniqueOrThrow: !1, groupBy: !1, queryRaw: !1, runCommandRaw: !0, updateMany: !0, updateManyAndReturn: !0, updateOne: !0, upsertOne: !0 }; function ii(e) { return fp[e] }d(); u(); c(); p(); m(); const Xr = class {
  constructor(t) { this.options = t; this.batches = {} }batches; tickActive = !1; request(t) { const r = this.options.batchBy(t); return r ? (this.batches[r] || (this.batches[r] = [], this.tickActive || (this.tickActive = !0, y.nextTick(() => { this.dispatchBatches(), this.tickActive = !1 }))), new Promise((n, i) => { this.batches[r].push({ request: t, resolve: n, reject: i }) })) : this.options.singleLoader(t) }dispatchBatches() {
    for (const t in this.batches) {
      const r = this.batches[t]; delete this.batches[t], r.length === 1
        ? this.options.singleLoader(r[0].request).then((n) => { n instanceof Error ? r[0].reject(n) : r[0].resolve(n) }).catch((n) => { r[0].reject(n) })
        : (r.sort((n, i) => this.options.batchOrder(n.request, i.request)), this.options.batchLoader(r.map(n => n.request)).then((n) => {
            if (n instanceof Error) {
              for (let i = 0; i < r.length; i++)r[i].reject(n)
            }
            else {
              for (let i = 0; i < r.length; i++) { const o = n[i]; o instanceof Error ? r[i].reject(o) : r[i].resolve(o) }
            }
          }).catch((n) => { for (let i = 0; i < r.length; i++)r[i].reject(n) }))
    }
  }

  get [Symbol.toStringTag]() { return 'DataLoader' }
}; d(); u(); c(); p(); m(); function Je(e, t) {
  if (t === null)
    return t; switch (e) { case 'bigint':return BigInt(t); case 'bytes':{ const { buffer: r, byteOffset: n, byteLength: i } = w.Buffer.from(t, 'base64'); return new Uint8Array(r, n, i) } case 'decimal':return new Te(t); case 'datetime':case 'date':return new Date(t); case 'time':return new Date(`1970-01-01T${t}Z`); case 'bigint-array':return t.map(r => Je('bigint', r)); case 'bytes-array':return t.map(r => Je('bytes', r)); case 'decimal-array':return t.map(r => Je('decimal', r)); case 'datetime-array':return t.map(r => Je('datetime', r)); case 'date-array':return t.map(r => Je('date', r)); case 'time-array':return t.map(r => Je('time', r)); default:return t }
} function oi(e) { const t = []; const r = gp(e); for (let n = 0; n < e.rows.length; n++) { const i = e.rows[n]; const o = { ...r }; for (let s = 0; s < i.length; s++)o[e.columns[s]] = Je(e.types[s], i[s]); t.push(o) } return t } function gp(e) { const t = {}; for (let r = 0; r < e.columns.length; r++)t[e.columns[r]] = null; return t } const hp = Z('prisma:client:request_handler'); const en = class {
  client; dataloader; logEmitter; constructor(t, r) {
    this.logEmitter = r, this.client = t, this.dataloader = new Xr({ batchLoader: xs(async ({ requests: n, customDataProxyFetch: i }) => {
      const { transaction: o, otelParentCtx: s } = n[0]; const a = n.map(h => h.protocolQuery); const l = this.client._tracingHelper.getTraceParent(s); const f = n.some(h => ii(h.protocolQuery.action)); return (await this.client._engine.requestBatch(a, { traceparent: l, transaction: yp(o), containsWrite: f, customDataProxyFetch: i })).map((h, T) => {
        if (h instanceof Error)
          return h; try { return this.mapQueryEngineResult(n[T], h) }
        catch (k) { return k }
      })
    }), singleLoader: async (n) => { const i = n.transaction?.kind === 'itx' ? ta(n.transaction) : void 0; const o = await this.client._engine.request(n.protocolQuery, { traceparent: this.client._tracingHelper.getTraceParent(), interactiveTransaction: i, isWrite: ii(n.protocolQuery.action), customDataProxyFetch: n.customDataProxyFetch }); return this.mapQueryEngineResult(n, o) }, batchBy: n => n.transaction?.id ? `transaction-${n.transaction.id}` : Xs(n.protocolQuery), batchOrder(n, i) { return n.transaction?.kind === 'batch' && i.transaction?.kind === 'batch' ? n.transaction.index - i.transaction.index : 0 } })
  }

  async request(t) {
    try { return await this.dataloader.request(t) }
    catch (r) { const { clientMethod: n, callsite: i, transaction: o, args: s, modelName: a } = t; this.handleAndLogRequestError({ error: r, clientMethod: n, callsite: i, transaction: o, args: s, modelName: a, globalOmit: t.globalOmit }) }
  }

  mapQueryEngineResult({ dataPath: t, unpacker: r }, n) { const i = n?.data; const o = this.unpack(i, t, r); return y.env.PRISMA_CLIENT_GET_TIME ? { data: o } : o }handleAndLogRequestError(t) {
    try { this.handleRequestError(t) }
    catch (r) { throw this.logEmitter && this.logEmitter.emit('error', { message: r.message, target: t.clientMethod, timestamp: new Date() }), r }
  }

  handleRequestError({ error: t, clientMethod: r, callsite: n, transaction: i, args: o, modelName: s, globalOmit: a }) {
    if (hp(t), wp(t, i))
      throw t; if (t instanceof se && Ep(t)) { const f = ra(t.meta); Fr({ args: o, errors: [f], callsite: n, errorFormat: this.client._errorFormat, originalMethod: r, clientVersion: this.client._clientVersion, globalOmit: a }) } let l = t.message; if (n && (l = Rr({ callsite: n, originalMethod: r, isPanic: t.isPanic, showColors: this.client._errorFormat === 'pretty', message: l })), l = this.sanitizeMessage(l), t.code) { const f = s ? { modelName: s, ...t.meta } : t.meta; throw new se(l, { code: t.code, clientVersion: this.client._clientVersion, meta: f, batchRequestIdx: t.batchRequestIdx }) }
    else {
      if (t.isPanic)
        throw new ke(l, this.client._clientVersion); if (t instanceof ae)
        throw new ae(l, { clientVersion: this.client._clientVersion, batchRequestIdx: t.batchRequestIdx }); if (t instanceof J)
        throw new J(l, this.client._clientVersion); if (t instanceof ke)
        throw new ke(l, this.client._clientVersion)
    } throw t.clientVersion = this.client._clientVersion, t
  }

  sanitizeMessage(t) { return this.client._errorFormat && this.client._errorFormat !== 'pretty' ? (0, ea.default)(t) : t }unpack(t, r, n) {
    if (!t || (t.data && (t = t.data), !t))
      return t; const i = Object.keys(t)[0]; const o = Object.values(t)[0]; const s = r.filter(f => f !== 'select' && f !== 'include'); const a = $n(o, s); const l = i === 'queryRaw' ? oi(a) : Rt(a); return n ? n(l) : l
  }

  get [Symbol.toStringTag]() { return 'RequestHandler' }
}; function yp(e) {
  if (e) {
    if (e.kind === 'batch')
      return { kind: 'batch', options: { isolationLevel: e.isolationLevel } }; if (e.kind === 'itx')
      return { kind: 'itx', options: ta(e) }; Pe(e, 'Unknown transaction kind')
  }
} function ta(e) { return { id: e.id, payload: e.payload } } function wp(e, t) { return Zr(e) && t?.kind === 'batch' && e.batchRequestIdx !== t.index } function Ep(e) { return e.code === 'P2009' || e.code === 'P2012' } function ra(e) {
  if (e.kind === 'Union')
    return { kind: 'Union', errors: e.errors.map(ra) }; if (Array.isArray(e.selectionPath)) { const [,...t] = e.selectionPath; return { ...e, selectionPath: t } } return e
}d(); u(); c(); p(); m(); const na = Ss; d(); u(); c(); p(); m(); const la = Ue(Sn()); d(); u(); c(); p(); m(); const q = class extends Error {
  constructor(t) {
    super(`${t}
Read more at https://pris.ly/d/client-constructor`), this.name = 'PrismaClientConstructorValidationError'
  }

  get [Symbol.toStringTag]() { return 'PrismaClientConstructorValidationError' }
}; F(q, 'PrismaClientConstructorValidationError'); const ia = ['datasources', 'datasourceUrl', 'errorFormat', 'adapter', 'log', 'transactionOptions', 'omit', '__internal']; const oa = ['pretty', 'colorless', 'minimal']; const sa = ['info', 'query', 'warn', 'error']; const bp = { datasources: (e, { datasourceNames: t }) => {
  if (e) {
    if (typeof e != 'object' || Array.isArray(e))
      throw new q(`Invalid value ${JSON.stringify(e)} for "datasources" provided to PrismaClient constructor`); for (const [r, n] of Object.entries(e)) {
      if (!t.includes(r)) { const i = bt(r, t) || ` Available datasources: ${t.join(', ')}`; throw new q(`Unknown datasource ${r} provided to PrismaClient constructor.${i}`) } if (typeof n != 'object' || Array.isArray(n)) {
        throw new q(`Invalid value ${JSON.stringify(e)} for datasource "${r}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`)
      } if (n && typeof n == 'object') {
        for (const [i, o] of Object.entries(n)) {
          if (i !== 'url') {
            throw new q(`Invalid value ${JSON.stringify(e)} for datasource "${r}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`)
          } if (typeof o != 'string') {
            throw new q(`Invalid value ${JSON.stringify(o)} for datasource "${r}" provided to PrismaClient constructor.
It should have this form: { url: "CONNECTION_STRING" }`)
          }
        }
      }
    }
  }
}, adapter: (e, t) => {
  if (!e && Ze(t.generator) === 'client')
    throw new q('Using engine type "client" requires a driver adapter to be provided to PrismaClient constructor.'); if (e === null)
    return; if (e === void 0)
    throw new q('"adapter" property must not be undefined, use null to conditionally disable driver adapters.'); if (!zr(t).includes('driverAdapters'))
    throw new q('"adapter" property can only be provided to PrismaClient constructor when "driverAdapters" preview feature is enabled.'); if (Ze(t.generator) === 'binary')
    throw new q('Cannot use a driver adapter with the "binary" Query Engine. Please use the "library" Query Engine.')
}, datasourceUrl: (e) => {
  if (typeof e < 'u' && typeof e != 'string') {
    throw new q(`Invalid value ${JSON.stringify(e)} for "datasourceUrl" provided to PrismaClient constructor.
Expected string or undefined.`)
  }
}, errorFormat: (e) => {
  if (e) {
    if (typeof e != 'string')
      throw new q(`Invalid value ${JSON.stringify(e)} for "errorFormat" provided to PrismaClient constructor.`); if (!oa.includes(e)) { const t = bt(e, oa); throw new q(`Invalid errorFormat ${e} provided to PrismaClient constructor.${t}`) }
  }
}, log: (e) => {
  if (!e)
    return; if (!Array.isArray(e))
    throw new q(`Invalid value ${JSON.stringify(e)} for "log" provided to PrismaClient constructor.`); function t(r) { if (typeof r == 'string' && !sa.includes(r)) { const n = bt(r, sa); throw new q(`Invalid log level "${r}" provided to PrismaClient constructor.${n}`) } } for (const r of e) {
    t(r); const n = { level: t, emit: (i) => { const o = ['stdout', 'event']; if (!o.includes(i)) { const s = bt(i, o); throw new q(`Invalid value ${JSON.stringify(i)} for "emit" in logLevel provided to PrismaClient constructor.${s}`) } } }; if (r && typeof r == 'object') {
      for (const [i, o] of Object.entries(r)) {
        if (n[i])
          n[i](o); else throw new q(`Invalid property ${i} for "log" provided to PrismaClient constructor`)
      }
    }
  }
}, transactionOptions: (e) => {
  if (!e)
    return; const t = e.maxWait; if (t != null && t <= 0)
    throw new q(`Invalid value ${t} for maxWait in "transactionOptions" provided to PrismaClient constructor. maxWait needs to be greater than 0`); const r = e.timeout; if (r != null && r <= 0)
    throw new q(`Invalid value ${r} for timeout in "transactionOptions" provided to PrismaClient constructor. timeout needs to be greater than 0`)
}, omit: (e, t) => {
  if (typeof e != 'object')
    throw new q('"omit" option is expected to be an object.'); if (e === null)
    throw new q('"omit" option can not be `null`'); const r = []; for (const [n, i] of Object.entries(e)) { const o = Pp(n, t.runtimeDataModel); if (!o) { r.push({ kind: 'UnknownModel', modelKey: n }); continue } for (const [s, a] of Object.entries(i)) { const l = o.fields.find(f => f.name === s); if (!l) { r.push({ kind: 'UnknownField', modelKey: n, fieldName: s }); continue } if (l.relationName) { r.push({ kind: 'RelationInOmit', modelKey: n, fieldName: s }); continue } typeof a != 'boolean' && r.push({ kind: 'InvalidFieldValue', modelKey: n, fieldName: s }) } } if (r.length > 0)
    throw new q(vp(e, r))
}, __internal: (e) => {
  if (!e)
    return; const t = ['debug', 'engine', 'configOverride']; if (typeof e != 'object')
    throw new q(`Invalid value ${JSON.stringify(e)} for "__internal" to PrismaClient constructor`); for (const [r] of Object.entries(e)) {
    if (!t.includes(r)) { const n = bt(r, t); throw new q(`Invalid property ${JSON.stringify(r)} for "__internal" provided to PrismaClient constructor.${n}`) }
  }
} }; function ua(e, t) {
  for (const [r, n] of Object.entries(e)) { if (!ia.includes(r)) { const i = bt(r, ia); throw new q(`Unknown property ${r} provided to PrismaClient constructor.${i}`) }bp[r](n, t) } if (e.datasourceUrl && e.datasources)
    throw new q('Can not use "datasourceUrl" and "datasources" options at the same time. Pick one of them')
} function bt(e, t) {
  if (t.length === 0 || typeof e != 'string')
    return ''; const r = xp(e, t); return r ? ` Did you mean "${r}"?` : ''
} function xp(e, t) {
  if (t.length === 0)
    return null; const r = t.map(i => ({ value: i, distance: (0, la.default)(e, i) })); r.sort((i, o) => i.distance < o.distance ? -1 : 1); const n = r[0]; return n.distance < 3 ? n.value : null
} function Pp(e, t) { return aa(t.models, e) ?? aa(t.types, e) } function aa(e, t) {
  const r = Object.keys(e).find(n => _e(n) === t); if (r)
    return e[r]
} function vp(e, t) {
  const r = ct(e); for (const o of t) switch (o.kind) { case 'UnknownModel':r.arguments.getField(o.modelKey)?.markAsError(), r.addErrorMessage(() => `Unknown model name: ${o.modelKey}.`); break; case 'UnknownField':r.arguments.getDeepField([o.modelKey, o.fieldName])?.markAsError(), r.addErrorMessage(() => `Model "${o.modelKey}" does not have a field named "${o.fieldName}".`); break; case 'RelationInOmit':r.arguments.getDeepField([o.modelKey, o.fieldName])?.markAsError(), r.addErrorMessage(() => 'Relations are already excluded by default and can not be specified in "omit".'); break; case 'InvalidFieldValue':r.arguments.getDeepFieldValue([o.modelKey, o.fieldName])?.markAsError(), r.addErrorMessage(() => 'Omit field option value must be a boolean.'); break } const { message: n, args: i } = Nr(r, 'colorless'); return `Error validating "omit" option:

${i}

${n}`
}d(); u(); c(); p(); m(); function ca(e) { return e.length === 0 ? Promise.resolve([]) : new Promise((t, r) => { const n = Array.from({ length: e.length }); let i = null; let o = !1; let s = 0; const a = () => { o || (s++, s === e.length && (o = !0, i ? r(i) : t(n))) }; const l = (f) => { o || (o = !0, r(f)) }; for (let f = 0; f < e.length; f++)e[f].then((g) => { n[f] = g, a() }, (g) => { if (!Zr(g)) { l(g); return }g.batchRequestIdx === f ? l(g) : (i || (i = g), a()) }) }) } const Le = Z('prisma:client'); typeof globalThis == 'object' && (globalThis.NODE_CLIENT = !0); const Tp = { requestArgsToMiddlewareArgs: e => e, middlewareArgsToRequestArgs: e => e }; const Ap = Symbol.for('prisma.client.transaction.id'); const Cp = { id: 0, nextId() { return ++this.id } }; function Rp(e) {
  class t {
    _originalClient = this; _runtimeDataModel; _requestHandler; _connectionPromise; _disconnectionPromise; _engineConfig; _accelerateEngineConfig; _clientVersion; _errorFormat; _tracingHelper; _middlewares = new Yr(); _previewFeatures; _activeProvider; _globalOmit; _extensions; _engine; _appliedParent; _createPrismaPromise = ti(); constructor(n) {
      e = n?.__internal?.configOverride?.(e) ?? e, Cs(e), n && ua(n, e); const i = new $r().on('error', () => {}); this._extensions = pt.empty(), this._previewFeatures = zr(e), this._clientVersion = e.clientVersion ?? na, this._activeProvider = e.activeProvider, this._globalOmit = n?.omit, this._tracingHelper = zs(); const o = e.relativeEnvPaths && { rootEnvPath: e.relativeEnvPaths.rootEnvPath && mr.resolve(e.dirname, e.relativeEnvPaths.rootEnvPath), schemaEnvPath: e.relativeEnvPaths.schemaEnvPath && mr.resolve(e.dirname, e.relativeEnvPaths.schemaEnvPath) }; let s; if (n?.adapter) {
        s = n.adapter; const l = e.activeProvider === 'postgresql' || e.activeProvider === 'cockroachdb' ? 'postgres' : e.activeProvider; if (s.provider !== l)
          throw new J(`The Driver Adapter \`${s.adapterName}\`, based on \`${s.provider}\`, is not compatible with the provider \`${l}\` specified in the Prisma schema.`, this._clientVersion); if (n.datasources || n.datasourceUrl !== void 0)
          throw new J('Custom datasource configuration is not compatible with Prisma Driver Adapters. Please define the database connection string directly in the Driver Adapter configuration.', this._clientVersion)
      } const a = e.injectableEdgeEnv?.(); try {
        const l = n ?? {}; const f = l.__internal ?? {}; const g = f.debug === !0; g && Z.enable('prisma:client'); let h = mr.resolve(e.dirname, e.relativePath); ji.existsSync(h) || (h = e.dirname), Le('dirname', e.dirname), Le('relativePath', e.relativePath), Le('cwd', h); const T = f.engine || {}; if (l.errorFormat ? this._errorFormat = l.errorFormat : y.env.NODE_ENV === 'production' ? this._errorFormat = 'minimal' : y.env.NO_COLOR ? this._errorFormat = 'colorless' : this._errorFormat = 'colorless', this._runtimeDataModel = e.runtimeDataModel, this._engineConfig = { cwd: h, dirname: e.dirname, enableDebugLogs: g, allowTriggerPanic: T.allowTriggerPanic, prismaPath: T.binaryPath ?? void 0, engineEndpoint: T.endpoint, generator: e.generator, showColors: this._errorFormat === 'pretty', logLevel: l.log && Zs(l.log), logQueries: l.log && !!(typeof l.log == 'string' ? l.log === 'query' : l.log.find(k => typeof k == 'string' ? k === 'query' : k.level === 'query')), env: a?.parsed ?? {}, flags: [], engineWasm: e.engineWasm, compilerWasm: e.compilerWasm, clientVersion: e.clientVersion, engineVersion: e.engineVersion, previewFeatures: this._previewFeatures, activeProvider: e.activeProvider, inlineSchema: e.inlineSchema, overrideDatasources: Rs(l, e.datasourceNames), inlineDatasources: e.inlineDatasources, inlineSchemaHash: e.inlineSchemaHash, tracingHelper: this._tracingHelper, transactionOptions: { maxWait: l.transactionOptions?.maxWait ?? 2e3, timeout: l.transactionOptions?.timeout ?? 5e3, isolationLevel: l.transactionOptions?.isolationLevel }, logEmitter: i, isBundled: e.isBundled, adapter: s }, this._accelerateEngineConfig = { ...this._engineConfig, accelerateUtils: { resolveDatasourceUrl: ft, getBatchRequestPayload: Gr, prismaGraphQLToJSError: Qr, PrismaClientUnknownRequestError: ae, PrismaClientInitializationError: J, PrismaClientKnownRequestError: se, debug: Z('prisma:client:accelerateEngine'), engineVersion: ma.version, clientVersion: e.clientVersion } }, Le('clientVersion', e.clientVersion), this._engine = Bs(e, this._engineConfig), this._requestHandler = new en(this, i), l.log) {
          for (const k of l.log) { const C = typeof k == 'string' ? k : k.emit === 'stdout' ? k.level : null; C && this.$on(C, (S) => { At.log(`${At.tags[C] ?? ''}`, S.message || S.query) }) }
        }
      }
      catch (l) { throw l.clientVersion = this._clientVersion, l } return this._appliedParent = Vt(this)
    }

    get [Symbol.toStringTag]() { return 'PrismaClient' }$use(n) { this._middlewares.use(n) }$on(n, i) { return n === 'beforeExit' ? this._engine.onBeforeExit(i) : n && this._engineConfig.logEmitter.on(n, i), this }$connect() {
      try { return this._engine.start() }
      catch (n) { throw n.clientVersion = this._clientVersion, n }
    }

    async $disconnect() {
      try { await this._engine.stop() }
      catch (n) { throw n.clientVersion = this._clientVersion, n }
      finally { Vi() }
    }

    $executeRawInternal(n, i, o, s) { const a = this._activeProvider; return this._request({ action: 'executeRaw', args: o, transaction: n, clientMethod: i, argsMapper: ei({ clientMethod: i, activeProvider: a }), callsite: Fe(this._errorFormat), dataPath: [], middlewareArgsMapper: s }) }$executeRaw(n, ...i) { return this._createPrismaPromise((o) => { if (n.raw !== void 0 || n.sql !== void 0) { const [s, a] = pa(n, i); return Xn(this._activeProvider, s.text, s.values, Array.isArray(n) ? 'prisma.$executeRaw`<SQL>`' : 'prisma.$executeRaw(sql`<SQL>`)'), this.$executeRawInternal(o, '$executeRaw', s, a) } throw new ee('`$executeRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${\'user@email.com\'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#executeraw\n', { clientVersion: this._clientVersion }) }) }$executeRawUnsafe(n, ...i) { return this._createPrismaPromise(o => (Xn(this._activeProvider, n, i, 'prisma.$executeRawUnsafe(<SQL>, [...values])'), this.$executeRawInternal(o, '$executeRawUnsafe', [n, ...i]))) }$runCommandRaw(n) {
      if (e.activeProvider !== 'mongodb')
        throw new ee(`The ${e.activeProvider} provider does not support $runCommandRaw. Use the mongodb provider.`, { clientVersion: this._clientVersion }); return this._createPrismaPromise(i => this._request({ args: n, clientMethod: '$runCommandRaw', dataPath: [], action: 'runCommandRaw', argsMapper: qs, callsite: Fe(this._errorFormat), transaction: i }))
    }

    async $queryRawInternal(n, i, o, s) { const a = this._activeProvider; return this._request({ action: 'queryRaw', args: o, transaction: n, clientMethod: i, argsMapper: ei({ clientMethod: i, activeProvider: a }), callsite: Fe(this._errorFormat), dataPath: [], middlewareArgsMapper: s }) }$queryRaw(n, ...i) {
      return this._createPrismaPromise((o) => {
        if (n.raw !== void 0 || n.sql !== void 0)
          return this.$queryRawInternal(o, '$queryRaw', ...pa(n, i)); throw new ee('`$queryRaw` is a tag function, please use it like the following:\n```\nconst result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${\'user@email.com\'};`\n```\n\nOr read our docs at https://www.prisma.io/docs/concepts/components/prisma-client/raw-database-access#queryraw\n', { clientVersion: this._clientVersion })
      })
    }

    $queryRawTyped(n) {
      return this._createPrismaPromise((i) => {
        if (!this._hasPreviewFlag('typedSql'))
          throw new ee('`typedSql` preview feature must be enabled in order to access $queryRawTyped API', { clientVersion: this._clientVersion }); return this.$queryRawInternal(i, '$queryRawTyped', n)
      })
    }

    $queryRawUnsafe(n, ...i) { return this._createPrismaPromise(o => this.$queryRawInternal(o, '$queryRawUnsafe', [n, ...i])) }_transactionWithArray({ promises: n, options: i }) {
      const o = Cp.nextId(); const s = Ys(n.length); const a = n.map((l, f) => {
        if (l?.[Symbol.toStringTag] !== 'PrismaPromise')
          throw new Error('All elements of the array need to be Prisma Client promises. Hint: Please make sure you are not awaiting the Prisma client calls you intended to pass in the $transaction function.'); const g = i?.isolationLevel ?? this._engineConfig.transactionOptions.isolationLevel; const h = { kind: 'batch', id: o, index: f, isolationLevel: g, lock: s }; return l.requestTransaction?.(h) ?? l
      }); return ca(a)
    }

    async _transactionWithCallback({ callback: n, options: i }) {
      const o = { traceparent: this._tracingHelper.getTraceParent() }; const s = { maxWait: i?.maxWait ?? this._engineConfig.transactionOptions.maxWait, timeout: i?.timeout ?? this._engineConfig.transactionOptions.timeout, isolationLevel: i?.isolationLevel ?? this._engineConfig.transactionOptions.isolationLevel }; const a = await this._engine.transaction('start', o, s); let l; try { const f = { kind: 'itx', ...a }; l = await n(this._createItxClient(f)), await this._engine.transaction('commit', o, a) }
      catch (f) { throw await this._engine.transaction('rollback', o, a).catch(() => {}), f } return l
    }

    _createItxClient(n) { return me(Vt(me(ps(this), [te('_appliedParent', () => this._appliedParent._createItxClient(n)), te('_createPrismaPromise', () => ti(n)), te(Ap, () => n.id)])), [mt(hs)]) }$transaction(n, i) { let o; typeof n == 'function' ? this._engineConfig.adapter?.adapterName === '@prisma/adapter-d1' ? o = () => { throw new Error('Cloudflare D1 does not support interactive transactions. We recommend you to refactor your queries with that limitation in mind, and use batch transactions with `prisma.$transactions([])` where applicable.') } : o = () => this._transactionWithCallback({ callback: n, options: i }) : o = () => this._transactionWithArray({ promises: n, options: i }); const s = { name: 'transaction', attributes: { method: '$transaction' } }; return this._tracingHelper.runInChildSpan(s, o) }_request(n) {
      n.otelParentCtx = this._tracingHelper.getActiveContext(); const i = n.middlewareArgsMapper ?? Tp; const o = { args: i.requestArgsToMiddlewareArgs(n.args), dataPath: n.dataPath, runInTransaction: !!n.transaction, action: n.action, model: n.model }; const s = { middleware: { name: 'middleware', middleware: !0, attributes: { method: '$use' }, active: !1 }, operation: { name: 'operation', attributes: { method: o.action, model: o.model, name: o.model ? `${o.model}.${o.action}` : o.action } } }; let a = -1; const l = async (f) => {
        const g = this._middlewares.get(++a); if (g)
          return this._tracingHelper.runInChildSpan(s.middleware, M => g(f, _ => (M?.end(), l(_)))); const { runInTransaction: h, args: T, ...k } = f; const C = { ...n, ...k }; T && (C.args = i.middlewareArgsToRequestArgs(T)), n.transaction !== void 0 && h === !1 && delete C.transaction; const S = await bs(this, C); return C.model ? gs({ result: S, modelName: C.model, args: C.args, extensions: this._extensions, runtimeDataModel: this._runtimeDataModel, globalOmit: this._globalOmit }) : S
      }; return this._tracingHelper.runInChildSpan(s.operation, () => l(o))
    }

    async _executeRequest({ args: n, clientMethod: i, dataPath: o, callsite: s, action: a, model: l, argsMapper: f, transaction: g, unpacker: h, otelParentCtx: T, customDataProxyFetch: k }) {
      try {
        n = f ? f(n) : n; const C = { name: 'serialize' }; const S = this._tracingHelper.runInChildSpan(C, () => Fn({ modelName: l, runtimeDataModel: this._runtimeDataModel, action: a, args: n, clientMethod: i, callsite: s, extensions: this._extensions, errorFormat: this._errorFormat, clientVersion: this._clientVersion, previewFeatures: this._previewFeatures, globalOmit: this._globalOmit })); return Z.enabled('prisma:client') && (Le('Prisma Client call:'), Le(`prisma.${i}(${ts(n)})`), Le('Generated request:'), Le(`${JSON.stringify(S, null, 2)}
`)), g?.kind === 'batch' && await g.lock, this._requestHandler.request({ protocolQuery: S, modelName: l, action: a, clientMethod: i, dataPath: o, callsite: s, args: n, extensions: this._extensions, transaction: g, unpacker: h, otelParentCtx: T, otelChildCtx: this._tracingHelper.getActiveContext(), globalOmit: this._globalOmit, customDataProxyFetch: k })
      }
      catch (C) { throw C.clientVersion = this._clientVersion, C }
    }

    $metrics = new Bt(this); _hasPreviewFlag(n) { return !!this._engineConfig.previewFeatures?.includes(n) }$applyPendingMigrations() { return this._engine.applyPendingMigrations() }$extends = ms
  } return t
} function pa(e, t) { return Sp(e) ? [new ue(e, t), Ws] : [e, Ks] } function Sp(e) { return Array.isArray(e) && Array.isArray(e.raw) }d(); u(); c(); p(); m(); const kp = new Set(['toJSON', '$$typeof', 'asymmetricMatch', Symbol.iterator, Symbol.toStringTag, Symbol.isConcatSpreadable, Symbol.toPrimitive]); function Ip(e) {
  return new Proxy(e, { get(t, r) {
    if (r in t)
      return t[r]; if (!kp.has(r))
      throw new TypeError(`Invalid enum value: ${String(r)}`)
  } })
}d(); u(); c(); p(); m(); const export_warnEnvConflicts = void 0; export { lc as createParam, Z as Debug, Te as Decimal, wc as defineDmmfProperty, Rt as deserializeJsonResponse, oi as deserializeRawResult, Cr as DMMF, Ru as dmmfToRuntimeDataModel, Pc as empty, Ri as Extensions, Rp as getPrismaClient, Qn as getRuntime, xc as join, Ip as makeStrictEnum, bc as makeTypedQueryFactory, Bt as MetricsClient, On as objectEnumValues, J as PrismaClientInitializationError, se as PrismaClientKnownRequestError, ke as PrismaClientRustPanicError, ae as PrismaClientUnknownRequestError, ee as PrismaClientValidationError, ki as Public, Yo as raw, Fn as serializeJsonQuery, _n as skip, ue as Sql, Zo as sqltag, export_warnEnvConflicts as warnEnvConflicts, hr as warnOnce }
// # sourceMappingURL=edge-esm.js.map
